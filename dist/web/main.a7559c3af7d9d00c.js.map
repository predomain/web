{"version":3,"mappings":"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AER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,gBACNC,KAAM,QAER,CACEF,aAAc,SACdC,KAAM,QACNC,KAAM,UAER,CACEF,aAAc,SACdC,KAAM,gBACNC,KAAM,WAGVF,aAAc,oCACdC,KAAM,cACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,cACNC,KAAM,SAGVD,KAAM,mCACNE,QAAS,CACP,CACEH,aAAc,YACdC,KAAM,GACNC,KAAM,aAER,CACEF,aAAc,YACdC,KAAM,GACNC,KAAM,cAGVE,gBAAiB,OACjBF,KAAM,WACNG,UAAU,GAEZ,CACEN,OAAQ,CACN,CACEC,aAAc,YACdC,KAAM,cACNC,KAAM,cAGVD,KAAM,sBACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,WACdC,KAAM,QACNC,KAAM,YAER,CACEF,aAAc,YACdC,KAAM,cACNC,KAAM,aAER,CACEF,aAAc,YACdC,KAAM,cACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,uBACNE,QAAS,GACTC,gBAAiB,UACjBF,KAAM,WACNI,SAAS,GAEX,CACEP,OAAQ,CACN,CACEC,aAAc,WACdC,KAAM,QACNC,KAAM,YAER,CACEF,aAAc,YACdC,KAAM,cACNC,KAAM,aAER,CACEF,aAAc,YACdC,KAAM,cACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,kCACNE,QAAS,GACTC,gBAAiB,UACjBF,KAAM,WACNI,SAAS,GAEX,CACEP,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,iBACNE,QAAS,CACP,CACEH,aAAc,YACdC,KAAM,GACNC,KAAM,cAGVE,gBAAiB,OACjBF,KAAM,WACNG,UAAU,8FCvMP,IAAM23B,EAAb,MAAM,QACJvlB,YACYwlB,EACAC,EACA5Q,EACAD,GAHA3U,wBACAA,sBACAA,kBACAA,uBAGZylB,sCACEtG,EACA9I,EACAqP,EACAt2B,EACAu2B,GAEA,IAAIC,EAAW,GACf,UAAWnnB,KAAKknB,EAAa,CAC3B,MAAME,EAAK,CACTt4B,KAAMkR,EAAEiP,UACRyR,MAAOA,EACP9I,SAAUlE,UAAekE,GACzBqP,OAAQA,EACRt2B,SAAUA,EACV6kB,KAAM,GACN6R,cAAe12B,IAAaM,KAC5Bq2B,MAAO,EACPC,cAAe,EACfC,SAAUxnB,GAEZmnB,EAASrX,KAAKsX,GAEhB,OAAOD,EAGTM,sCACEP,GAEA,IAAIQ,EAAa,GACjB,UAAW1nB,KAAKknB,EAEdQ,EAAW5X,KADA9P,EAAEwnB,UAGf,OAAOE,EAGTC,mCACET,EACAhV,EACAd,GAEA,MAAMkF,EAAW/U,KAAKqmB,+BAA+BxW,GAC/CyW,EAAqB,GAC3B,UAAW7nB,KAAKknB,EAAa,CAC3B,MAAMY,EAAM,CACV9nB,EAAElR,KACFkR,EAAE0gB,MACF1gB,EAAE4X,SACF5X,EAAEinB,OACFjnB,EAAErP,SACFqP,EAAEwV,KACFxV,EAAEqnB,cACFrnB,EAAEsnB,MACFtnB,EAAEunB,eAEJO,EAAIh5B,KAAOkR,EAAElR,KACbg5B,EAAIpH,MAAQ1gB,EAAE0gB,MACdoH,EAAIlQ,SAAW5X,EAAE4X,SACjBkQ,EAAIb,OAASjnB,EAAEinB,OACfa,EAAIn3B,SAAWqP,EAAErP,SACjBm3B,EAAItS,KAAOxV,EAAEwV,KACbsS,EAAIT,cAAgBrnB,EAAEqnB,cACtBS,EAAIR,MAAQtnB,EAAEsnB,MACdQ,EAAIP,cAAgBvnB,EAAEunB,cACtBM,EAAmB/X,KAAKgY,GAE1B,MAAMC,EAAgBF,EAAmB,GAAGl3B,WAAaM,KACnD2mB,EAAWiQ,EAAmB,GAAGjQ,SACvC,IAAIoQ,EAAkB5Q,GACtB,OAAO,IAAI7E,IAAYC,IACrB8D,EACG2R,iCACCJ,EACAjQ,EACAmQ,GAEDpV,KAAMzB,IACL8W,EAAmB9W,EACZ3P,KAAK2U,gBACTnE,sBACCX,EACA,sBACA,CAAC4W,EAAiB,IAClB9V,EACA3Q,KAAK2mB,gCACL3mB,KAAK4mB,6BAEN7Q,YACAxE,MAAOjC,IACC,QAGZ8B,KAAMzB,IACL,IACQ,IAANA,GACM,OAANA,IACqB,IAArB8W,GACqB,OAArBA,EAIA,OAFAxV,EAASI,MAAK,QACdJ,EAASK,WAGXuE,GAAWlG,EACXsB,EAASI,KAAK,CACZ,CACEsU,YAAac,EAAiB,GAC9BrQ,YAAaqQ,EAAiB,GAAGzY,IAAK6Y,IACpCA,GAAGC,IAAIxmB,yBAA0CymB,IAAI,OAGzDlR,KAEF5E,EAASK,eAMjB0V,uCACEC,EACApX,GAOA,OAJkBkF,KADIsR,+BAA+BxW,GAC1B8F,UAAUC,mBACnC,sBACA,CAACqR,IAKLC,yBAAyBC,EAAsB3d,GAM7C,OAJkBuL,KADIsR,iCACK1Q,UAAUyR,iBAAiB,CACpDnT,KAAMkT,EACN3d,UAKJ6d,qBACE1B,EACAhV,EACAyF,EACAE,EACAzG,GAEA,MAAMkF,EAAW/U,KAAKqmB,+BAA+BxW,GAC/CyX,EAAQ,GACR/Q,EAAe,GACfmP,GAASC,EAAY,GAAGD,OACxBt2B,EAAWu2B,EAAY,GAAGv2B,SAC1B+vB,EAAQwG,EAAY,GAAGxG,MACvB9I,GAAWsP,EAAY,GAAGtP,SAChC,UAAW5X,KAAKknB,EACd2B,EAAM/Y,KAAK9P,EAAElR,MACbgpB,EAAahI,KAAKvO,KAAK4U,WAAW4B,cAAc/X,EAAElR,OAEpD,MAAMioB,EACJmQ,EAAY,GAAGv2B,WAAaM,KACxB,uBACA,kCACA+lB,GACJkQ,EAAY,GAAGv2B,WAAaM,KACxB,CAAC43B,EAAO/Q,EAAcH,EAAa+I,EAAO9I,GAAUqP,IACpD,CAAC4B,EAAO/Q,EAAcH,EAAaC,GAAUqP,GAAQt2B,EAAU+vB,GAC/DzJ,GAAYX,EAASY,UAAUC,mBACnCJ,EACAC,IAEF,IAAII,GACJ,OAAqB,IAAjByR,EAAMxa,QACD8C,QAAG,CACR8F,GACAtD,UACEuT,EAAY,GAAGv2B,WAAaM,KAAqB,SAAW,YAI3D,IAAIshB,IAAYC,IACrBjR,KAAK2U,gBACFnE,sBACCX,EACA2F,EACAC,GACA9E,EACA3Q,KAAK2mB,gCACL3mB,KAAK4mB,6BACL,EACAtQ,GAEDP,YACA3E,KAAMzB,KACL,IAAU,IAANA,IAAqB,OAANA,GAGjB,OAFAsB,EAASI,MAAK,QACdJ,EAASK,WAGXuE,GAAYlG,GAAgB8G,IAAInW,qBAChC2Q,EAASI,KAAK,CAACqE,GAAWG,KAC1B5E,EAASK,aAGVC,MAAOjC,KACN2B,EAASI,MAAK,GACdJ,EAASK,eAKjB+U,+BAA+BxW,EAAW,MAMxC,OALU,IAAIkB,KACZ/Q,KAAK2mB,gCACL3mB,KAAK4mB,4BACL/W,GAKA+W,kCACF,OAAyB,IAArBxX,SACKiW,EAEFF,EAGLwB,sCACF,OAAyB,IAArBvX,SACK/gB,KAEFL,mDA/OEs3B,GAA2B/a,yEAA3B+a,EAA2BjlB,QAA3BilB,EAA2B,qBAF1B,SAEDA,GAAb,kBC5BO,MAAMiC,EAAgB,CAC3B,CACE13B,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,OACdC,KAAM,WACNC,KAAM,SAGVD,KAAM,iBACNC,KAAM,SAER,CACEqC,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,WACNC,KAAM,SAER,CACEqC,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,cACNC,KAAM,SAER,CACEqC,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,SACdC,KAAM,MACNC,KAAM,WAGVD,KAAM,SACNC,KAAM,SAER,CACEqC,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,WACNC,KAAM,SAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,SACdC,KAAM,MACNC,KAAM,WAGVD,KAAM,YACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,SACdC,KAAM,MACNC,KAAM,WAGVD,KAAM,mBACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,kBACNE,QAAS,CACP,CACEH,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVE,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,cACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,WACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,SACdC,KAAM,MACNC,KAAM,WAGVD,KAAM,SACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,WACNC,KAAM,SAGVD,KAAM,oBACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVD,KAAM,QACNE,QAAS,CACP,CACEH,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVD,KAAM,WACNE,QAAS,CACP,CACEH,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVD,KAAM,MACNE,QAAS,CACP,CACEH,aAAc,SACdC,KAAM,GACNC,KAAM,WAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVD,KAAM,eACNE,QAAS,CACP,CACEH,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,mBACNE,QAAS,CACP,CACEH,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVE,gBAAiB,OACjBF,KAAM,aChXGg6B,EAAS,CACpB,CACE33B,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,OACdC,KAAM,WACNC,KAAM,SAGVD,KAAM,iBACNC,KAAM,SAER,CACEqC,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,WACNC,KAAM,SAER,CACEqC,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,cACNC,KAAM,SAER,CACEqC,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,SACdC,KAAM,MACNC,KAAM,WAGVD,KAAM,SACNC,KAAM,SAER,CACEqC,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,WACNC,KAAM,SAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,SACdC,KAAM,MACNC,KAAM,WAGVD,KAAM,YACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,SACdC,KAAM,MACNC,KAAM,WAGVD,KAAM,mBACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,kBACNE,QAAS,CACP,CACEH,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVE,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,cACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,WACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,SACdC,KAAM,MACNC,KAAM,WAGVD,KAAM,SACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,WACNC,KAAM,SAGVD,KAAM,oBACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVD,KAAM,QACNE,QAAS,CACP,CACEH,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVD,KAAM,WACNE,QAAS,CACP,CACEH,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVD,KAAM,MACNE,QAAS,CACP,CACEH,aAAc,SACdC,KAAM,GACNC,KAAM,WAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVD,KAAM,eACNE,QAAS,CACP,CACEH,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,mBACNE,QAAS,CACP,CACEH,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVE,gBAAiB,OACjBF,KAAM,aChXGi6B,EAAmC,CAC9C,CACE53B,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,iBACNC,KAAM,SAER,CACEqC,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,cACNC,KAAM,SAER,CACEqC,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,iBACNC,KAAM,SAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,YACNE,QAAS,CACP,CACEH,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,WAGVD,KAAM,QACNE,QAAS,CACP,CACEH,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,WAGVD,KAAM,YACNE,QAAS,CACP,CACEH,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,iBACNE,QAAS,CACP,CACEH,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVD,KAAM,2BACNE,QAAS,CACP,CACEH,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,aACNC,KAAM,YAGVD,KAAM,SACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,WACNE,QAAS,GACTC,gBAAiB,UACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVD,KAAM,qBACNE,QAAS,GACTC,gBAAiB,UACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,QACNE,QAAS,GACTC,gBAAiB,UACjBF,KAAM,aCnTGk6B,EAA4B,CACvC,CACE73B,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,iBACNC,KAAM,SAER,CACEqC,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEsC,SAAS,EACTxC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,cACNC,KAAM,SAER,CACEqC,WAAW,EACXxC,OAAQ,CACN,CACEyC,SAAS,EACTxC,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,iBACNC,KAAM,SAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,YACNE,QAAS,CACP,CACEH,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,WAGVD,KAAM,QACNE,QAAS,CACP,CACEH,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,WAGVD,KAAM,YACNE,QAAS,CACP,CACEH,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,iBACNE,QAAS,CACP,CACEH,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVD,KAAM,2BACNE,QAAS,CACP,CACEH,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,aACNC,KAAM,YAGVD,KAAM,SACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,WACNE,QAAS,GACTC,gBAAiB,UACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVD,KAAM,qBACNE,QAAS,GACTC,gBAAiB,UACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,QACNE,QAAS,GACTC,gBAAiB,UACjBF,KAAM,4BCxSH,MAIMm6B,EAAoB,CAC/BC,QAAS,qEACTC,QAAS,qEACTC,KAAM,qEACNC,UACE,sEAEG,IAAKC,EAKX,MALD,OAAYA,QAAe,KACzBA,kBACAA,oBACAA,cACAA,wBAJUA,EAAZ,IAAYA,GAKX,GAKM,IAAM9hB,EAAb,MAAM,QACJnG,eAEAkoB,cAAcC,EAA8B/I,EAAeuB,GACzD,MAAMyH,EAAeva,OAAOmM,OAAO4N,GAC7BS,EAAUxa,OAAOC,KAAK8Z,GAC5B,IAAIU,EAAc3H,EAAG4H,KAAK1Z,OAAQU,OAC5B6Y,EAAavZ,OAAQxO,GAAMkP,GAAEiZ,OAAO1P,SAASzY,IAAI0M,OAAS,GAI5DwC,GAAEiZ,OAAO1P,SAASsG,IAClB7P,GAAEiZ,OAAO1P,SAASqP,IAClB5Y,GAAEiZ,OAAO1P,SAAS3pB,4BAMlBs5B,EAAqC,GACzC,MAAMC,EACJrW,UAAsB8V,GAAsBzL,cACxCiM,GACJtW,UAAsB1iB,MAAoB+sB,cAC5C,UAAWnN,MAAK+Y,EAAa,CAC3B,MAAMM,EAAkBrZ,GAAEiZ,OAAOva,IAAK4a,IAC7BxW,UAAsBwW,IAAGnM,eAElC,GAAI0L,EAAatP,SAAS8P,EAAgB,IAAK,CAC7C,MAAME,GAAcT,EAAQD,EAAa7d,QAAQqe,EAAgB,KAC3DG,GAAc9oB,KAAK+oB,eACvBf,EAAgBa,IAChBvZ,GACAqZ,EACAjI,GAEIsI,GAAehpB,KAAKipB,gBACxBjB,EAAgBa,IAChBvZ,GACAqZ,EACAjI,GAEF8H,EAAkBja,KAAK,CACrB/gB,KAAMyX,SACNkM,KAAM6X,GAAa3e,cACnBiL,GAAIwT,GAAYze,cAChB6e,OAAQxI,EAAGyI,gBACX3f,MAAOxJ,KAAKopB,eAAe1I,EAAGlX,OAC9B6f,KAAM3I,EAAG4I,oBAGVX,EAAgB,KACfz5B,wCACAy5B,EAAgB,KAAOD,IAzE/B,uEA0EOC,EAAgB,IACfA,EAAgB,KAAOF,GACvBE,EAAgB,KAAOxJ,EACzB,CACA,MAAMoK,GAAaZ,EAAgB,GACnCH,EAAkBja,KAAK,CACrB/gB,KAAMyX,iBACNkM,KAAMjiB,uCACNomB,GAAIiU,GAAWlf,cACf6e,OAAQxI,EAAGyI,gBACX3f,MAAOxJ,KAAKopB,eAAe1I,EAAGlX,OAC9B6f,KAAM3I,EAAG4I,iBAGVX,EAAgB,KAAOD,IACtBC,EAAgB,KACdz5B,wCACHy5B,EAAgB,KAAOD,IACtBC,EAAgB,KAAOxJ,EAEzBqJ,EAAkBja,KAAK,CACrB/gB,KAAMyX,SACNkM,KAAM,KACNmE,GAAIpmB,uCACJg6B,OAAQxI,EAAGyI,gBACX3f,MAAOxJ,KAAKopB,eAAe1I,EAAGlX,OAC9B6f,KAAM3I,EAAG4I,YAENE,EAAoB,KAAOd,GAChCF,EAAkBja,KAAK,CACrB/gB,KAAMyX,SACNkM,KAAMwX,EAAgB,GACtBrT,GAAI,KACJ4T,OAAQxI,EAAGyI,gBACX3f,MAAOxJ,KAAKopB,eAAe1I,EAAGlX,OAC9B6f,KAAM3I,EAAG4I,YAGXX,EAAgB,KAAOz5B,wCACvBy5B,EAAgB,KAAOD,IACvBC,EAAgB,KAAOz5B,wCACvBy5B,EAAgB,KAAOD,IACO,KAA9BC,EAAgB,GAAG7b,QACW,KAA9B6b,EAAgB,GAAG7b,QAEnB0b,EAAkBja,KAAK,CACrB/gB,KAAMyX,aACNkM,KAAMwX,EAAgB,GAAGte,cACzBiL,GAAIqT,EAAgB,GAAGte,cACvB6e,OAAQxI,EAAGyI,gBACX3f,MAAOxJ,KAAKopB,eAAe1I,EAAGlX,OAC9B6f,KAAM3I,EAAG4I,YAIf,MAAMG,EAAY,IAAI1b,IACtB,IAAI2b,EAAiBlB,EACrB,OAAIA,EAAkBxa,IAAK2b,IAAOA,GAAGn8B,MAAMqrB,SAAS5T,YAClDykB,EAAiBlB,EAAkB5Z,OAAQe,IACrCA,GAAEniB,OAASyX,WAMZykB,EAAe9a,OAAQe,KAC5B,MAAMia,EAAcH,EAAUI,IAAIla,GAAEniB,KAAOmiB,GAAEuZ,QAE7C,OADAO,EAAUhT,IAAI9G,GAAEniB,KAAOmiB,GAAEuZ,SACL,IAAhBU,IAORR,eAAe5f,GACb,OAAO+P,WACLnH,KAAyBA,UAAsB5I,GAAOiK,aACtDhK,QAAQ,GAGZsf,eACEe,EACAC,EACAhF,EACArE,GAEA,OAAQoJ,QACD9B,EAAgBJ,QAEjB,OAAO7C,EAAM,QAGZiD,EAAgBD,UAEP5W,KAGT6W,EAAgBH,QAEP1W,KAGT6W,EAAgBF,KAEjB,OAAOpH,EAAGvP,MAMlB8X,gBACEa,EACAC,EACAhF,EACArE,GAEA,OAAQoJ,QACD9B,EAAgBJ,QAOJ,KAGZI,EAAgBH,QAEjB,OAAO9C,EAAM,GAVA,KAGZiD,EAAgBD,UAEjB,OAAOhD,EAAM,GAKA,KAGZiD,EAAgBF,KACnB,CACE,MAAM7T,EAAO8V,EAAe9V,KAAK4K,UAAU,GAAGmL,MAAM,YACpD,OAAO5X,UAAsB,KAAO6B,EAAK,IAAIwI,gBAMrDwN,eAAepa,GAMb,OALiB,IAAIkB,KACnB7hB,eACA8Q,KAAKkqB,eACLra,GAKJsa,kCAAkCta,GAMhC,OALiB,IAAIkB,KACnB7hB,yBACA8Q,KAAKoqB,kCACLva,GAKAua,wCACF,OAAyB,IAArBhb,SACKqY,EAEFC,EAGLwC,qBACF,OAAyB,IAArB9a,SACKmY,EAEFC,gDAjOEthB,gCAAuB7F,QAAvB6F,EAAuB,qBAFtB,SAEDA,GAAb,4ECzBO,IAAME,EAAb,MAAM,QACJrG,YAAsB4M,mBAEtB0d,qBAEE,OADWrqB,KAAKsqB,2BACNxd,OAGZyd,oBACE,OAAOvd,aAAaC,QAAQ,wBAG9Bqd,2BACE,MAAME,EAAiBxqB,KAAKuqB,oBAC5B,OACqB,OAAnBC,GACmB,SAAnBA,GACmB,KAAnBA,GACmB,OAAnBA,EAEOrd,KAAKC,MAAMod,GAEb,GAGTC,qBAAqBnd,GACnB,MAAMod,EAAmB1qB,KAAKsqB,2BAA2B9c,OACvD,CAACC,EAAajE,KACL,IAAKiE,GAAcjE,EAAMkE,WAAYlE,IAE9C,IAEImE,EAAQC,OAAOC,KAAK6c,GAC1B,IAAIC,EAAgB,IAAI,IAAI5c,IAAIJ,IAAQK,IAAKC,GAAMyc,EAAiBzc,IACpE0c,SAAgBA,EAAczc,OAAOZ,GACrCN,aAAamB,QAAQ,uBAAwBhB,KAAKiB,UAAUuc,IACrDA,EAGTC,kBAAkBtc,GAChB,MAAMoc,EAAmB1qB,KAAKsqB,2BAA2B9c,OACvD,CAACC,EAAajE,KACL,IAAKiE,GAAcjE,EAAMkE,WAAYlE,IAE9C,IAEImE,EAAQC,OAAOC,KAAK6c,GACpBC,EAAgB,IAAI,IAAI5c,IAAIJ,IAAQK,IAAKC,GAAMyc,EAAiBzc,IACtE0c,SAAcpc,KAAKD,GACnBtB,aAAamB,QAAQ,uBAAwBhB,KAAKiB,UAAUuc,IACrDA,EAGTE,mBAAmBF,EAAsCjc,GACvD,MAAMoc,EAAuB,GAC7BH,SAAc/b,OAAQC,IAChBA,EAAEnB,YAAcgB,GAClBoc,EAAqBvc,KAAKM,KAG9B7B,aAAamB,QACX,uBACAhB,KAAKiB,UAAU0c,IAEVA,EAGTC,yBACE,OAAO/d,aAAamB,QAAQ,uBAAwB,IAGtD6c,2BACEL,EACAjc,GAEA,UAAWG,KAAK8b,EACd,GAAI9b,EAAEnB,YAAcgB,EAClB,OAAO,EAGX,OAAO,gDAhFEtI,GAA0BmE,wCAA1BnE,EAA0B/F,QAA1B+F,EAA0B,qBAFzB,SAEDA,GAAb,wECDO,IAAM6kB,EAAb,MAAM,QACJlrB,YAAmBmrB,6BACnB3hB,UAAUC,GACR,IAAKA,QAAmB0S,IAAV1S,GAAuBA,EAAMsD,QAAU,EACnD,OAAO,KAET,MAAMqe,EAAWnrB,KAAKkrB,mBAAmBE,cACnCC,EAAerrB,KAAKkrB,mBAAmBI,eAAeH,GACtDI,EAAY/hB,EAAM+X,MAAM,KAC9B,GAAI/X,EAAMc,QAAQ,OAAQ,GAAMd,KAAS6hB,EAAaG,QACpD,OAAOH,EAAaG,QAAQhiB,GAE9B,IAAIiiB,EACJ,UAAWC,KAAOH,EAChB,GAAKE,EAKE,CACL,KAAIC,KAAOD,GACT,OAAOjiB,EAETiiB,EAAaA,EAAWC,OATT,CACf,KAAIA,KAAOL,EAAaG,SACtB,OAAOhiB,EAETiiB,EAAaJ,EAAaG,QAAQE,GAQtC,OAAOD,gDA1BER,GAAe1gB,0DAAf0gB,EAAevhB,UAAfuhB,GAAb,2ECGO,IAAMplB,EAAb,MAAM,QACJylB,eAAeK,GACb,OACEA,KAAQ7sB,WACoBod,IAA5Bpd,KAAkB6sB,GAIb7sB,KAAkB6sB,GAFhB7sB,QAKXssB,cACE,MAAMQ,EAAgB5rB,KAAK6rB,eAC3B,OACoB,OAAlBD,GACkB,KAAlBA,QACkB1P,IAAlB0P,GACAA,KAAiB9sB,KAEV8sB,EACEE,UAAUX,SACZW,UAAUX,SAAS5J,MAAM,KAAK,GAE9BjhB,qBAIXyrB,YACE,OAAOD,UAAUX,SAASre,QAAU,EAAI,QAAUgf,UAAUX,SAG9Da,yBAAyBN,GAEvB,OAAOO,KADkBX,eAAetrB,KAAKorB,eAC1BI,QAAQE,GAG7BQ,QAAQR,GAEN,OAAOO,KADkBX,eAAetrB,KAAKorB,eAC1BI,QAAQE,GAG7BG,eACE,OAAO7e,aAAaC,QAAQ,mBAG9Bkf,aAAahB,GACXne,aAAamB,QAAQ,kBAAmBgd,iDA9C/BtlB,gCAAkBxF,QAAlBwF,EAAkB,qBAFjB,SAEDA,GAAb,gICEO,IAAMR,EAAb,MAAM,QACJtF,YACSie,EACAyF,GADAzjB,kBACAA,qBAGTosB,eAAelI,GACb,MAAMrhB,EAAMuM,aAAqBA,kBAA0BkI,cAC3D,OAAO,IAAItG,IAAYC,IACrB,MAAMsG,EAAQC;;6DAEyC0M;;;;;;;;;;;;;;;;SAiBvDzM,aAAQ5U,EAAK0U,GAAOnG,KAAM6C,IACxBhD,EAASI,KAAK4C,GACdhD,EAASK,eAKf+a,cAAcxc,EAAoBkH,GAChC,OAAO,IAAI/F,IAAYC,IACpBpB,EACEsU,YAAYpN,GACZ3F,KAAMzB,IACLsB,EAASI,KAAK1B,GACdsB,EAASK,aAEVC,MAAOjC,IACN2B,EAASI,MAAK,GACdJ,EAASK,eAKjBgb,WAAWzc,EAAoBqU,GAC7B,OAAO,IAAIlT,IAAYC,IACpBpB,EACE0c,cAAcrI,GACd9S,KAAMzB,IACLsB,EAASI,KAAK1B,GACdsB,EAASK,aAEVC,MAAOjC,IACN2B,EAASI,MAAK,GACdJ,EAASK,eAKjBkb,YAAY3c,EAAoBkH,EAAiB0V,GAC/C,OAAO,IAAIzb,IAAYC,IACpBpB,EACEmH,YAAYD,GACZ3F,KAAMhiB,GACEA,EAAS88B,QAAQO,IAEzBrb,KAAMzB,IACLsB,EAASI,KAAK1B,GACdsB,EAASK,aAEVC,MAAOjC,IACN2B,EAASI,MAAK,GACdJ,EAASK,eAKjBob,mBAAmB7c,EAAoBkH,GACrC,OAAO,IAAI/F,IAAYC,IACpBpB,EACEmH,YAAYD,GACZ3F,KAAMhiB,GACEA,EAAS6nB,kBAEjB7F,KAAMzB,IACL,IAAIuH,EAAW,WACXvH,EAAErF,QAAQ,UAAW,EACvB4M,GAAY,kBAAoBvH,EAAEwH,QAAQ,UAAW,IAC5CxH,EAAErF,QAAQ,UAAW,IAC9B4M,GAAY,kBAAoBvH,EAAEwH,QAAQ,UAAW,KAEvDlG,EAASI,KAAK6F,GACdjG,EAASK,aAEVC,MAAOjC,IACN2B,EAASI,MAAK,GACdJ,EAASK,6DAtGNjM,GAAWkF,mDAAXlF,EAAWhF,QAAXgF,EAAW,qBAFV,SAEDA,GAAb,6DCEO,IAAMC,EAAb,MAAM,QACJvF,YAAmB4sB,0BAEnBC,kBACE5f,aAAaiW,WAAW,uBACxBjW,aAAaiW,WAAW,iBACxBjW,aAAaiW,WAAW,iCAG1B4J,gBAAgBC,GACd9f,aAAamB,QAAQ,sBAAuBhB,KAAKiB,UAAU0e,IAG7DC,kBACE,OAAO/f,aAAaC,QAAQ,uBAG9B+f,uBACE9M,EACA+M,EAAiC,MAEjC,IAAIC,EACJ,OAAqB,OAAjBD,EACFC,EAAcltB,KAAKmtB,kCAAkCjN,GAChDkN,EAAiB5/B,OAAS0Z,YAC/BgmB,EAAcltB,KAAKqtB,2BACjBnN,EACA+M,EAAavH,QAENuH,EAAaz/B,OAAS0Z,WAC/BgmB,EAAcltB,KAAKstB,0BACjBpN,EACA+M,EAAa7N,GACb6N,EAAavH,QAENuH,EAAaz/B,OAAS0Z,aAC/BgmB,EAAcltB,KAAKutB,wBAAwBrN,EAAS+M,EAAapqB,MAE5DqqB,EAGTM,oBACE,OAAOpe,aAAqBA,kBAA0B8Q,QAGxDiN,kCAAkCM,GAChC,MAAMC,EAAevgB,KAAKC,MACxBgC,aAAqBA,kBAA0Bue,aAE3CC,EAAoBhT,KAAKiT,MAAMjT,KAAKkT,SAAWJ,EAAa5gB,QAClE,OAAO,IAAIihB,IACTN,EACAC,EAAaE,IAIjBP,2BAA2BI,EAAe/H,GACxC,OAAO,IAAIqI,IAAmCN,EAAO/H,GAGvD4H,0BAA0BG,EAAerO,EAAYsG,GACnD,OAAO,IAAIqI,IAAyBN,EAAO,CACzCO,UAAW5O,EACX6O,cAAevI,IAInB6H,wBAAwBE,EAAe5qB,GACrC,OAAO,IAAIkrB,IAA0BlrB,EAAK4qB,iDApEjCnoB,GAAkBiF,uCAAlBjF,EAAkBjF,QAAlBiF,EAAkB,qBAFjB,SAEDA,GAAb,4KCDA,MAAMsN,WAKC,IAAMtM,EAAb,MAAM,QACJvG,YACS0b,EACA4C,EACA3C,EACAsC,EACGkQ,GAJHluB,iBACAA,yBACAA,mBACAA,kBACGA,cAEV,MAAMmuB,GAAU,IAAItkB,MAAOqO,UAC3B,QAAgCgE,IAA5BtJ,EAAUwb,cAA6B,CACzC,MAAMC,EAAY,IAAIC,IAAc,CAClCC,OAAQ,mCACRC,YAAaC,IACbC,mBAAoB,CAClBC,YAAaruB,oCACbsuB,aAAc,IAEhBC,WAAYvuB,eAEd+tB,EAAUpO,GAAG,UAAW,CAAC6O,EAAO3S,KAC9B,GAAI2S,EACF,MAAMA,EAER,MAAQ1O,WAAUF,WAAY/D,EAAQzL,OAAO,GAE7C,GADuBkC,EAAUsN,UACVA,EAMrB,OALAlgB,KAAKqe,kBAAkBgC,aAEvB0O,EADqBX,cAClBY,cACHhvB,KAAKge,WAAWiR,cAAc9pB,wBAC9BnF,KAAK0b,YAAYyE,oBAAoBrW,SAASoW,EAAS,KAGzDlgB,KAAK2b,QAAQwS,EAAS/N,EAAS,MAEjCiO,EAAUpO,GAAG,iBAAkB,CAAC6O,EAAO3S,KACrC,GAAI2S,EACF,MAAMA,EAER,MAAQ1O,WAAUF,WAAY/D,EAAQzL,OAAO,GAG7C,GAFuBkC,EAAUsN,UAGZA,GAFEtN,EAAUsc,aAGhBhL,cAAc7Z,gBAC3B+V,EAAS,GAAG/V,cAQd,OANArK,KAAKqe,kBAAkBgC,aAEvB0O,EADqBX,cAClBY,cACHhvB,KAAK0b,YAAYyE,oBAAoBrW,SAASoW,EAAS,KACvDlgB,KAAKqe,kBAAkBgC,kBACvBrgB,KAAK0b,YAAYyT,cAAc,OAAQzuB,YAI3C2tB,EAAUpO,GAAG,aAAc,CAAC6O,EAAO3S,KACjC,GAAI2S,EACF,MAAMA,IAGVlc,EAAUwb,cAAgBC,GAI9Be,gBACExc,EAAUwb,cAAcgB,gBAG1BzT,QAAQxR,EAAcklB,GACpBrvB,KAAKge,WAAWsR,aAAa,CAC3BC,WAAYjoB,mBACZ7Y,QAAS4gC,IAIb/O,aACE,OAAO1N,EAAUsN,QAGnB7D,YAAYoE,GACV,OAAO,IAAIzP,IAAYC,IACrB2B,EAAUwb,cACPoB,gBAAgB/O,GAChBrP,KAAMsP,IACL,GAAW,OAAPA,GAAeA,EAAG5T,QAAU,QAAYoP,IAAPwE,EAGnC,OAFAzP,EAASI,MAAK,QACdJ,EAASK,WAGXL,EAASI,KAAKqP,GACdzP,EAASK,aAGVC,MAAOjC,IACN2B,EAASI,MAAK,GACdJ,EAASK,6DAhGNhL,GAAoBiE,wFAApBjE,EAAoBjG,QAApBiG,EAAoB,qBAFnB,SAEDA,GAAb,6KCRO,IAAMmpB,EAAb,MAAM,QACJ1vB,YAAmBie,EAAsCtH,GAAtC1W,kBAAsCA,YAEzD0vB,aAAaliC,EAAuB6Z,WAClC,MAAMsoB,EAAcniC,IAAS6Z,UAAuB,GAAK,GACnDuoB,EACJ,cACCpiC,IAAS6Z,UACN,sDACA,IACN,IAAIwoB,EAAc,GAClB,QAAS3c,EAAI,EAAGA,EAAIyc,EAAazc,IAAK,CACpC,MAAM4c,EAAOlV,KAAKiT,MAAMjT,KAAKkT,SAAW8B,EAAY9iB,QACpD+iB,GAAeD,EAAY/Q,UAAUiR,EAAMA,EAAO,GAEpD,OAAOD,EAGTzO,wBAAwB3yB,GACtB,IACEmuB,KAAiBnuB,SAEjB,OAAO,EAET,OAAO,EAGTshC,sBAAsBthC,GACpB,OAA8C,IAA1CuR,KAAKohB,wBAAwB3yB,MAG5B,uBAAuBuhC,KAAKvhC,KAG/B,sBAAsBuhC,KAAKvhC,IAC3B,sBAAsBuhC,KAAKvhC,IAEpB,iDArCAghC,GAAallB,oDAAbklB,EAAapvB,QAAbovB,EAAa,qBAFZ,SAEDA,GAAb,gPCNO,MAAMQ,EAAsB,yCACtBC,EAAwB,yCACxBC,EACX,iDACWC,EAAiB,gCACjBC,EAAiB,mCACjBC,EAAoB,uCACpBC,EAAqB,wCAGrBC,EAAoB,uCACpBC,EAAqB,wCACrBC,EAAoB,uCACpBC,EAAmB,sCAE1B,QAEJ5wB,cADSC,UAAOiwB,GAIZ,QAEJlwB,YAAmBoc,kBADVnc,UAAOkwB,GAIZ,QAEJnwB,YAAmBoc,kBADVnc,UAAOmwB,GAIZ,QAEJpwB,YAAmBoc,kBADVnc,UAAO2wB,GAIZ,QAEJ5wB,YAAmBoc,EAA+ByU,GAAS,GAAxC5wB,eAA+BA,cADzCA,UAAOowB,GAIZ,QAEJrwB,YAAmBoc,EAA+ByU,GAAS,GAAxC5wB,eAA+BA,cADzCA,UAAOswB,GAIZ,QAEJvwB,YAAmBoc,EAAiCyU,GAAS,GAA1C5wB,eAAiCA,cAD3CA,UAAOuwB,GAcZ,QAEJxwB,YAAmBoc,EAAwByU,GAAS,GAAjC5wB,eAAwBA,cADlCA,UAAOwwB,GAIZ,QAEJzwB,YAAmBoc,EAA0ByU,GAAS,GAAnC5wB,eAA0BA,cADpCA,UAAOywB,GAIZ,QAEJ1wB,YAAmB6wB,GAAS,GAAT5wB,cADVA,UAAO0wB,GAIZ,QAEJ3wB,YAAmBoc,EAA+ByU,GAAS,GAAxC5wB,eAA+BA,cADzCA,UAAOqwB,6MC5EX,MAAMQ,EACX,4CACWC,EAAoB,mCACpBC,EAAoB,sCACpBC,EAAuB,0CACvBC,EAAwB,2CAGxBC,EAAuB,0CACvBC,EAAwB,2CACxBC,EAAuB,0CACvBC,EAAsB,4CAE7B,QAEJtxB,cADSC,UAAO6wB,GAIZ,QAEJ9wB,YAAmBoc,kBADVnc,UAAOqxB,GAIZ,QAEJtxB,YAAmBoc,EAAqCyU,GAAS,GAA9C5wB,eAAqCA,cAD/CA,UAAO8wB,GAIZ,QAEJ/wB,YAAmBoc,EAAqCyU,GAAS,GAA9C5wB,eAAqCA,cAD/CA,UAAOgxB,GAIZ,QAEJjxB,YAAmBoc,EAAuCyU,GAAS,GAAhD5wB,eAAuCA,cADjDA,UAAOixB,GAcZ,QAEJlxB,YAAmBoc,EAAwByU,GAAS,GAAjC5wB,eAAwBA,cADlCA,UAAOkxB,GAIZ,QAEJnxB,YAAmBoc,EAA0ByU,GAAS,GAAnC5wB,eAA0BA,cADpCA,UAAOmxB,GAIZ,QAEJpxB,YAAmB6wB,GAAS,GAAT5wB,cADVA,UAAOoxB,GAIZ,QAEJrxB,YAAmBoc,EAAqCyU,GAAS,GAA9C5wB,eAAqCA,cAD/CA,UAAO+wB,4MChEX,MAAMO,EACX,6CACWC,EAAwB,2CACxBC,EACX,8CACWC,EACX,kDACWC,EACX,mDAKWC,EACX,kDACWC,EACX,mDACWC,EACX,kDACWC,EACX,oDAEI,QAEJ/xB,cADSC,UAAOsxB,GAIZ,QAEJvxB,YAAmBoc,kBADVnc,UAAO8xB,GAIZ,QAEJ/xB,YAAmBoc,EAAqCyU,GAAS,GAA9C5wB,eAAqCA,cAD/CA,UAAOuxB,GAIZ,QAEJxxB,YAAmBoc,EAAqCyU,GAAS,GAA9C5wB,eAAqCA,cAD/CA,UAAOyxB,GAIZ,QAEJ1xB,YAAmBoc,EAAuCyU,GAAS,GAAhD5wB,eAAuCA,cADjDA,UAAO0xB,GAcZ,QAEJ3xB,YAAmBoc,EAAwByU,GAAS,GAAjC5wB,eAAwBA,cADlCA,UAAO2xB,GAIZ,QAEJ5xB,YAAmBoc,EAA0ByU,GAAS,GAAnC5wB,eAA0BA,cADpCA,UAAO4xB,GAIZ,QAEJ7xB,cADSC,UAAO6xB,GAIZ,QAEJ9xB,YAAmBoc,EAAqCyU,GAAS,GAA9C5wB,eAAqCA,cAD/CA,UAAOwxB,sECzEX,MAAMO,EACX,yCACWC,EACX,kDAEI,QAEJjyB,YAAmBoc,kBADVnc,UAAO+xB,qECNX,MAAME,EAAoB,kCAGpBC,EAAoB,2CAE3B,QAEJnyB,YAAmBoc,kBADVnc,UAAOiyB,yTCAX,MAAME,EAAmB,mCACnBC,EAA+B,mCAC/BC,EACX,qCACWC,EAAwB,mCACxBC,EAAoB,mCACpBC,EAAgB,8BAChBC,EAAoB,qCACpBC,EAAmB,+BACnBC,EAAmB,+BACnBC,EAAuB,8BACvBC,EAAuB,sCACvBC,EAAqB,qCACrBC,EAAiB,iCACjBC,EACX,uDACWC,EAAgB,uCAChBC,EAAgB,oCAEvB,QAEJnzB,cADSC,UAAOmyB,GAGZ,QAEJpyB,YAAmBoc,kBADVnc,UAAO+yB,GAIZ,QAEJhzB,YAAmBoc,kBADVnc,UAAO8yB,GAIZ,QAEJ/yB,YAAmBoc,EAAyBgX,GAAW,GAApCnzB,eAAyBA,gBADnCA,UAAOsyB,GAIZ,QAEJvyB,YAAmBoc,kBADVnc,UAAOyyB,GAIZ,QAEJ1yB,YAAmBoc,kBADVnc,UAAO0yB,GAIZ,QAEJ3yB,cADSC,UAAOoyB,GAIZ,QAEJryB,cADSC,UAAOqyB,GAIZ,QAEJtyB,YAAmBoc,EAAwBiX,GAAe,GAAvCpzB,eAAwBA,oBADlCA,UAAO2yB,GAIZ,QAEJ5yB,YAAmBoc,kBADVnc,UAAOuyB,GASZ,QAEJxyB,YAAmBoc,kBADVnc,UAAO4yB,GAIZ,QAEJ7yB,YAAmBoc,kBADVnc,UAAO6yB,GAIZ,QAEJ9yB,cADSC,UAAOgzB,GASZ,QAEJjzB,YAAmBoc,kBADVnc,UAAOkzB,qRCnGX,MAAMG,EAAsB,wCACtBC,EACX,uDAGWC,EAAmB,oCACnBC,EAAgB,8BAChBC,EAAgB,iCAChBC,EAAmB,qCACnBC,EAAoB,sCAGpBC,EAAiB,kCACjBC,EAAmB,qCACnBC,EAAoB,sCACpBC,EAAmB,qCACnBC,EAAoB,sCACpBC,EAAkB,oCAEzB,QAEJl0B,cADSC,UAAOqzB,GAGZ,QAEJtzB,cADSC,UAAOuzB,GAIZ,QAEJxzB,cADSC,UAAOg0B,GAIZ,QAEJj0B,YAAmBoc,kBADVnc,UAAO4zB,GAIZ,QAEJ7zB,YAAmBoc,kBADVnc,UAAOi0B,GAIZ,QAEJl0B,YAAmBoc,kBADVnc,UAAOwzB,GAIZ,QAEJzzB,YAAmBoc,kBADVnc,UAAO0zB,GAIZ,QAEJ3zB,YAAmBoc,kBADVnc,UAAO2zB,GAcZ,QAEJ5zB,YAAmBoc,kBADVnc,UAAO6zB,GAIZ,QAEJ9zB,YAAmBoc,kBADVnc,UAAO8zB,GAIZ,QAEJ/zB,cADSC,UAAO+zB,GAIZ,QAEJh0B,YAAmBoc,kBADVnc,UAAOszB,GAIZ,QAEJvzB,YAAmBoc,kBADVnc,UAAOyzB,wOCtFX,MAAMS,EAAuB,kCACvBC,EAAe,mCACfC,EAAe,6BACfC,EAAe,oCACfC,EAAe,sCACfC,EAAkB,6BAClBC,EACX,kDACWC,EAAa,iDACbC,EAAU,8BACVC,EAAa,kCACbC,EAAe,qCAEtB,QAEJ70B,cADSC,UAAOk0B,GAIZ,QAEJn0B,YAAmBoc,kBADVnc,UAAOq0B,GAIZ,QAEJt0B,YACSoc,kBAFAnc,UAAOm0B,GAUZ,QAEJp0B,YAAmBoc,kBADVnc,UAAO20B,GAIZ,QAEJ50B,YAAmBoc,kBADVnc,UAAOo0B,GASZ,QAEJr0B,cADSC,UAAOw0B,GAIZ,QAEJz0B,cADSC,UAAOu0B,GAIZ,QAEJx0B,cADSC,UAAOy0B,GAIZ,QAEJ10B,YAAmBoc,kBADVnc,UAAO40B,GAIZ,QAEJ70B,YAAmBoc,kBADVnc,UAAO00B,0MCpDX,IAAMnvB,EAAb,MAAM,QAIJxF,YAAmB80B,gBACjB70B,KAAK80B,WAAa90B,KAAK60B,MAAMplB,MAAKslB,QAAOC,OACzCh1B,KAAKi1B,MAAQj1B,KAAK60B,MAAMplB,MAAKslB,QAAOG,OAGtCC,eACEn1B,KAAK60B,MAAMO,SAAS,IAAIC,MAG1B/F,aAAaxC,GACX9sB,KAAK60B,MAAMO,SAAS,IAAIE,KAAaxI,IAGvCyI,aAAaC,GACXx1B,KAAK60B,MAAMO,SAAS,IAAIK,KAAaD,IAGvCE,kBACE11B,KAAK60B,MAAMO,SAAS,IAAIO,MAG1BtV,aACErgB,KAAK60B,MAAMO,SAAS,IAAIQ,MAG1BC,uBACE71B,KAAK60B,MAAMO,SAAS,IAAIU,MAG1B7G,cAAcH,GACZ9uB,KAAK60B,MAAMO,SAAS,IAAIW,KAAajH,IAGvCkH,QAAQC,GACNj2B,KAAK60B,MAAMO,SAAS,IAAIc,KAAQD,IAGlCE,WAAWrJ,GACT9sB,KAAK60B,MAAMO,SAAS,IAAIgB,KAAWtJ,kDA1C1BvnB,GAAiBgF,wCAAjBhF,EAAiBlF,QAAjBkF,EAAiB,qBAFhB,SAEDA,GAAb,kBCSO,IAAM8wB,EAAb,MAAM,QASJt2B,YAAsB80B,gBACpB70B,KAAKs2B,cAAgBt2B,KAAK60B,MAAMplB,QAAKslB,MAAOwB,OAC5Cv2B,KAAKw2B,iBAAmBx2B,KAAK60B,MAAMplB,MAAKslB,QAAO0B,OAC/Cz2B,KAAK02B,oBAAsB12B,KAAK60B,MAAMplB,QAAKslB,MAAO4B,OAClD32B,KAAK42B,sBAAwB52B,KAAK60B,MAAMplB,MACtCslB,QAAO8B,OAET72B,KAAK82B,aAAe92B,KAAK60B,MAAMplB,MAAKslB,QAAOgC,OAG7C5B,eACEn1B,KAAK60B,MAAMO,SAAS,IAAI4B,MAG1B1jB,cAAc2jB,GACZj3B,KAAK60B,MAAMO,SAAS,IAAI8B,KAAsBD,IAGhDE,cAActT,GACZ7jB,KAAK60B,MAAMO,SAAS,IAAIgC,KAAcvT,IAGxCwT,mBACEr3B,KAAK60B,MAAMO,SAAS,IAAIkC,MAG1BC,cAAc1T,GACZ7jB,KAAK60B,MAAMO,SAAS,IAAIoC,KAAiB3T,EAAQ4T,gBAGnDzU,eAAe0U,GACb13B,KAAK60B,MAAMO,SACT,IAAIuC,KAAkBD,EAAS1pB,IAAKoW,GAAMA,EAAEqT,iBAIhDG,oBACE53B,KAAK60B,MAAMO,SAAS,IAAIyC,MAG1BC,cAAcjU,GACZ7jB,KAAK60B,MAAMO,SAAS,IAAI2C,KAAiBlU,IAG3CmU,cAAcnU,GACZ7jB,KAAK60B,MAAMO,SAAS,IAAI6C,KAAcpU,IAGxCqU,WAAWC,GACT,OAAOn4B,KAAK60B,MAAMplB,MAAKslB,WAAOqD,MAAcD,KAG9CE,cACE,OAAOr4B,KAAK60B,MAAMplB,MAAKslB,QAAOsD,OAGhCC,0BACEt4B,KAAK60B,MAAMO,SAAS,IAAImD,UAAgBrc,kDAlE/Bma,GAAoB9rB,wCAApB8rB,EAAoBh2B,QAApBg2B,EAAoB,qBAFnB,SAEDA,GAAb,kBCTO,IAAMmC,EAAb,MAAM,QAGJz4B,YAAmB80B,gBACjB70B,KAAKy4B,qBAAuBz4B,KAAK60B,MAAMplB,MAAKslB,QAAO2D,OAGrDvD,eACEn1B,KAAK60B,MAAMO,SAAS,IAAIuD,MAG1BC,YAAYC,GACV74B,KAAK60B,MAAMO,SAAS,IAAI0D,KAAkBD,IAG5CpqB,eAAeoqB,GACb74B,KAAK60B,MAAMO,SAAS,IAAI2D,KAAqBF,EAASzZ,KAGxD5Q,qBACExO,KAAK60B,MAAMO,SAAS,IAAI4D,MAG1BC,gBAAgBJ,GACd74B,KAAK60B,MAAMO,SAAS,IAAI8D,KAAsBL,EAAS7qB,IAAKoW,GAAMA,EAAEhF,MAGtE+Z,eAAeN,GACb74B,KAAK60B,MAAMO,SAAS,IAAIgE,KAAqBP,IAG/CQ,kBAAkBvrB,GAChB9N,KAAK60B,MAAMO,SAAS,IAAIkE,KAAsBxrB,IAGhDyrB,eAAeV,GACb74B,KAAK60B,MAAMO,SAAS,IAAIoE,KAAkBX,IAG5CY,YAAYC,GACV,OAAO15B,KAAK60B,MAAMplB,MAAKslB,WAAO4E,MAAkBD,KAGlDE,eACE,OAAO55B,KAAK60B,MAAMplB,MAAKslB,QAAO8E,OAGhCC,2BACE95B,KAAK60B,MAAMO,SAAS,IAAI2E,UAAoB7d,kDAhDnCsc,GAAwBjuB,wCAAxBiuB,EAAwBn4B,QAAxBm4B,EAAwB,qBAFvB,SAEDA,GAAb,iBCAO,IAAMwB,EAAb,MAAM,QAGJj6B,YAAmB80B,gBACjB70B,KAAKi6B,yBAA2Bj6B,KAAK60B,MAAMplB,MACzCslB,QAAOmF,OAIX/E,eACEn1B,KAAK60B,MAAMO,SAAS,IAAI+E,MAG1BC,gBAAgBj3B,GACdnD,KAAK60B,MAAMO,SAAS,IAAIiF,KAAsBl3B,IAGhD0nB,mBAAmB1nB,GACjBnD,KAAK60B,MAAMO,SAAS,IAAIkF,KAAyBn3B,EAAaic,KAGhEmb,oBAAoBp3B,GAClBnD,KAAK60B,MAAMO,SACT,IAAIoF,KAA0Br3B,EAAa6K,IAAKoW,GAAMA,EAAEhF,MAI5D2L,yBACE/qB,KAAK60B,MAAMO,SAAS,IAAIqF,MAG1BC,mBAAmBv3B,GACjBnD,KAAK60B,MAAMO,SAAS,IAAIuF,KAAyBx3B,IAGnDy3B,sBAAsBjQ,GACpB3qB,KAAK60B,MAAMO,SAAS,IAAIyF,KAA0BlQ,IAGpDmQ,mBAAmB33B,GACjBnD,KAAK60B,MAAMO,SAAS,IAAI2F,KAAsB53B,IAGhD63B,gBAAgBC,GACd,OAAOj7B,KAAK60B,MAAMplB,MAAKslB,WAAOmG,MAAsBD,KAGtDE,mBACE,OAAOn7B,KAAK60B,MAAMplB,MAAKslB,QAAOqG,OAGhCC,+BACEr7B,KAAK60B,MAAMO,SAAS,IAAIkG,UAAwBpf,kDApDvC8d,GAA4BzvB,wCAA5ByvB,EAA4B35B,QAA5B25B,EAA4B,qBAF3B,SAEDA,GAAb,kBCJO,IAAMuB,EAAb,MAAM,QAGJx7B,YAAmB80B,gBACjB70B,KAAKw7B,kBAAoBx7B,KAAK60B,MAAMplB,MAAKslB,QAAO0G,OAGlDtG,eACEn1B,KAAK60B,MAAMO,SAAS,IAAIsG,MAG1B9C,YAAY51B,GACVhD,KAAK60B,MAAMO,SAAS,IAAIuG,KAAe34B,IAGzCyL,eAAezL,GACbhD,KAAK60B,MAAMO,SAAS,IAAIwG,KAAkB54B,EAASoc,KAGrD5Q,qBACExO,KAAK60B,MAAMO,SAAS,IAAIyG,MAG1B5C,gBAAgB6C,GACd97B,KAAK60B,MAAMO,SAAS,IAAI2G,KAAmBD,EAAW9tB,IAAKoW,GAAMA,EAAEhF,MAGrE+Z,eAAen2B,GACbhD,KAAK60B,MAAMO,SAAS,IAAI4G,KAAkBh5B,IAG5Cq2B,kBAAkByC,GAChB97B,KAAK60B,MAAMO,SAAS,IAAI6G,KAAmBH,IAG7CvC,eAAev2B,GACbhD,KAAK60B,MAAMO,SAAS,IAAI8G,KAAel5B,IAGzCy2B,YAAYC,GACV,OAAO15B,KAAK60B,MAAMplB,MAAKslB,WAAOoH,MAAezC,KAG/CE,eACE,OAAO55B,KAAK60B,MAAMplB,MAAKslB,QAAOqH,OAGhCtC,2BACE95B,KAAK60B,MAAMO,SAAS,IAAIiH,UAAiBngB,kDAhDhCqf,GAAqBhxB,wCAArBgxB,EAAqBl7B,QAArBk7B,EAAqB,qBAFpB,SAEDA,GAAb,6GCVO,IAAM71B,EAAb,MAAM,QAGJ3F,YAAmB80B,gBACjB70B,KAAKs8B,8BAAgCt8B,KAAK60B,MAAMplB,MAC9CslB,QAAOwH,OAIXC,yBAAyBC,GACvBC,WAAW,KACT18B,KAAK60B,MAAMO,SAAS,IAAIuH,KAAyBF,KAChD,KAGLG,4BACEF,WAAW,KACT18B,KAAK60B,MAAMO,SACT,IAAIuH,KAAyBE,uDAlBxBn3B,GAA6B6E,wCAA7B7E,EAA6BrF,QAA7BqF,EAA6B,qBAF5B,SAEDA,GAAb,4GCAO,IAAMD,EAAb,MAAM,QAGJ1F,YAAmB80B,gBACjB70B,KAAK88B,gBAAkB98B,KAAK60B,MAAMplB,MAAKslB,QAAOgI,OAGhDC,kBAAkBP,GAChBC,WAAW,KACT18B,KAAK60B,MAAMO,SAAS,IAAI6H,KAAkBR,MAI9CS,sBACER,WAAW,KACT18B,KAAK60B,MAAMO,SAAS,IAAI6H,KAAkBE,uDAfnC13B,GAAsB8E,wCAAtB9E,EAAsBpF,QAAtBoF,EAAsB,qBAFrB,SAEDA,GAAb,oKCkCO,IAAMD,EAAb,MAAM,QASJzF,YACSge,EACA8W,EACAuI,EACAC,EACAC,EACApP,GALAluB,cACAA,aACAA,uBACAA,6BACAA,cACAA,cAEPA,KAAKu9B,YAAcv9B,KAAK60B,MAAMplB,MAAKslB,QAAOyI,OAC1Cx9B,KAAKy9B,eAAiBz9B,KAAK60B,MAAMplB,QAAKslB,MAAO2I,OAC7C19B,KAAK29B,gBAAkB39B,KAAK60B,MAAMplB,QAAKslB,MAAO6I,OAC9C59B,KAAK69B,gBAAkB79B,KAAK60B,MAAMplB,MAAKslB,QAAO+I,OAC9C99B,KAAK+9B,kBAAoB/9B,KAAK60B,MAAMplB,QAAKslB,MAAOiJ,OAChDh+B,KAAKi+B,mBAAqBj+B,KAAK60B,MAAMplB,MAAKslB,QAAOmJ,OACjDl+B,KAAKm+B,gBAAkBn+B,KAAK60B,MAAMplB,MAAKslB,QAAOqJ,OAGhDjJ,eACEn1B,KAAK60B,MAAMO,SAAS,IAAIiJ,MAG1BC,yBACEC,SAASC,eAAe,wBAAwBC,MAAMC,QAAU,OAChE1+B,KAAK60B,MAAMO,SAAS,IAAIuJ,MAG1BC,2BACE5+B,KAAKs9B,OAAO5oB,KAAKrM,IAAwB,CACvC4L,KAAM,CACJ4qB,UAAW,0BACXC,QAAS,2BAEXC,WAAY,uBAIhBC,qBAAqBC,EAAuB9L,GAAW,GACrDnzB,KAAK60B,MAAMO,SAAS,IAAI8J,KAAsBD,EAAc9L,IAG9DgM,eAAelS,GACbjtB,KAAK60B,MAAMO,SAAS,IAAIgK,KAAoBnS,IAG9CoS,aAAavQ,GACX9uB,KAAK60B,MAAMO,SAAS,IAAIkK,KAAkBxQ,IAG5CyQ,aAAahlB,GACXva,KAAK60B,MAAMO,SAAS,IAAIoK,KAAkBjlB,IAG5CklB,yBACElB,SAASC,eAAe,wBAAwBC,MAAMC,QAAU,OAChE1+B,KAAK60B,MAAMO,SAAS,IAAIsK,MAG1BC,cAAcC,GACZ5/B,KAAK60B,MAAMO,SAAS,IAAIyK,KAAqBD,IAC7C5/B,KAAKo9B,gBAAgBF,sBAGvB4C,gBAAgBC,GACd//B,KAAK60B,MAAMO,SAAS,IAAI4K,KAAqBD,IAG/C5f,oBAAoB8f,EAAmB7M,GAAe,GACpDpzB,KAAK60B,MAAMO,SAAS,IAAI8K,KAAkBD,EAAW7M,IAGvD+M,0BAA0Bpd,EAAqBqQ,GAAe,GAG5DpzB,KAAK60B,MAAMO,SAAS,IAAI8K,KAFJ9wB,aAAqB2T,GACX7C,QACuBkT,IAGvDgN,8BACEpgC,KAAK60B,MAAMO,SAAS,IAAIiL,MAG1BC,aAAaC,GACXvgC,KAAK60B,MAAMO,SAAS,IAAIoL,KAAkBD,IAG5CpR,cAAcsR,EAAmBC,GAC/B1gC,KAAK60B,MAAMO,SACT,IAAIuL,KAAc,CAChBrmB,MAAOmmB,EACPG,OAAQF,KAGZ1gC,KAAKo9B,gBAAgBF,sBACrBl9B,KAAKq9B,sBAAsBT,0EArGlBp3B,GAAkB+E,mGAAlB/E,EAAkBnF,QAAlBmF,EAAkB,qBAFjB,SAEDA,GAAb,mJC1CO,MAAMq3B,EAA2D,CACtEgE,qBAAiB3kB,GAGb,WACJ3B,EAAoCsiB,EACpCiE,GAEA,OAAQA,EAAOtzC,OACRukC,KACI+O,EAAO3kB,QAQP5B,gBClBN,MAAM4iB,EAA6C,CACxD4D,6BAAyB7kB,EACzB8kB,mBAAe9kB,GAGX,WACJ3B,EAA6B4iB,EAC7B2D,GAEA,OAAQA,EAAOtzC,OACRykC,KACI6O,EAAO3kB,QAQP5B,ECtBN,IAAK0mB,EAMX,MAND,OAAYA,QAAc,KACxBA,wBACAA,wCACAA,oCACAA,4BACAA,oCALUA,EAAZ,IAAYA,GAMX,yBCaD,MAAMC,EAAqC,CACzCC,sBAAkBjlB,EAClBklB,gBAAgB,EAChBC,sBAAsB,EACtBC,cAAehhC,iBACfihC,iBAAkB,EAClBze,eAAW5G,EACXslB,eAAWtlB,EACXulB,UAAWR,oBACXS,mBAAexlB,EACfylB,sBAAkBzlB,EAClB0lB,eAAe,GAGX,WACJrnB,EAAyB2mB,EACzBJ,GAEA,OAAQA,EAAOtzC,WACRglC,KAmBH,MAlBiB,IACZjY,EACH+mB,cACE,kBAAmBR,EAAO3kB,QACtB2kB,EAAO3kB,QAAQmlB,cACf/mB,EAAM+mB,cACZI,cACE,kBAAmBZ,EAAO3kB,QACtB2kB,EAAO3kB,QAAQulB,cACfnnB,EAAMmnB,cACZC,iBACE,qBAAsBb,EAAO3kB,QACzB2kB,EAAO3kB,QAAQwlB,iBACfpnB,EAAMonB,iBACZJ,iBAAkBhnB,EAAMgnB,iBACxBze,UACE,cAAege,EAAO3kB,QAAU2kB,EAAO3kB,QAAQ2G,eAAY5G,QAK5D6W,KAKH,MAJiB,IACZxY,EACH4mB,iBAAkBL,EAAO3kB,cAKxB2W,KAKH,MAJiB,IACZvY,EACH6mB,eAAgBN,EAAO3kB,cAKtBmW,KAKH,MAJiB,IACZ/X,EACH8mB,qBAAsBP,EAAO3kB,cAK5BsW,KAMH,MALiB,IACZlY,EACHinB,UAAWV,EAAO3kB,QAClBslB,UAAWR,oBAKVvO,KAKH,MAJiB,IACZnY,EACHknB,UAAWX,EAAO3kB,cAKjBoW,KAYuBgP,KAKvBhP,KAKH,MAJiB,IACZhY,EACHgnB,iBAAkBT,EAAO3kB,SAjBAA,KAKxByW,KAMH,MALiB,IACZrY,EACHqmB,OAAQE,EAAO3kB,QAAQmlB,cACvBC,iBAAkBhnB,EAAMgnB,kBAQCplB,KAKxBwW,KAKH,MAJiB,IACZpY,EACHonB,iBAAkBb,EAAO3kB,cAKxBiW,KAKH,MAJiB,IACZ7X,EACHqnB,eAAe,QAKdvP,KAKH,MAJiB,IACZ9X,EACHqnB,eAAe,GAYehB,QAKhC,OAAOrmB,EAXAA,KAGJ2Y,KACH,MAAO,IACF3Y,EACH+mB,cAAeR,EAAO3kB,QAAQykB,wBC/ItC,MAAMiB,EAAmC,CACvC/S,WAAO5S,EACP4lB,SAAS,EACTnlB,aAAST,EACT6lB,KAAM,IAGF,WACJxnB,EAAwBsnB,EACxBf,GAEA,OAAQA,EAAOtzC,WACR6mC,KACH,MAAO,IACF9Z,EACHunB,SAAS,EACThT,MAAOgS,EAAO3kB,cAIbgY,KACH,MAAO,IACF5Z,EACHwnB,KAAM,IACDxnB,EAAMwnB,KACTC,cAAelB,EAAO3kB,QAAQ6lB,cAC9BC,MAAOnB,EAAO3kB,QAAQ8lB,MACtB/c,WAAY4b,EAAO3kB,QAAQ+I,YAE7B4c,SAAS,QAIR1N,KAIQ,KAIRM,KAIQ,KAIRC,KACH,MAAO,IACFpa,EACHwnB,KAAMjB,EAAO3kB,QACb2lB,SAAS,QAIRxN,KAIH,MAHiB,IACZ/Z,QAKFga,KACH,MAAO,IACFha,EACHunB,SAAS,EACThT,WAAO5S,QAIN0Y,KACH,MAAO,IACFra,EACHunB,SAAS,EACThT,WAAO5S,QAINuY,KACH,MAAO,IACFla,EACHwnB,KAAM,SAILvN,KACH,OAAOqN,UAIP,OAAOtnB,6BCnFN,MAAM2nB,KACXC,KAAkC,CAChCC,SANE,SAA0Bve,GAC9B,OAAOA,EAAQzE,MAQJijB,EAAyCH,EAAQI,gBAAgB,CAC5ExT,WAAO5S,EACP4lB,SAAS,EACTS,YAAa,OACbC,kBAAkB,IAGd,WACJjoB,EAA2B8nB,EAC3BvB,GAEA,OAAQA,EAAOtzC,WACRkmC,UACAD,KAAe,CAClB,MAAMgP,EAAcP,EAAQQ,UAAU5B,EAAO3kB,QAAS5B,GACtD,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,EACTU,kBAAkB,QAIjB5O,KACH,MAAO,IACFrZ,EACHgoB,YAAazB,EAAO3kB,cAInBqX,KAAe,CAClB,MAAMiP,EAAcP,EAAQW,OAAO/B,EAAO3kB,QAAS5B,GACnD,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,EACTU,kBAAkB,QAIjB7O,KAAmB,CACtB,MAAM8O,EAAcP,EAAQY,WAAWhC,EAAO3kB,QAAS5B,GACvD,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,EACTU,kBAAkB,QAIjB3O,KAAkB,CACrB,MAAM4O,EAAcP,EAAQa,UAAUjC,EAAO3kB,QAAS5B,GACtD,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,EACTU,kBAAkB,QAIjB1O,KAAmB,CACtB,MAAM2O,EAAcP,EAAQc,WAAWlC,EAAO3kB,QAAS5B,GACvD,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,EACTU,kBAAkB,QAIjBzO,KAAkB,CACrB,MAAM0O,EAAcP,EAAQe,UAAU1oB,GACtC,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,EACTU,kBAAkB,QAIjBxO,KAAmB,CACtB,MAAM0D,EAAWnd,EAAMqoB,SACjBM,EAAkB,GACxB,UAAWjmB,KAAKrP,OAAOC,KAAK6pB,GAC1BwL,EAAgB30B,KAAK,IAAKmpB,EAASza,GAAIkmB,UAAU,IAEnD,MAAMV,GAAcP,EAAQY,WAAWI,EAAiB3oB,GACxD,MAAO,IACFA,EACHooB,IAAKF,GAAYE,IACjBC,SAAUH,GAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,EACTU,kBAAkB,QAIjBvO,KACH,MAAO,IACF1Z,EACHuU,MAAOgS,EAAO3kB,QACd2lB,SAAS,EACTU,kBAAkB,QAIjB/O,KACH,MAAO,IACFlZ,EACHuU,WAAO5S,EACP4lB,SAAS,EACTU,kBAAkB,QAIjBjP,KACH,MAAO,IACFhZ,EACHuU,WAAO5S,EACP4lB,SAAS,EACTU,kBAAkB,WAKpB,OAAOjoB,iBCjJN,MAAM6oB,KACXjB,KAAyC,CACvCC,SARE,SACJj/B,GAEA,OAAOA,EAAaic,MAQTikB,EACXD,EAAuBd,gBAAgB,CACrCxT,WAAO5S,EACP4lB,SAAS,IAGP,WACJvnB,EAAmC8oB,EACnCvC,GAEA,OAAQA,EAAOtzC,WACRikC,UACAD,KAAuB,CAC1B,MAAMiR,EAAcW,EAAuBV,UACzC5B,EAAO3kB,QACP5B,GAEF,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIRvQ,KAAuB,CAC1B,MAAMkR,EAAcW,EAAuBP,OAAO/B,EAAO3kB,QAAS5B,GAClE,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIRpQ,KAA2B,CAC9B,MAAM+Q,EAAcW,EAAuBN,WACzChC,EAAO3kB,QACP5B,GAEF,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIRnQ,KAA0B,CAC7B,MAAM8Q,EAAcW,EAAuBL,UACzCjC,EAAO3kB,QACP5B,GAEF,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIRlQ,KAA2B,CAC9B,MAAM6Q,EAAcW,EAAuBJ,WACzClC,EAAO3kB,QACP5B,GAEF,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIRjQ,KAA0B,CAC7B,MAAM4Q,EAAcW,EAAuBH,UAAU1oB,GACrD,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIRhQ,KACH,MAAO,IACFvX,EACHuU,MAAOgS,EAAO3kB,QACd2lB,SAAS,QAIRtQ,KACH,MAAO,IACFjX,EACHuU,WAAO5S,EACP4lB,SAAS,WAKX,OAAOvnB,kBClHN,MAAM+oB,KACXnB,KAAyC,CACvCC,SANE,SAA8BvJ,GAClC,OAAOA,EAASzZ,MAQLmkB,EACXD,EAAmBhB,gBAAgB,CACjCxT,WAAO5S,EACP4lB,SAAS,IAGP,WACJvnB,EAA+BgpB,EAC/BzC,GAEA,OAAQA,EAAOtzC,WACRwjC,UACAD,KAAmB,CACtB,MAAM0R,EAAca,EAAmBZ,UAAU5B,EAAO3kB,QAAS5B,GACjE,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIRhR,KAAmB,CACtB,MAAM2R,EAAca,EAAmBT,OAAO/B,EAAO3kB,QAAS5B,GAC9D,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIR7Q,KAAuB,CAC1B,MAAMwR,EAAca,EAAmBR,WAAWhC,EAAO3kB,QAAS5B,GAClE,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIR5Q,KAAsB,CACzB,MAAMuR,EAAca,EAAmBP,UAAUjC,EAAO3kB,QAAS5B,GACjE,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIR3Q,KAAuB,CAC1B,MAAMsR,EAAca,EAAmBN,WAAWlC,EAAO3kB,QAAS5B,GAClE,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIR1Q,KAAsB,CACzB,MAAMqR,EAAca,EAAmBL,UAAU1oB,GACjD,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIRzQ,KACH,MAAO,IACF9W,EACHuU,MAAOgS,EAAO3kB,QACd2lB,SAAS,QAIR/Q,KACH,MAAO,IACFxW,EACHuU,WAAO5S,EACP4lB,SAAS,WAKX,OAAOvnB,kBClGN,MAAMipB,KACXrB,KAAmC,CACjCC,SANE,SAA2Bp/B,GAC/B,OAAOA,EAASoc,MAQLqkB,EACXD,EAAgBlB,gBAAgB,CAC9BoB,wBAAoBxnB,EACpBynB,8BAA0BznB,EAC1B4S,WAAO5S,EACP4lB,SAAS,IAGP,WACJvnB,EAA8BkpB,EAC9B3C,GAEA,OAAQA,EAAOtzC,WACR2iC,KACH,MAAO,IACF5V,EACHopB,yBAA0B7C,EAAO3kB,QACjC2lB,SAAS,QAIR5R,KACH,MAAO,IACF3V,EACHmpB,mBAAoB5C,EAAO3kB,QAC3B2lB,SAAS,QAIRxR,UACAD,KAAgB,CACnB,MAAMoS,EAAce,EAAgBd,UAAU5B,EAAO3kB,QAAS5B,GAC9D,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIR1R,KAAgB,CACnB,MAAMqS,EAAce,EAAgBX,OAAO/B,EAAO3kB,QAAS5B,GAC3D,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIRvR,KAAoB,CACvB,MAAMkS,EAAce,EAAgBV,WAAWhC,EAAO3kB,QAAS5B,GAC/D,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIRtR,KAAmB,CACtB,MAAMiS,EAAce,EAAgBT,UAAUjC,EAAO3kB,QAAS5B,GAC9D,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIRrR,KAAoB,CACvB,MAAMgS,EAAce,EAAgBR,WAAWlC,EAAO3kB,QAAS5B,GAC/D,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIRpR,KAAmB,CACtB,MAAM+R,EAAce,EAAgBP,UAAU1oB,GAC9C,MAAO,IACFA,EACHooB,IAAKF,EAAYE,IACjBC,SAAUH,EAAYG,SACtB9T,WAAO5S,EACP4lB,SAAS,QAIRnR,KACH,MAAO,IACFpW,EACHuU,MAAOgS,EAAO3kB,QACd2lB,SAAS,QAIRzR,KACH,MAAO,IACF9V,EACHuU,WAAO5S,EACP4lB,SAAS,WAKX,OAAOvnB,0TCvIN,MAAMqpB,KACXC,MAAkD,yBAEvCtH,KAAkCuH,MAC7CF,EACCrpB,GAAsCA,GCL5BwpB,KACXF,MAA2C,kBAEhC9G,GAA2B+G,QACtCC,EACCxpB,GAA+BA,GCLrBypB,GACXH,QAAuC,cAE5BrG,GAAuBsG,QAClCE,EACCzpB,GAA2BA,GAQjB6jB,IALyB0F,QACpCE,EACCzpB,GAA2BA,EAAMmnB,kBAGIoC,MACtCE,EACCzpB,GAA2BA,EAAM6mB,iBAGvB6C,KAA2BH,MACtCE,EACCzpB,GAA2BA,EAAMonB,kBAGvB3D,GAA0B8F,QACrCE,EACCzpB,GAA2BA,EAAMqnB,eAGvB1D,GAAwB4F,QACnCE,EACCzpB,GAA2BA,EAAM8mB,sBAGvBzD,KAAekG,MAC1BE,EACCzpB,GAA2BA,EAAMknB,WAGvB3D,GAAegG,QAC1BE,EACCzpB,GAA2BA,EAAMinB,WAGvB9D,GAAsBoG,QACjCE,EACCzpB,IACC,GAAI,cAAeA,QAGK2B,IAApB3B,EAAMuI,UAGV,OAAOvI,EAAMuI,YCpDJohB,GAAeL,QAAsC,aACrDM,GAAUL,QAAeI,EAAe3pB,GAAUA,GAClDya,GAAsB8O,QACjCI,EACC3pB,GAA0BA,GAEhB2a,KAAiB4O,MAC5BK,EACC5pB,GAA0BA,EAAMwnB,MCLtBqC,KACXP,MAAyC,gBAE9BtN,GAAkBuN,QAC7BM,EACC7pB,GAAUA,GAGAwc,GAAiB+M,QAC5BM,EACC7pB,GAAUA,EAAMgoB,aAGNlK,KAAcyL,MAAeM,EAAsB7pB,GAC9D3M,OAAOmM,OAAOQ,EAAMqoB,WAQTxK,MALgB0L,MAC3BM,EACC7pB,GAAUA,EAAMooB,KAGWvjB,IAC5B0kB,QAAeM,EAAsB7pB,IACnC,KAAKA,EAAMooB,IAAiBr4B,QAAQ8U,KAAO,GAG3C,OAAO7E,EAAMqoB,SAASxjB,MAGbuX,KAAuBmN,MAClCM,EACC7pB,GAAUA,EAAMuU,OAGN+H,GAAyBiN,QACpCM,EACC7pB,GAAUA,EAAMunB,SAGNrL,GAAqBqN,QAChCM,EACC7pB,IACC,MAAM8pB,EAA4B,GAC5BC,GAAK12B,OAAOmM,OAAOQ,EAAMqoB,UAC/B,UAAW3lB,MAAKqnB,IACU,IAApBrnB,GAAEsnB,eACJF,EAAU91B,KAAK0O,IAGnB,OAAIonB,EAAUv3B,QAAU,EACf,KAEFu3B,ICvDEG,ID2DsBV,QACjCM,EACC7pB,IACC,MAAMkqB,EAA6B,GAC7BH,GAAK12B,OAAOmM,OAAOQ,EAAMqoB,UAC/B,UAAW3lB,MAAKqnB,IACK,IAAfrnB,GAAEkmB,UACJsB,EAAWl2B,KAAK0O,IAGpB,OAAIwnB,EAAW33B,QAAU,EAChB,KAEF23B,OCvETZ,MAAiD,yBAEtC3J,GAA0B4J,QACrCU,EACCjqB,GAAUA,GAGA6gB,KAAsB0I,MACjCU,EACCjqB,GAAU3M,OAAOmM,OAAOQ,EAAMqoB,WAQpB1H,IALwB4I,QACnCU,EACCjqB,GAAUA,EAAMooB,KAGmBvjB,IACpC0kB,QAAeU,EAA8BjqB,IAC3C,KAAKA,EAAMooB,IAAiBr4B,QAAQ8U,KAAO,GAG3C,OAAO7E,EAAMqoB,SAASxjB,MCvBbslB,MD0B+BZ,MAC1CU,EACCjqB,GAAUA,EAAMuU,UAG2BgV,MAC5CU,EACCjqB,GAAUA,EAAMunB,YChCjB+B,MAA6C,qBAElCnL,IAAsBoL,QACjCY,EACCnqB,GAAUA,GAGAsf,KAAkBiK,MAC7BY,EACCnqB,GAAU3M,OAAOmM,OAAOQ,EAAMqoB,WAQpBjJ,KALoBmK,QAC/BY,EACCnqB,GAAUA,EAAMooB,KAGevjB,IAChC0kB,QAAeY,EAA0BnqB,IACvC,KAAKA,EAAMooB,IAAiBr4B,QAAQ8U,KAAO,GAG3C,OAAO7E,EAAMqoB,SAASxjB,MCvBbulB,OD0B2Bb,MACtCY,EACCnqB,GAAUA,EAAMuU,UAGuBgV,MACxCY,EACCnqB,GAAUA,EAAMunB,YChCjB+B,MAA4C,oBAEjCpI,GAAmBqI,QAC9Ba,GACCpqB,GAAUA,GAGA6hB,MAAe0H,MAAea,GAAuBpqB,GAChE3M,OAAOmM,OAAOQ,EAAMqoB,WAQTzG,KALiB2H,QAC5Ba,GACCpqB,GAAUA,EAAMooB,KAGYvjB,IAC7B0kB,QAAea,GAAuBpqB,IACpC,KAAKA,EAAMooB,IAAiBr4B,QAAQ8U,KAAO,GAG3C,OAAO7E,EAAMqoB,SAASxjB,SAGW0kB,MACnCa,GACCpqB,GAAUA,EAAMuU,QAGoBgV,QACrCa,GACCpqB,GAAUA,EAAMunB,yIC7Bbv3B,SAQEA,mBACFA,kCACAA,SAGEA,SACFA,+BADEA,oEAlBJA,sBAKEA,gCAUAA,gCAKFA,+BAlBEA,qCAIGA,wHAUAA,oGAKLA,SACEA,iBAKEA,sBACEA,SACFA,QACFA,QACFA,+BAHMA,8DASJA,SAA8CA,kBAAKA,kCACnDA,SACEA,SACFA,+BADEA,oEAPJA,sBAKEA,gCACAA,gCAGFA,+BAPEA,qCAGeA,8CACAA,wEAvCnBA,SACEA,4BAqBAA,gCAWAA,4BAUFA,8BAzCKA,2EAoBYA,oEAYZA,qGAULA,kBAKEA,aACEA,8BACFA,QACFA,8BAPEA,6BAKEA,8EAGJA,kBAKEA,8BACFA,8BAJEA,6BAGAA,4EAEFA,kBAKEA,8BACFA,8BALEA,6BAIAA,2FAOFA,SACEA,kBACEA,qBACEA,iDAASq6B,cAAa,KAKtBr6B,aACEA,8BACFA,QACFA,QACAA,qBAAQA,iDAASs6B,cAAa,KAC5Bt6B,aACEA,8BACFA,QACFA,QACFA,QACFA,cATQA,mDAKAA,6FAKRA,SAMEA,qBAAeA,iDAASu6B,aACtBv6B,aACEA,8BAMFA,QACFA,QACFA,gCARMA,2HCxFD,IAAMlC,EAAb,MAAM,QAKJtI,YACYge,EACAgnB,EACHC,EAEA/wB,GAJGjU,cACAA,0BACHA,wBAEAA,YATTA,yBAAsB,EACtBA,qBAAiB,EACjBA,iBAAgC,IAAIilC,KA0BpCC,WACEllC,KAAKglC,iBAAiBG,gBAAgBC,UAAU,MAClB,IAAxBplC,KAAKqlC,gBAGTrlC,KAAKslC,gBAEP,MAAMC,EAAWhH,SAASiH,uBACxB,6BAEIC,EAAWlH,SAASiH,uBACxB,8BAGF,GADAxlC,KAAK0lC,oBAAsBH,EAASz4B,OAChCy4B,EAASz4B,OAAS,EAAG,CACvB,QAASoG,EAAI,EAAGA,EAAIqyB,EAASz4B,OAAQoG,IACnCqyB,EAASryB,GAAGyyB,SAEd,MAAMC,EAAOrH,SAASsH,gBAAgB,SACtCD,EAAKp8B,MAAQ,4BACb+7B,EAAS,GAAGO,WAAWC,aAAaH,GACpC,MAAMI,EACJP,EAASA,EAAS34B,OAAS,GAAGg5B,WAAWG,aAAa,SAClDC,EAAU3H,SAASsH,gBAAgB,SAGzC,OAFAK,EAAQ18B,MAAQw8B,EAAax8B,MAAQ,kCACrCi8B,EAASA,EAAS34B,OAAS,GAAGg5B,WAAWC,aAAaG,IAK1DZ,cACE,MAAMC,EAAWhH,SAASiH,uBACxB,6BAEIC,EAAWlH,SAASiH,uBACxB,8BAEF,GAAIxlC,KAAK0lC,oBAAsB,EAAG,CAChC,MAAME,EAAOrH,SAASsH,gBAAgB,SACtCD,EAAKp8B,MAAQ,4BACb+7B,EAAS,GAAGO,WAAWC,aAAaH,GACpC,MAAMI,EACJP,EAASA,EAAS34B,OAAS,GAAGg5B,WAAWG,aAAa,SAClDC,EAAU3H,SAASsH,gBAAgB,SAIzC,OAHAK,EAAQ18B,MAAQw8B,EAAax8B,MAAQ,6BACrCi8B,EAASA,EAAS34B,OAAS,GAAGg5B,WAAWC,aAAaG,QACtDlmC,KAAKglC,iBAAiBmB,SAGI,IAAxBnmC,KAAKqlC,qBAAqDnpB,IAAzBlc,KAAKiU,KAAKmyB,YAC7CpmC,KAAK+kC,mBAAmB5V,cACtBnvB,KAAKiU,KAAKmyB,WACVpmC,KAAKiU,KAAKoyB,gBAKhBC,aAAa94C,GACXwS,KAAKumC,YAAYl1B,KAAK7jB,GACtBwS,KAAKumC,YAAYj1B,WAGnBk1B,WACExmC,KAAKqlC,gBAAiB,OACOnpB,IAAzBlc,KAAKiU,KAAKwyB,YACZzmC,KAAK+kC,mBAAmB5V,cACtBnvB,KAAKiU,KAAKwyB,WACVzmC,KAAKiU,KAAKyyB,mBAGd1mC,KAAKglC,iBAAiBmB,QAGpBQ,gBACF,MAA4B,KAAxB3mC,KAAKiU,KAAK0yB,UACL,GAC0B,UAAxB3mC,KAAKiU,KAAK0yB,UACZ,iBAC0B,WAAxB3mC,KAAKiU,KAAK0yB,UACZ,uBADF,gDA3GEt+B,GAAsBkC,0CASvBO,gCATCzC,EAAsBu+B,8kCDZnCr8B,iBACEA,gCA4CAA,uBASAA,uBAOAA,uBAOFA,QACAA,iBAIEA,iCAmBAA,gCAiBFA,eA5GiBA,+CA8CZA,wEAQAA,wEAQAA,2CAQHA,yFAEeA,wEAoBZA,mHCjFQlC,GAAb,wQCQO,IAAMw+B,EAAb,MAAM,QAUJ9mC,YACS+mC,EACArjB,GADAzjB,2BACAA,qBAXAA,cAAW,GAEpBA,gBAAY,EAWVA,KAAK+mC,cAAgB/mC,KAAK8mC,oBAAoB3pB,oBAC9Cnd,KAAKgnC,OAASvjB,EAAciM,aAAaroB,YACzC,MAAM4/B,EAA8B,IAAIhC,KACxCjlC,KAAKknC,uBAAwBC,OAAS,GACnC13B,QACC23B,KAAUH,MACVv3B,KAAWwD,QACSgJ,IAAdlc,KAAKqnC,MAIP,kBAAmBrnC,KAAKqnC,MACc,KAAtCrnC,KAAKqnC,KAAKC,cAAcC,YAI1BvnC,KAAKwnC,QAAUxnC,KAAKqnC,KAAKC,cAAcC,UAAUE,WAAW,IAAK,IAIlD,OAAXvkC,SAHoBs7B,eACtB,eAAiBx+B,KAAKwnC,QAAUxnC,KAAKgnC,YAKhC71B,KACLu2B,KAAKC,SAAS,YAAc3nC,KAAK+mC,cAAc/mC,KAAKwnC,YAH7C53B,SAAG,OAMd5B,KAAK45B,IACH,IAAa,IAATA,EACF,OAEF,MAAM1kC,EAASq7B,SAASC,eACtB,eAAiBx+B,KAAKwnC,QAAUxnC,KAAKgnC,QAEvC9jC,EAAO2kC,MAAQD,EAAKC,MACpB3kC,EAAO4kC,OAASF,EAAKE,OACrB9nC,KAAK+nC,cAAgBH,EACrB5nC,KAAK+nC,cAAcC,WAAW9kC,EAAO+kC,WAAW,OAChDjoC,KAAKkoC,WACLjB,EAAU51B,MAAK,GACf41B,EAAU31B,cAIb8zB,YAGL8C,WACEloC,KAAK+nC,cAAcI,SACfzjC,aAA4B1E,KAAKwnC,UAAW,IAGhD9K,WAAW,KACT18B,KAAK+nC,cAAcK,UACiB,GAAnCpoC,KAAK+nC,cAAcM,OAAOv7B,QAI/Bw7B,0BAC6BpsB,IAAvBlc,KAAK+nC,oBAA6C7rB,IAAdlc,KAAKqnC,OAKzB,GAAlBrnC,KAAKuoC,WACmC,MAAxCvoC,KAAKqnC,KAAKC,cAAckB,cAExBxoC,KAAKuoC,WAAY,EACjBvoC,KAAKkoC,YAEa,GAAlBloC,KAAKuoC,WACmC,MAAxCvoC,KAAKqnC,KAAKC,cAAckB,eAExBxoC,KAAKuoC,WAAY,IAIrBE,cACMzoC,KAAKknC,wBACPlnC,KAAKknC,sBAAsBwB,cAC3B1oC,KAAKknC,2BAAwBhrB,iDA9FtB2qB,GAAat8B,kDAAbs8B,EAAaD,mVCpB1Br8B,mBACEA,SACFA,QACAA,iBAMEA,oBAMFA,eATEA,yCAAgC,yBAK9BA,yCAAgC,yBADhCA,sIDUSs8B,GAAb,iEElBM,QAAN9mC,cAEUC,aAA4B,IAAIilC,KAChCjlC,aAAUA,KAAK2oC,QAAQC,uCAG7B,OAAKC,EAAeC,WAClBD,EAAeC,SAAW,IAAID,GAEzBA,EAAeC,SAGjBC,cACL,OAAO/oC,KAAKgpC,QAGPC,UACLjpC,KAAK2oC,QAAQt3B,MAAK,oDCnBf,MAAMjC,EAAc,CAAE85B,YAAY,EAAMC,aAAa,EAAOC,UAAU,EAAMpZ,MAAM,EAAOqZ,OAAO,EAAOC,QAAQ,EAAOC,aAAc,YAAaC,QAAS,6BAA8BC,cAAe,CAAE,EAAK,SAAU,EAAK,aAAgBC,SAAU,CAAEC,OAAQ,CAAEC,UAAW,SAAU7mB,YAAa,iBAAkB7C,QAAS,EAAGyN,YAAa,6WAA8Wkc,OAAQ,0BAA2BhzB,eAAgB,kFAAmFS,cAAe,+DAAgEqN,eAAgB,8DAAiEmlB,UAAW,CAAEF,UAAW,YAAa7mB,YAAa,UAAW7C,QAAS,EAAGyN,YAAa,6WAA8Wkc,OAAQ,0BAA2BhzB,eAAgB,mFAAoFS,cAAe,yDAA0DqN,eAAgB,oKCI/oD,MAAMolB,EAAiB,CACrB,CACEpvB,KAAM,GACNqvB,WAAY,YACZC,UAAW,QAEb,CACEtvB,KAAM,YACNuvB,aAAc,IACZC,gIAAqC/4B,KAAMg5B,GAAMA,EAAEC,kBAEvD,CACE1vB,KAAM,OACNuvB,aAAc,IACZC,2HAAgC/4B,KAAMg5B,GAAMA,EAAEE,aAElD,CACE3vB,KAAM,SACNuvB,aAAc,IACZC,6HAAkC/4B,KAAMg5B,GAAMA,EAAEG,eAEpD,CACE5vB,KAAM,iBACNuvB,aAAc,IACZC,6HAAkC/4B,KAAMg5B,GAAMA,EAAEI,eAEpD,CACE7vB,KAAM,gBACNuvB,aAAc,IACZC,8HAAmC/4B,KAAMg5B,GAAMA,EAAEK,gBAErD,CACE9vB,KAAM,SACNuvB,aAAc,IACZC,6HAAkC/4B,KAAMg5B,GAAMA,EAAEM,eAEpD,CACE/vB,KAAM,WACNuvB,aAAc,IACZC,+HAAoC/4B,KAAMg5B,GAAMA,EAAEO,iBAEtD,CACEhwB,KAAM,qBACNuvB,aAAc,IACZC,8HAAoC/4B,KAAMg5B,GAAMA,EAAEQ,iBAEtD,CACEjwB,KAAM,mBACNuvB,aAAc,IACZC,+HAAoC/4B,KAAMg5B,GAAMA,EAAEO,iBAEtD,CACEhwB,KAAM,KACNN,QAAS,CACPM,KAAMP,MAER8vB,aAAc,IACZC,gIAAqC/4B,KAAMg5B,GAAMA,EAAES,kBAQlD,IAAMC,EAAb,MAAM,sDAAOA,4DAHF,CAAC7/B,aAAqB8+B,EAAQ,CAAEgB,SAAS,KACxC9/B,QAEC6/B,GAAb,GCrEO,IAAKE,EAGX,MAHD,OAAYA,QAAiB,KAC5BA,uBACAA,uBAFWA,EAAZ,IAAYA,GAGX,sGCHDzgC,iBAIEA,8BAKFA,eAFIA,2BCkBG,IAAM0gC,EAAb,MAAM,QAmBJlrC,YACYge,EACAmtB,GACAC,GACAzvB,GAHA1b,cACAA,2BACAA,6BACAA,mBAtBUA,eAAY,GAElCA,gBAAY,EAsBVA,KAAK0b,YAAYyZ,eAnBnBiW,gBAAgBC,GACdrrC,KAAK0b,YAAYokB,gBAAgB,CAC/B4B,cAAesJ,WAKnBM,iBAAiBD,GACfrrC,KAAK0b,YAAYokB,gBAAgB,CAC/B4B,cAAesJ,YAanB9F,WACE,MAAMqG,EAAMvrC,KAAKkrC,mBAAmB1d,oBACpCxtB,KAAK0b,YAAYyE,oBAAoBorB,GAAK,GAG5CC,YACE,MAAMC,EAAMlN,SAASiH,uBAAuB,yBACxCiG,EAAI3+B,OAAS,IAAwB,IAAnB9M,KAAK0rC,WACzBD,EAAI,GAAGE,UAAUl1B,IAAI,cAIzBm1B,mBAC2B,IAArB9f,UAAU+f,OACZ7rC,KAAK0b,YAAYokB,gBAAgB,CAC/B4B,cAAesJ,WAGjBhrC,KAAK0b,YAAYokB,gBAAgB,CAC/B4B,cAAesJ,YAKrBc,YACE,OAAOr3B,OAAOs3B,YAAc,KAG1BC,uBACF,YAAyB9vB,IAArBlc,KAAK0b,aACA9L,SAAG,GAEL5P,KAAK0b,YAAYqiB,gEA5DfkN,GAAY1gC,yEAAZ0gC,EAAYrE,4MAAZqF,wBAAuB,sCAAvBA,yBAAwB,uTDzBrC1hC,wCAUAA,eACEA,yBACFA,eAXGA,kDASEA,itECeQ0gC,GAAb,qJCnBO,IAAMiB,EAAb,MAAM,QACJnsC,YACUosC,EACDtX,IADC70B,gBACDA,4DAHEksC,GAAgB3hC,oDAAhB2hC,EAAgB7rC,QAAhB6rC,EAAgB,YAAhBA,GAAb,uMCAO,IAAME,GAAb,MAAM,QACJrsC,eAEAssC,UACE,OAAOr/B,aAAaC,QAAQ,cAG9Bq/B,QAAQC,GACNv/B,aAAamB,QAAQ,aAAchB,KAAKiB,UAAUm+B,IAGpDC,YACEx/B,aAAaiW,WAAW,4DAZfmpB,gCAAU/rC,QAAV+rC,EAAU,qBAFT,SAEDA,GAAb,GC0DA,MAAMx5B,YAGC,IAAM65B,GAAb,MAAM,QACJ1sC,YACYosC,EACA7xB,GACAoyB,GACA7X,EACAqW,GACAxvB,GACA5I,EACA65B,GACAC,GACAC,GACA7uB,GACAuF,GACAupB,GACHxP,GACApP,IAdGluB,gBACAA,cACAA,uBACAA,aACAA,2BACAA,oBACAA,qBACAA,2BACAA,8BACAA,yBACAA,mBACAA,oBACAA,mBACHA,eACAA,eAeTA,YAAQ+sC,QACN,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAAyB7a,SACzBziB,KAAWuN,GACFjd,KAAKsa,MAAM2yB,OAAOx9B,MACvB23B,QACEpnC,KAAKkuB,OAAOgf,kBAAkB,IACrBrE,sBAAgCE,mBAK/C/6B,OAAKsB,IACCA,aAAa69B,MACoB,MAA9B79B,EAAsBzM,KACzB7C,KAAK0b,YAAY4iB,yBAGjBhvB,aAAa89B,MACf1Q,WAAW,KACT18B,KAAK0b,YAAY+jB,0BAChB,MAEDnwB,aAAa+9B,MACf3Q,WAAW,KACT18B,KAAK0b,YAAY+jB,0BAChB,MAEL,MAAMvf,GACJ9Q,aAAqBA,kBAA0B8Q,QAC7CA,KAAYtN,GAAUsN,SACxBlgB,KAAKstC,sBAAsBptB,OAInC,CAAEkV,UAAU,IAGdp1B,qBAAiB+sC,QACf,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAA4Bja,OAC5B/kB,OAAK8yB,IACH,MAAM5gB,GACJ9Q,aAAqBA,kBAA0B8Q,QACjD,QAAuBhE,IAAnB4kB,EAAO3kB,QAGT,OAFAnc,KAAKutC,eAAertB,SACpBlgB,KAAK8sC,WAAWN,YAGlBxsC,KAAKutC,eAAertB,GAAS4gB,EAAO3kB,SACpCnc,KAAK8sC,WAAWR,QAAQxL,EAAO3kB,cAEjCpM,MAAY+e,IACHlf,SAAG,KAGhB,CAAEwlB,UAAU,IAGdp1B,qBAAiB+sC,QACf,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAA6Bna,OAC7B7kB,OAAK+xB,IAEDA,EAAa5jB,QAAQulB,gBAAkBsJ,WAEvChrC,KAAK60B,MAAMO,SAAS,IAAIiL,WAG5BtwB,MAAY+e,IACHlf,SAAG,KAGhB,CAAEwlB,UAAU,IAGdp1B,4BAAwB+sC,QACtB,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAAuCha,OACvCwa,QAAextC,KAAK60B,MAAMplB,QAAKslB,MAAOyI,SACtCxvB,OAAKy/B,IACH,MAAOC,GAASC,IAAaF,OAM/B19B,MAAY+e,IACHlf,SAAG,KAGhB,CAAEwlB,UAAU,IAGdp1B,0BAAoB+sC,MAClB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAA0Bra,OAC1B6a,QACExtC,KAAK60B,MAAMplB,QAAKslB,MAAOyI,OACvBx9B,KAAK60B,MAAMplB,MAAKslB,QAAOG,WAEzB0Y,MAAM,MACN5/B,OAAKy/B,IACH,MAAO3M,GAAQ6M,GAAW7gB,IAAY2gB,EACtC,QACqBvxB,IAAnB4kB,GAAO3kB,WACP2kB,GAAO3kB,WAAW/M,oBAClB0xB,GAAO3kB,UACL/M,aAAqBA,kBAA0B8Q,QAWjD,OATAlgB,KAAKkuB,OAAO2f,IAAI,KACI7tC,KAAKs9B,OAAO5oB,KAAKrM,IAAwB,CACzD4L,KAAM,CACJ65B,QAAS,wCAEX/O,WAAY,8BAGhB/+B,KAAK60B,MAAMO,SAAS,IAAIQ,MAG1B51B,KAAKstC,sBAAsBxM,GAAO3kB,YAIxC,CAAEiZ,UAAU,IAGdp1B,2BAAqB+sC,MACnB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAA8B1a,OAC9B1jB,OAAQkyB,IAA+B,IAApBA,EAAO3N,aAC1BnlB,KAAK8yB,IACH9gC,KAAKsa,MAAMyzB,cAAc,kBAG3Bh+B,MAAY+e,IACHlf,SAAG,KAGhB,CAAEwlB,UAAU,IAGdp1B,qBAAiB+sC,QACf,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAAsB9Z,OACtBllB,OAAKsM,IACyB,cAAxBA,EAAM6B,QAAQ7B,OAChBta,KAAK0b,YAAYsjB,sBAAqB,GAAO,GAE/Ch/B,KAAKsa,MAAMyzB,cAAczzB,EAAM6B,QAAQ7B,YAGzCvK,MAAY+e,IACHlf,SAAG,KAGhB,CAAEwlB,UAAU,IAjLZmJ,SAASyP,iBACP,mBACA,KACMzP,SAAS0P,OACXjuC,KAAK60B,MAAMO,SAAS,IAAI8Y,MAAmB,IAE3CluC,KAAK60B,MAAMO,SAAS,IAAI8Y,MAAmB,MAG/C,GA2KJX,eAAertB,EAAiB+M,GAAiC,MAC/D,MAAMC,GAAcltB,KAAKkrC,mBAAmBle,uBAC1C9M,EACA+M,IAEFra,GAAUsN,QAAUA,EACpBtN,GAAUe,eAAiBuZ,GAC3BltB,KAAKmuC,uBAGPb,sBAAsBptB,GACpB,MAAM+M,GAAejtB,KAAK8sC,WAAWT,UAEjB,MAAjBpf,SAC4B/Q,IAA7BtJ,GAAUe,eAEV3T,KAAKutC,eAAertB,GAEpBlgB,KAAK60B,MAAMO,SAAS,IAAIgK,KAAoBjyB,KAAKC,MAAM6f,MAI3DkhB,uBACEnuC,KAAK8S,cAAcqiB,eACnBn1B,KAAK2sC,mBAAmBxX,eACxBn1B,KAAK4sC,sBAAsBzX,eAC3Bn1B,KAAK6sC,iBAAiB1X,eACtBn1B,KAAKge,WAAWmX,eAChBviB,GAAUw7B,yBAA2B,EAClCjc,OAAmB,GACnBkB,OAAsB,GACtBa,OAAuB,GACvBrD,OAAyB,GACzBS,OAA6B,GAC7BrB,OAAsB,iDAxOhBwc,GAAYliC,qNAAZkiC,EAAYpsC,QAAZosC,EAAY,YAAZA,GAAb,2EC3BA,MAAM75B,YAGC,IAAMy7B,GAAb,MAAM,QACJtuC,YACUosC,EACD7xB,GACAiJ,GACA2H,EACAggB,GACAve,GACA2hB,EACAC,GACAC,GACA3Z,GACA3G,GACAoP,IAXCt9B,gBACDA,cACAA,oBACAA,0BACAA,2BACAA,wBACAA,qBACAA,sBACAA,oBACAA,cACAA,eACAA,eAGTA,YAAQ+sC,QACN,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAAwB9Y,OACxBtlB,OAAQe,KAEyD,IAA7DiD,GAAUw7B,yBAAyBla,UAMvCxkB,KAAWC,MACO,IAAI9F,MAAOqO,UAA3B,MACMu2B,GAAoBzuC,KAAKkrC,mBAAmBne,kBAClD,GAA6D,MAAzD0hB,GACF,SAAO7+B,OAAG,GAEZ,MAAMkd,EAAW3f,KAAKC,MAAMqhC,IACtBC,GAAiB1uC,KAAKkrC,mBAAmB1d,oBAI/C,GAHIV,EAAS6hB,cAAgBrnC,cAC3BtH,KAAK2sB,gBAAgB5M,8BAGrB+M,EAAS6hB,cAAgBrnC,cACzBtH,KAAK2sB,gBAAgBrM,cAAgBouB,GAQrC,OANkB1uC,KAAKs9B,OAAO5oB,KAAKrM,IAAwB,CACzD4L,KAAM,CACJ65B,QAAS,wCAEX/O,WAAY,uBAEd/+B,KAAK60B,MAAMO,SAAS,IAAIQ,SACjBhmB,OAAG,GAEZ,MAAMg/B,GAAiBzhC,KAAKC,MAAMqhC,IAGlC,OAFAzuC,KAAK60B,MAAMO,SAAS,IAAIc,KAAQ0Y,KAChCh8B,GAAUw7B,yBAAyBla,OAAwB,GACR,IAA/C5zB,2BACKsP,SAAG,GAEL5P,KAAKwuC,YAAY9pB,SAASkqB,GAAe1qB,kBAElDlW,OAAK2B,KACH,IAAU,IAANA,GAQF,YAPA3P,KAAK60B,MAAMO,SACT,IAAIyZ,KAAa,CACf7M,eAAe,EACfC,MAAO,GACP/c,WAAY,MAKlB,MAAM4pB,GAAY9uC,KAAKwuC,YAAY5pB,WAAWjV,IACxCo/B,GAAiB/uC,KAAKwuC,YAAYxpB,cAAcrV,IAWtD3P,KAAK60B,MAAMO,SACT,IAAIyZ,MAXY,IAAdC,GAWe,CACf9M,eAAe,EACfC,MAAO6M,GACP5pB,WAAY6pB,IAZK,CACf/M,eAAe,EACfC,MAAO,GACP/c,WAAY,SAcxB,CAAEkQ,UAAU,IAGdp1B,kBAAc+sC,QACZ,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAAmBvY,OACnBzmB,OAAK8yB,KACH9gC,KAAKkrC,mBAAmBte,qBAG9B,CAAEwI,UAAU,IAGdp1B,sBAAgB+sC,MACd,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAAqBpY,SACrBgZ,MAAM,MACNl+B,OAAWoxB,KACT,MAAMkO,IAAU,IAAInlC,MAAOqO,UACrBw2B,GAAiB1uC,KAAKkrC,mBAAmB1d,oBAC/C,GACEsT,GAAO3kB,QAAQoT,aAAejoB,cAC9BtH,KAAK2sB,gBAAgBrM,cAAgBouB,GAErC,YAAK7Z,MAAMO,SAAS,IAAIQ,SACjBhmB,OAAG,GAEZ,OAAQkxB,GAAO3kB,QAAQoT,iBAChBjoB,mBAED,SAAOsI,MAAG,CACRo/B,GACAlO,GAAO3kB,QAAQ1tB,QACfqyC,GAAO3kB,QAAQoT,kBAIhBjoB,aAED,OAAOtH,KAAK2sB,gBAAgBhR,QAAQqzB,IAASv/B,QAC3CC,KAAWC,IAEAC,SADC,IAAND,GAGM,CAACq/B,GAASr/B,EAAGmxB,GAAO3kB,QAAQoT,oBAKzCjoB,WAED,OAAOtH,KAAKsuC,cAAc3yB,QAAQqzB,IAASv/B,QACzCC,KAAWC,IAEAC,SADC,IAAND,GAGM,CAACq/B,GAASr/B,EAAGmxB,GAAO3kB,QAAQoT,oBAKzCjoB,WAED,OAAOtH,KAAKuuC,cAAc/vB,kBAAkB/O,MAC1Cw/B,QAAQ,QACRrB,MAAM,QACNl+B,KAAWtP,IACC,IAANA,GACKwP,QAAGzK,+BAELnF,KAAKuuC,cAAc5yB,QAAQqzB,MAEpCt/B,OAAWC,IAEAC,SADC,IAAND,EACQxK,8BAEF,CAAC6pC,GAASr/B,EAAGmxB,GAAO3kB,QAAQoT,iBAExCxf,MAAYT,IACHM,QAAGzK,qCAOtB6I,OAAK2B,KACH,GAAIA,KAAMxK,8BAER,YADAnF,KAAK60B,MAAMO,SAAS,IAAIW,KAAapmB,KAGvC,IAAU,IAANA,GAIF,YAHA3P,KAAK60B,MAAMO,SACT,IAAIW,KAAa5wB,oBAIrB,MAAOmkB,GAAW76B,GAAS8gC,GAAc5f,GACnCu/B,GAAc,CAClBC,sBAAkBjzB,EAClBoN,UAAWA,GACXpF,cAAez1B,GACf2gD,uBAAwB3gD,GACxB4gD,eAAgBvjB,UAAUX,UAAY,QACtCwjB,YAAapf,GAEf3c,GAAUsc,aAAeggB,GACzBlvC,KAAK60B,MAAMO,SAAS,IAAIc,KAAQgZ,KAC5B3f,IAAejoB,cACjBtH,KAAK2sB,gBAAgB5M,8BAEvB/f,KAAKkrC,mBAAmBre,gBAAgBqiB,SAG1Cn/B,MAAY+e,KACHlf,SAAG,KAGhB,CAAEwlB,UAAU,kDApNHiZ,GAAW9jC,6KAAX8jC,EAAWhuC,QAAXguC,EAAW,YAAXA,GAAb,mJCsBA,MAAMz7B,YAGC,IAAM08B,GAAb,MAAM,QAGJvvC,YACUosC,EACE3mB,GACA/B,GACAF,EACA7H,GACA6zB,GACAlxB,EACAwW,GACA3J,GACA1H,GACAgsB,GACA7iB,GACA8iB,GACAnB,GACAoB,GACAnB,EACA9yB,GACA9O,GACAgjC,GACAzhB,IAnBFluB,gBACEA,uBACAA,sBACAA,mBACAA,oBACAA,4BACAA,yBACAA,cACAA,2BACAA,wBACAA,gCACAA,wBACAA,6BACAA,sBACAA,8BACAA,qBACAA,kBACAA,iBACAA,8BACAA,eAQZA,YAAQ+sC,QACN,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAA4B3Z,OAC5BzkB,OAAQe,IAEwD,IAA5DiD,GAAUw7B,yBAAyB/a,UAMvC3jB,KAAWC,IACT,MAAM+nB,GAAW13B,KAAK0vC,sBAAsBtsB,eAM5C,IALiB,IAAbsU,IACF13B,KAAK60B,MAAMO,SACT,IAAIwa,KAAkBlY,MAGT,IAAbA,IAAmC,OAAbA,IAAqBA,GAAS5qB,QAAU,EAChE,OAAO9M,KAAKwvC,wBAAwBz8B,YAEtC,UAAWkK,MAAKya,GAEM,OAAlBza,GAAE4yB,aACgB,KAAlB5yB,GAAE4yB,cACkB,IAApB5yB,GAAEsnB,eAEFvkC,KAAK60B,MAAMO,SAAS,IAAI0a,KAAsB7yB,KAGlDrK,UAAUw7B,yBAAyB/a,OAAuB,EACnDrzB,KAAKwvC,wBAAwBz8B,eAG1C,CAAEqiB,UAAU,IAGdp1B,oBAAc+sC,MACZ,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAAsBxZ,OACtBga,QACExtC,KAAK60B,MAAMplB,MAAKslB,QAAOsD,OACvBr4B,KAAK60B,MAAMplB,QAAKslB,MAAOG,OACvBl1B,KAAK60B,MAAMplB,MAAKslB,QAAOkP,WAEzBv0B,KAAU,EAAEoxB,EAAQpJ,GAAUqK,GAAM7hB,OAClC,MAAMrQ,GAAW+C,GAAUe,eAC3B,OAAO3T,KAAKwlB,eAAejB,YAAY1U,IAAUJ,MAC/CC,OAAWkU,OACFhU,MAAG,CAACkxB,EAAQiB,GAAMlyB,GAAUqQ,GAAS0D,YAIlDlU,KAAU,EAAEoxB,EAAQiB,GAAMlyB,GAAUqQ,GAAS0D,MACpC5jB,KAAKwlB,eACTnB,eAAexU,GAAUkyB,GAAK7d,eAC9BzU,QACCC,KAAW8M,OACF5M,MAAG,CAACkxB,EAAQiB,GAAMlyB,GAAUqQ,GAAS0D,GAAUpH,WAI9D9M,KACE,EAAEoxB,EAAQiB,GAAMlyB,GAAUqQ,GAAS0D,GAAUpH,OAC3C,MAAMuzB,GAAa/vC,KAAKwlB,eAAe9B,mBACrCxD,GACA1D,GACAskB,EAAO3kB,QAAQ6zB,qBACflP,EAAO3kB,QAAQ8zB,gBACfrsB,GAASA,SACTkd,EAAO3kB,SAWT,GATAnc,KAAK2M,SAAS+H,KACZ1U,KAAKkwC,6BAA6Bj6C,4BAClC,QACA,CACEk6C,mBAAoB,SACpBC,iBAAkB,SAClB/5B,SAAU,MAGV0rB,GAAK4M,cAAgBrnC,WAAwB,CAC/C,MAAM+oC,GAAa,IACdN,GACHl6B,SAAUk6B,GAAWjsB,IACrBta,MACuB,MAArBumC,GAAWvmC,MACP,MACA4I,WAAsB29B,GAAWvmC,OAAOiT,sBAEzC4zB,GAAWvsB,IAClB,MAAMwsB,GAAQ1zB,MAA2ByzB,IACzC,OAAOrwC,KAAKuuC,cAAclyB,YAAYi0B,IAAO7gC,MAC3CC,OAAWgN,KACT,MAAM6zB,GAAe3zB,MAA2ByzB,GAAY,CAC1DxzB,EAAG1K,WAAe,KAAOuK,GAAOG,GAAGrJ,WACnC7D,EAAG,KAAO+M,GAAO/M,EACjBmN,EAAG,KAAOJ,GAAOI,IAEnB,OAAO3L,QAAKtB,GAAS2f,gBAAgB+gB,QAEvC7gC,OAAWC,KACFC,QAAG,CAACkxB,EAASnxB,GAAU6gC,KAAMh0B,OAI1C,GAAIulB,GAAK4M,cAAgBrnC,mBAAgC,CACvD,MAAM+oC,GAAa,IACdN,GACH5+B,KAAM4wB,GAAK7d,eAEb,cAAOmsB,GAAWzsB,gBACXysB,GAAW7zB,MACXxc,KAAKyvC,qBAAqBpzB,YAAYg0B,IAAY5gC,QACvDC,KAAWC,KACFC,QAAG,CAACkxB,EAAQnxB,GAAG6M,OAI5B,GAAIulB,GAAK4M,cAAgBrnC,aAA0B,CACjD,MAAM+oC,GAAa,IACdN,GACH5+B,KAAM4wB,GAAK7d,eAEb,cAAOmsB,GAAWzsB,gBACXysB,GAAW7zB,MACXxc,KAAK2sB,gBAAgBtQ,YAAY,CAACg0B,KAAa5gC,QACpDC,KAAWC,KACFC,QAAG,CAACkxB,EAAQnxB,GAAG6M,OAI5B,GAAIulB,GAAK4M,cAAgBrnC,WACvB,OAAOtH,KAAKsuC,cAAcjyB,YAAY0zB,IAAYtgC,QAChDC,KAAWgN,KACFvL,QAAKtB,GAAS2f,gBAAgB9S,SAEvChN,KAAWC,KACFC,QAAG,CAACkxB,EAAQnxB,GAAG6M,YAMhC9M,KAAU,EAAEoxB,EAAQ0P,GAAMh0B,OACxB,IAAa,IAATg0B,GACF,YAAK3b,MAAMO,SAAS,IAAIoC,KAAiBsJ,EAAO3kB,QAAQiD,KACxDpf,KAAK2M,SAAS+H,KACZ1U,KAAKywC,6BAA6Bl0C,kBAClC,QACA,CACE4zC,mBAAoB,SACpBC,iBAAkB,SAClB/5B,SAAU,OAGdrW,KAAK60B,MAAMO,SAAS,IAAIsb,MACxB1wC,KAAK60B,MAAMO,SAAS,IAAIoC,KAAiBsJ,EAAO3kB,QAAQiD,QACjDxP,OAAG,GAEZ5P,KAAK60B,MAAMO,SACT,IAAI2C,KAAiB,IAChB+I,EAAO3kB,QACVooB,eAAe,EACfsL,YAAaW,GACbG,aAAcn0B,MAGlB,MAAMo0B,GAAkB,IAAI3L,MAC5B,OAAOjlC,KAAK0b,YAAYyiB,gBAAgB1uB,QACtC+9B,MAAextC,KAAK60B,MAAMplB,MAAKslB,QAAOsD,WACtC+O,MAAUwJ,KACV5iC,OAAK6iC,KACH,MAAOC,GAAIpZ,IAAYmZ,GACjBhtB,GAAU6T,GAASoJ,EAAO3kB,QAAQiD,IAEtCyE,IACA,kBAAmBA,KACO,IAA1BA,GAAQ0gB,cAERqM,GAAgBv/B,MAAK,IAGZ,IAAPy/B,IACF9wC,KAAK60B,MAAMO,SACT,IAAI0a,KAAsB,IACrBhP,EAAO3kB,QACV0zB,YAAaW,GACbG,aAAcn0B,YAQ9B,CAAE4Y,UAAU,IAGdp1B,qBAAiB+sC,QACf,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAAyBtZ,SACzB8Z,MAAextC,KAAK60B,MAAMplB,MAAKslB,QAAOsD,SACtC3oB,OAAU,EAAEuL,EAAG81B,OACb,MAAMrZ,GAAWqZ,GACjB,IAAIltB,GACJ,UAAW5G,MAAKya,GACVza,GAAEmC,KAAOnE,EAAEkB,QAAQiD,KACrByE,GAAU5I,EAAEkB,SAGhB,SAAOvM,MAAG8nB,SAEZ1pB,KAAKiP,GACIjd,KAAK0vC,sBAAsBxsB,aAAajG,KAGrD,CAAEmY,UAAU,IAGdp1B,yBAAqB+sC,QACnB,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAA0BhZ,SAC1BwZ,MAAextC,KAAK60B,MAAMplB,MAAKslB,QAAOsD,SACtCrqB,OAAI,EAAE8yB,EAAQpJ,OACZ13B,KAAK0vC,sBAAsBxsB,aAAawU,OAG9C,CAAEtC,UAAU,IAGdp1B,wBAAoB+sC,QAClB,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAAyBjZ,OACzB/lB,OAAK8yB,IACH9gC,KAAK0vC,sBAAsB1sB,oBAGjC,CAAEoS,UAAU,IAGdp1B,8BAA0B+sC,QACxB,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAA8B1Z,OAC9B0d,SAAUlQ,IACR,MAAMmQ,GAAc,IAAIhM,MACxB,OAAOkC,QAAS7mC,+BAAgDmP,QAC9D23B,MAAU6J,KACVvhC,OAAWwD,KACT,MAAMrD,GAAW+C,GAAUe,eAC3B,YAAiBuI,IAAbrM,IACKD,SAAG,MAELuB,MAAKtB,GAASqhC,kBAAkBzhC,MACrCC,OAAWyhC,KACT,GACkB,OAAhBA,KACgB,IAAhBA,SACgBj1B,IAAhBi1B,GAEA,MAAM,EAER,MAAMC,GAAqBD,GAAyB,EAC9CzwB,GAAK,CACTvP,KAAM2vB,EAAO3kB,QAAQk1B,aACrB/7B,GAAIwrB,EAAO3kB,QAAQm1B,aACnB90B,MAAOskB,EAAO3kB,QAAQw0B,cAExB,OAAOx/B,QACLtB,GAAS0hC,sBAAsBzQ,EAAO3kB,QAAQ0zB,cAC9CpgC,QACAC,KAAW8hC,IACO,OAAZA,KAAgC,IAAZA,IACfrgC,WACLsgC,OACE5hC,GACAuhC,GACA1wB,GAAGvP,KACHuP,GAAGlE,QAEL/M,MACAC,OAAWC,IACC,OAANA,IACKC,QAAG,SAELuB,MAAKtB,GAAS0hC,sBAAsB5hC,GAAE6gC,UAI5C5gC,QAAG4hC,QAEZzhC,MAAYT,OACHM,MAAG,WAIhB5B,OAAK2B,KACH,GAAU,MAANA,GAGJ,IAAiB,IAAbA,GAAE+hC,OAUJ,OATA1xC,KAAK60B,MAAMO,SACT,IAAI2C,KAAiB,CACnB3Y,GAAI0hB,EAAO3kB,QAAQiD,GACnBywB,YAAa/O,EAAO3kB,QAAQ0zB,YAC5BtL,eAAe,EACf3hB,aAAczb,6BAGlB8pC,GAAY5/B,MAAK,GAGnB,GACe,IAAb1B,GAAE+hC,QACF/hC,GAAEgiC,eACArxC,kCAeF,OAbAN,KAAK60B,MAAMO,SACT,IAAI2C,KAAiB,CACnB3Y,GAAI0hB,EAAO3kB,QAAQiD,GACnBwyB,YACE9Q,EAAO3kB,QAAQ01B,cAAgBzqC,aAC3B,IAAIyC,MAAOqO,UACX4oB,EAAO3kB,QAAQy1B,YACrB/B,YAAa/O,EAAO3kB,QAAQ0zB,YAC5BtL,eAAe,EACf3hB,aAAczb,kBAGlB8pC,GAAY5/B,MAAK,aASjC,CAAE+jB,UAAU,IA9VZp1B,KAAKywC,6BACHzwC,KAAKkrB,mBAAmBc,yBAAyB,WACnDhsB,KAAKkwC,6BACHlwC,KAAKkrB,mBAAmBc,yBAAyB,yDA5B1CsjB,GAAc/kC,gRAAd+kC,EAAcjvC,QAAdivC,EAAc,YAAdA,GAAb,kBC9CA,MAAM18B,YAGC,IAAMk/B,GAAb,MAAM,QACJ/xC,YACUosC,EACE4F,GACHld,IAFC70B,gBACEA,wBACHA,cAGTA,YAAQ+sC,QACN,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAA+Bnc,OAC/BjiB,OAAQe,IAE2D,IAA/DiD,GAAUw7B,yBAAyBvd,UAMvC7iB,KAAKiP,IACH,MAAMnP,GAAY9N,KAAK+xC,gBAAgBllC,uBACvC,UAAWqO,MAAKtN,OAAOC,KAAKC,IAC1B9N,KAAK60B,MAAMO,SACT,IAAI0D,KACF,CACE1Z,GAAItR,GAAUoN,IAAGxN,aACdI,GAAUoN,MAEf,IAINtI,GAAUw7B,yBAAyBvd,OAA0B,KAGnE,CACEuE,UAAU,IAIdp1B,wBAAkB+sC,MAChB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAA0Blc,OAC1BliB,OAAQkyB,IAA6B,IAAlBA,EAAOlQ,WAC1B5iB,KAAK8yB,IACH9gC,KAAK+xC,gBAAgB1jC,aAAayyB,EAAO3kB,YAI/C,CAAEiZ,UAAU,IAGdp1B,0BAAsB+sC,QACpB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAA6B5b,SAC7BxiB,KAAQkyB,IAA6B,IAAlBA,EAAOlQ,SAC1B4c,QAAextC,KAAK60B,MAAMplB,QAAKslB,MAAO8E,SACtC7rB,OAAKuM,IACH,MAAOumB,GAAQhzB,IAAayM,EAC5Bva,KAAK+xC,gBAAgBvjC,wBAI3B,CAAE4mB,UAAU,IAGdp1B,yBAAqB+sC,QACnB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAA6B9b,SAC7BtiB,KAAQkyB,IAA6B,IAAlBA,EAAOlQ,SAC1B4c,QAAextC,KAAK60B,MAAMplB,QAAKslB,MAAO8E,SACtC7rB,OAAKuM,IACH,MAAOumB,GAAQhzB,IAAayM,EAC5Bva,KAAK+xC,gBAAgBtjC,eAAeX,GAAWgzB,GAAO3kB,YAI5D,CAAEiZ,UAAU,IAGdp1B,2BAAqB+sC,MACnB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAA6Bhc,OAC7BpiB,OAAQkyB,IAA6B,IAAlBA,EAAOlQ,WAC1B5iB,KAAK8yB,IACH9gC,KAAK+xC,gBAAgB1jC,aAAayyB,EAAO3kB,YAI/C,CAAEiZ,UAAU,IAGdp1B,4BAAsB+sC,MACpB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAA8B/b,OAC9BriB,OAAQkyB,IAA6B,IAAlBA,EAAOlQ,WAC1B5iB,KAAK8yB,IACH9gC,KAAK+xC,gBAAgB1kC,gBAAgByzB,EAAO3kB,YAIlD,CAAEiZ,UAAU,kDA1GH0c,GAAkBvnC,gEAAlBunC,EAAkBzxC,QAAlByxC,EAAkB,YAAlBA,GAAb,mBCDA,MAAMl/B,YAGC,IAAMo/B,GAAb,MAAM,QACJjyC,YACUosC,EACE8F,GACAC,GACHrd,GAHC70B,gBACEA,4BACAA,oCACHA,aAGTA,YAAQ+sC,QACN,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAAmC1b,OACnC1iB,OAAQe,KAGJ,IADAiD,GAAUw7B,yBAAyB9c,UAOvCtjB,KAAKiP,KACH,MAAM0N,GACJ3qB,KAAKiyC,oBAAoB3nB,2BAC3B,UAAWpP,KAAKtN,OAAOC,KAAK8c,IAC1B3qB,KAAK60B,MAAMO,SACT,IAAIiF,KACF,CACEjb,GAAIuL,GAAczP,GAAGxN,aAClBid,GAAczP,KAEnB,IAINtI,GAAUw7B,yBAAyB9c,OAA8B,KAGvE,CACE8D,UAAU,IAIdp1B,4BAAsB+sC,MACpB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAA8Bzb,OAC9B3iB,OAAQkyB,KAA6B,IAAlBA,GAAOlQ,WAC1B5iB,KAAK8yB,KACH9gC,KAAKiyC,oBAAoBrnB,kBAAkBkW,GAAO3kB,YAIxD,CAAEiZ,UAAU,IAGdp1B,6BAAyB+sC,QACvB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAA8Brb,SAC9B/iB,KAAQkyB,KAA6B,IAAlBA,GAAOlQ,SAC1B4c,QAAextC,KAAK60B,MAAMplB,QAAKslB,MAAOqG,SACtCptB,OAAKuM,KACH,MAAOumB,GAAQnW,GAAiBpQ,GAChCva,KAAKiyC,oBAAoBpnB,mBACvBF,EACAmW,GAAO3kB,QAAQzO,cAKvB,CAAE0nB,UAAU,IAGdp1B,6BAAyB+sC,QACvB,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAAiCnb,OACjC7jB,OAAI,KACFhO,KAAKiyC,oBAAoBlnB,4BAI/B,CAAEqK,UAAU,IAGdp1B,+BAAyB+sC,MACvB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAAiCvb,OACjC7iB,OAAQkyB,KAA6B,IAAlBA,GAAOlQ,WAC1B5iB,KAAK8yB,KACH9gC,KAAKiyC,oBAAoBrnB,kBAAkBkW,GAAO3kB,YAIxD,CAAEiZ,UAAU,IAGdp1B,gCAA0B+sC,MACxB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAAkCtb,OAClC9iB,OAAQkyB,KAA6B,IAAlBA,GAAOlQ,WAC1B5iB,KAAK8yB,KACH9gC,KAAKiyC,oBAAoBxnB,qBAAqBqW,GAAO3kB,YAI3D,CAAEiZ,UAAU,kDA7GH4c,GAAsBznC,8EAAtBynC,EAAsB3xC,QAAtB2xC,EAAsB,YAAtBA,GAAb,mECYA,MAAMp/B,YAGC,IAAMu/B,GAAb,MAAM,QAIJpyC,YACUosC,EACE4F,GACAn9B,GACA5F,EACAojC,GACHvd,IALC70B,gBACEA,wBACAA,mBACAA,kBACAA,8BACHA,cAGTA,YAAQ+sC,QACN,IACE/sC,KAAKmsC,SAAS18B,QACZu9B,MAA4B/c,OAC5BrhB,OAAQe,IAEwD,IAA5DiD,GAAUw7B,yBAAyBne,UAMvCvgB,KAAWuN,IACT,MAAMpN,GAAW+C,GAAUe,eACrB0+B,GAAkC,IAAIpN,MAC5C,OAAoD,IAAhD3kC,2BACKN,KAAKoyC,sBACT7hC,gCACAd,MACCC,OAAWC,KACT,IAAU,IAANA,IAAqB,OAANA,GACjB,MAAM,EAER,MAAM2iC,GAAkB3iC,GACxB0iC,UAAgChhC,MAAK,MAC9BzB,MAAG0iC,OAIXtyC,KAAK4U,WACTkC,qBACCjH,GACAvP,uBAEDmP,MACC23B,QAAUiL,KACV3iC,OAAWjR,IACFuB,KAAKgP,WAAWO,IAAI9Q,MAE7BiR,OAAWC,KACT,IAAU,IAANA,IAAqB,OAANA,GACjB,MAAM,EAER,MAAM2iC,GAAkB3iC,GACxB0iC,UAAgChhC,MAAK,MAC9BzB,MAAG0iC,OAEZC,QAAWzjB,IACTA,GAAMrf,QACJ+iC,MAAWljC,KACF2D,QACL3S,sCAOdoP,OAAW+iC,IACT,MAAMC,GAA0BD,EAAmBE,kBACnD,YAAKL,gBAAkBG,EACvBzyC,KAAK60B,MAAMO,SAAS,IAAIwd,KAAoBH,IACrCzyC,KAAKoyC,sBAAsBnjC,4BAChCyjC,OAGJhjC,OAAWC,IACT3P,KAAK6yC,gBAAkBljC,EAAEf,OAAQqO,KAAY,IAANA,IACvC,MAAM61B,GAAiB9yC,KAAK6yC,gBAAgB,GAC5CjgC,UAAUw7B,yBAAyBne,OAAuB,EAC1DjwB,KAAK60B,MAAMO,SACT,IAAIwd,KAAoB,IACnB5yC,KAAKsyC,gBACRO,gBAAiB7yC,KAAK6yC,gBAAgB7kC,IAAK2B,IAAMA,GAAEE,aAGhD7P,KAAKoyC,sBAAsBjiC,4BAChC2iC,GAAejjC,aAGnB7B,OAAK2B,IAEH3P,KAAK60B,MAAMO,SACT,IAAI2d,KAF0BpjC,EAAoBG,YAM1D,CACEslB,UAAU,IAIdp1B,wBAAkB+sC,MAChB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAAuB5c,OACvBxhB,OAAQkyB,IAA6B,IAAlBA,EAAOlQ,WAC1B5iB,KAAK8yB,IACH9gC,KAAK+xC,gBAAgB1jC,aAAayyB,EAAO3kB,YAI/C,CAAEiZ,UAAU,IAGdp1B,0BAAsB+sC,QACpB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAA0Btc,SAC1B9hB,KAAQkyB,IAA6B,IAAlBA,EAAOlQ,SAC1B4c,QAAextC,KAAK60B,MAAMplB,QAAKslB,MAAOqH,SACtCpuB,OAAKuM,IACH,MAAOumB,GAAQhzB,IAAayM,EAC5Bva,KAAK+xC,gBAAgBvjC,wBAI3B,CAAE4mB,UAAU,IAGdp1B,yBAAqB+sC,QACnB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAA0Bxc,SAC1B5hB,KAAQkyB,IAA6B,IAAlBA,EAAOlQ,SAC1B4c,QAAextC,KAAK60B,MAAMplB,QAAKslB,MAAOqH,SACtCpuB,OAAKuM,IACH,MAAOumB,GAAQhzB,IAAayM,EAC5Bva,KAAK+xC,gBAAgBtjC,eAAeX,GAAWgzB,GAAO3kB,YAI5D,CAAEiZ,UAAU,IAGdp1B,2BAAqB+sC,MACnB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAA0B1c,OAC1B1hB,OAAQkyB,IAA6B,IAAlBA,EAAOlQ,WAC1B5iB,KAAK8yB,IACH9gC,KAAK+xC,gBAAgB1jC,aAAayyB,EAAO3kB,YAI/C,CAAEiZ,UAAU,IAGdp1B,4BAAsB+sC,MACpB,IACE/sC,KAAKmsC,SAAS18B,MACZu9B,QAA2Bzc,OAC3B3hB,OAAQkyB,IAA6B,IAAlBA,EAAOlQ,WAC1B5iB,KAAK8yB,IACH9gC,KAAK+xC,gBAAgB1kC,gBAAgByzB,EAAO3kB,YAIlD,CAAEiZ,UAAU,kDA3KH+c,GAAe5nC,oGAAf4nC,EAAe9xC,QAAf8xC,EAAe,YAAfA,GAAb,GCkFaa,GAAb,MAAM,sDAAOA,8BAASlsC,WAJRmkC,kCAdD,IACN7lC,KACH,CACEoF,QAASC,KACTC,SAAU7K,MAEZ,CACE2K,QAASyoC,KACTvoC,SAAUoT,IACVo1B,OAAO,GAET,CAAE1oC,QAASM,KAAiBF,SAAU,IACtC,CAAEJ,QAASO,KAAcH,SAAU,KACpCpD,SArEQ,CACP2rC,KACAC,KACApoC,KACAC,KACA6/B,EACAljC,KACAe,KACAyD,MACA3E,KACA4rC,aACE,CACEC,UAAWC,KACXC,eAAgBC,KAChBC,WAAYC,KACZC,aAAcC,KACdC,sBAAuBC,KACvBC,qBAAsBC,KACtBC,iBAAkBC,KAClBC,gBAAiBC,MAEnB,CACEC,cAAe,CACbC,0BAA0B,KAIhCC,aAAsB,CACpBnG,GACAnC,EACAO,GACA6C,GACA0C,GACAF,GACAK,MAEuB,IAAzB/iC,aACI,GACAqlC,gBAA+B,CAC7BC,OAAQ,MAEdhtC,KACAC,KACAS,MAIA+qC,KACAnoC,KACAC,KACAmoC,KACAxrC,KACAH,KACA2E,MACAhE,QAoBS4qC,GAAb,+BC7FA,IAAI2B,GAfHlgC,OAAemgC,OAASngC,OACxBA,OAAeogC,QAAUpgC,OACzBA,OAAeogC,QAAQC,SAAU,EACjCrgC,OAAeogC,QAAQt0C,QAAU,GACjCkU,OAAeogC,QAAQE,SAAW,CAAEC,MAAM,GAC1CvgC,OAAemgC,OAAOK,YAAc,IAAIC,MAAgB,IAE1B,IAA3B9lC,iBACF+lC,WAWWtM,sBACVE,cACA3D,UAAU,KACLuP,KACE,UAAWlgC,QAAU,YAAaA,OAAO2gC,OAC3C3gC,OAAO2gC,MAASC,UAElB5gC,OAAO2gC,MAAWT,IAEpBA,GAhBKW,OAAyBC,gBAAgBvC,IAgB7BzhC,MAAOikC,GAAQC,GAAQ3mB,MAAM,mBAAoB0mB,MAEtE3M,sBAAgCI","names":["ENSMarketplaceMainnetABI","inputs","internalType","name","type","outputs","stateMutability","constant","payable","ENSMarketplaceTestnetABI","ContractAddressesMainnetEnum","contractChainlinkMainnet","bulkRegistrationMainnet","marketplaceMainnet","acceptedCurrenciesMainnet","ContractAddressesTestnetEnum","contractChainlinkTestnet","bulkRegistrationTestnet","marketplaceTestnet","acceptedCurrenciesTestnet","currency","address","ETH","decimals","decimalRepresentation","highValueAsset","DAI","USDT","WBTC","SupportedCurrenciesEnum","ENSContracts","registrar","resolver","resolverTestnet","registrarController","migrationContract","token","nullResolver","payNoMarketAddress","BlockExplorersEnum","ENSTokenNFTABI","anonymous","indexed","LNRContracts","BUTTON","SAVE_CHANGES","PROCEED","DISMISS","CONNECT","CONNECT_WALLET","DISCONNECT","LOGOUT","CLOSE","SETTINGS","LAUNCH_APP","CONNECT_TO_PROCEED","VIEW_DETAILS","REFRESH","START_REGISTRATION","CANCEL","PRESS_ENTER","LEARN_MORE","CLOSE_WINDOW","SHOW_AVAILABLE_ONLY","SHOW_AVAILABLE","PROCEED_SEARCH","DOWNLOAD","SHOW_ALL","DESELECT_ALL","SHOW_SELCTED","LINK","CUSTOM_LINK","SET_QR_LINK_ALL","SET_QR_LINK","DISABLE_ALL","DISABLE_QR_CODE","ENABLE_QR_CODE","SET_QR_COLOR","SET_COLOR","SET_ALL_COLORS","SET_PRICE","SET_PRICE_ALL","RESET","CHECK_PROFILE","GO_TO_DASHBOARD","GO_TO_HOME","VIEW_PROFILE","CHECK_DOMAINS","TRANSACTION_DETAILS","BUY_NOW","CLEAR_HISTORY","DEFAULT","CUSTOM","FRACTIONALISE","MORE_INFO","LESS_INFO","APPROVE","NEXT","PENDING","REMOVE_ALL_ITEMS","ADD_ALL_TO_CART","BOOKMARK_ALL","DOWNLOAD_LIST","SHARE_LIST","MORE","CHANGE","HEADER","FAQ","BACK_TO_HOME","HOME","CATEGORIES","HELP_SUPPORT","HELP","CANCEL_REGISTRATION","PROFILE","DOCS","DOCUMENTATIONS","CART","BOOKMARKS","PAYMENTS_HISTORY","LIGHT_MODE","CUSTOM_RPC","SETUP_REQUIRED","MANAGE_DOMAINS","FEATURE_DISABLED","IPFS","INITIALISING","FINDING_PEERS","FAILED","READY","PUBLISHING","EVENTS","TRANSFER","REGISTRATION","RENEWAL","SALE","MINT","BURN","GENERIC","NETWORK_CHANGED_INCOMPATIBLE","IPNS_PUBLISHING_COMPLETED","PENDING_TRANSACTION_CERATED","RENEWAL_DURATIONS","ONE_WEEK","ONE_MONTH","THREE_MONTHS","SIX_MONTHS","ONE_YEAR","TWO_YEARS","THREE_YEARS","FOUR_YEARS","FIVE_YEARS","LABELS","TOP_CATEGORIES","TOTAL_ASSETS","MONTHLY_SALES","DAILY_VOLUME","MONTHLY_VOLUME","DAILY_SALES","TOP_SALE","TOP_SALES","TOP_BUYER","RECENT_SALES","SALES_ACTIVITY","ENTER_NAMES_TO_SEARCH","NOT_AVAILABLE","VOLUME","FLOOR","FILTER","RENEWAL_DURATION","TRANSACTION","USER_PROFILE","COMPLETE","ESTIMATED_COST","ADDRESS","PLEASE_WAIT","SELECT_A_DOMAIN","RENEW","SEARCH_FOR","MANAGE","COLLECT","LANDING_TEXT","GO_TO_PROFILE","SEARCH","CONTAIN_ALPHABET","CONTAIN_NUMBERS","CONTAIN_EMOJI","MIN_LENGTH","MAX_LENGTH","CONTAINING_KEYWORDS","FILTERS","DOMAINS","DOMAIN","DOMAIN_HISTORY","EXPIRATION_DATE","REGISTRATION_DATE","CREATION_DATE","DETAILS","YOUR_DOMAINS","PROCESSING","LAYOUT","ENTER_SUFFIX","ENTER_PREFIX","CLICK","CONNECT_TO_START","TIP","ACTION","ADVANCED_SEARCH_TIP","ADVANCED_SEARCH","ADVANCED_MODE","REGISTER_DOMAINS_TO","NO_DOMAINS_SELECTED","FIND_AND_REGISTER","SELECTED_DOMAINS","REGISTER","SEARCH_RESULTS","PROCEED_TO_REGISTRATION","REGISTER_DOMAINS","REGISTRANT_ADDRESS","SET_RESOLVER","TOTAL_COST","GAS_PRICE","NO_ADDRESS_DETECTED","DURATION","NOTICE_SELECT_AN_RPC","ENABLE_LIGHT_MODE","CLICK_NEXT_TO_PROCEED","REGISTRATION_CANCELLED_TITLE","REGISTRATION_CANCELLED_DESCRIPTION","CANCEL_REGISTRATION_TITLE","CANCEL_REGISTRATION_DESCRIPTION","BEFORE_COMMIT","COMMIT_SENT","COMMIT_COMPLETE","AWAIT","BEFORE_REGISTRATION","REGISTRATION_SENT","REGISTRATION_COMPLETE","REGISTRATION_COMPLETE_TITLE","YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED","BASKET_EMPTY","PLEASE_SELECT_DOMAINS_TO_REGISTER","PAYMENT","PAYMENT_CANCELLED","SPINNER","LEDGER_NO_DEVICE_SELECTED","NO_DATA_TO_DISPLAY","PERFORMING_SEARCH","LOADING_DATA","FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET","FORM_LABELS","ENTER_DURATION","ENTER_QR_LINK","ENTER_PRICE","ENTER_CUSTOM_ADDRESS","ENTER_RECEIVER_ADDRESS","FORM_ERRORS","INVALID_DURATION","INVALID_QR_LINK","INVALID_PRICE","INVALID_ADDRESS","STEP","STEP_1","STEP_2","STEP_3","STEP_4","STEP_5","RENEWAL_COST","ESTIMATED_RENEWAL_COST","RENEWAL_COMPLETE","DOMAINS_READY_FOR_RENEWAL","TRANSFER_TO","TRANSFER_COMPLETE","SETUP_INSTRUCTION","CONTRACT_APPROVAL_NOTE","DOMAINS_READY_FOR_TRANSFER","o","c","S","R","h","A","validTranslations","en","EN","de","DE","es","ES","fr","FR","ru","RU","jp","JP","cn","CN","HammerJsConf","HammerGestureConfig","constructor","this","swipe","velocity","threshold","t","factory","generalConfigurations","version","defaultLanguage","defaultPage","PagesEnum","maximumDecimalInPrices","maxAttemptsToCheckoutData","sessionTimeout","maxRPCCallRetries","timeUntilImageLoadErrors","timeToUpdateEthUSDRate","timeToUpdateCheckoutPipe","timeToUpdateRegistrationGasPrice","timeUntilCheckoutExpires","maxBlogsOnHome","maxConfirmationsUntilTxFinal","declarePaymentStatusUnkownUntilXFailedDataFetches","gasLimitBuffer","maxCheckoutRetryUntilRehydrateProcessId","maxIpfsSubscriptionRetries","maxDomainsToRegister","maxYearsRegistration","maxTotalCostBuffer","maxDomainSearch","ENS","LNR","defaultCurrency","enableCustomRPC","frontpageBlogsFeed","docsLink","blockscanLink","nftyChatLink","appName","appStagingName","trezorManifest","email","appUrl","appMeta","description","url","icons","enabledTools","category","management","canvas","registration","profile","domain","enablePoapResolution","poapRequiredTools","required","poapId","allowedIds","wallectConnectSupportedWallets","domainsCanBeRegistered","DomainTypeEnum","domainExtensions","domainNormalisationRequired","domainTldTitles","categoiesDataSourceFallback","categoriesUseFallback","categoryChartTimeRange","categoriesDomain","check","confetti","cart_empty","llayers","spin","infiniteLoopedIcons","imageToPreload","privatePages","invalidChars","dataNodeEndpoints","ping","checkout","EnsEventsEnum","EnsEvensSymbolEnum","UserStoreErrorsEnum","serviceProviders","UserService","UserSessionService","UserFacadeService","PagesFacadeService","NavigatorFacadeService","NavigatorButtonsFacadeService","FormValidationService","MiscUtilsService","TranslationService","FormatTimePipe","TimeAgoPipe","HttpClient","EnsService","RegistrationDataService","BookmarksServiceService","RegistrationServiceService","PaymentStorageService","WalletConnectService","DownloadService","ContractService","EnsMarketplaceService","LnrService","CategoriesDataService","PoapService","routerPaths","bootstrap","home","notfound","manage","ValidRPCProvidersEnum","PaymentErrorCodes","PaymentTypesEnum","NonceTypesEnum","WalletTypesEnum","IconModule","imports","TranslationModule","MatDialogModule","MatButtonModule","FlexLayoutModule","CustomAddressDialogModule","ReactiveFormsModule","CommonModule","FormsModule","MatIconModule","MatFormFieldModule","MatInputModule","GenericDialogModule","GenericDialogComponent","OnboardDialogModule","SharedModule","SpinnerCustomModule","BulkSearchModule","MatSlideToggleModule","MatProgressBarModule","BlockyModule","SettingsDialogModule","MainHeaderModule","MatBadgeModule","MatMenuModule","MatAutocompleteModule","EtherDecimalFixedModule","RenewManagementDialogModule","OnboardManagementDialogModule","TimeAgo","EtherDecimalFixedPipe","transform","value","toFixed","pure","DatePipe","inputDate","Date","parseInt","super","transformShortened","formatTimePipe","timeAgo","time","format","toLowerCase","indexOf","i0","provide","HAMMER_GESTURE_CONFIG","useClass","MAT_PROGRESS_BAR_DEFAULT_OPTIONS","useValue","MAT_BOTTOM_SHEET_DATA","MAT_DIALOG_DATA","MatDialogRef","HttpClientModule","RouterModule","MatBottomSheetModule","MatExpansionModule","MatChipsModule","MatSelectModule","MatTabsModule","MatCardModule","MatDividerModule","MatRadioModule","MatStepperModule","MatCheckboxModule","MatSliderModule","MatRippleModule","MatProgressSpinnerModule","MatTableModule","MatListModule","MatTooltipModule","MatDatepickerModule","MatNativeDateModule","MatSnackBarModule","MatPaginatorModule","MatSortModule","DragDropModule","OverlayModule","QRCodeModule","NgxColorsModule","snackBar","countBookmarks","loadBookmarksAndFeed","length","loadBookmarks","localStorage","getItem","sBookmarks","JSON","parse","saveAllBookmark","domainsData","bookmarksRaw","reduce","accumulator","labelName","bKeys","Object","keys","bookmarks","Set","map","k","concat","setItem","stringify","saveBookmark","domainData","push","removeAllBookmarks","removeBookmark","domainName","bookmarksUpdated","filter","d","clearBookmarks","isDomainBookmarked","httpClient","pingCategoriesDataProviders","endPoints","useEnpoints","environment","endPointRequests","e","get","join","pipe","switchMap","r","of","provider","result","catchError","forkJoin","getCategoriesIpfsMetadata","endPoint","getCategoriesRootVolumeData","useEnpoint","getCategoriesData","collection","getCategoriesRootFallbackData","getGasLimitEstimation","method","params","payer","contractAddress","contractABI","providerFunction","Contract","Observable","observer","estimateGas","from","then","next","complete","catch","CurrencyService","deriveCurrencyAddressFromName","currencies","toUpperCase","deriveCurrencyDataFromCurrencyName","currencySearched","convertAmountToDecimal","amountInString","paymentCurrency","currencyData","bnAmount","BigNumber","ethers","convertAmountToToken","getSupportedCurrencies","determineDefaultCurrencyForPayment","searchType","chooseSecondDefault","secondDefaultToBeChosen","chainlinkV3ABI","globalAny","CurrencyExchangeService","paymentFacade","getPrices","processorLocked","timer","i","chainlink","latestRoundData","normalizedPrices","setEthUsdRate","answer","toNumber","toString","chainlinkAddress","canvasProvider","mistUtils","download","meta","dataRaw","fileName","data","TextEncoder","encode","blob","Blob","fileURL","URL","createObjectURL","window","open","contractService","ensService","checkApproval","tokenId","contract","getENSTokenContract","ownerOf","isApprovedForAll","marketplaceContractAddress","transfer","domainNames","to","getENSMarketplaceContract","dataMethod","dataParams","dataInput","interface","encodeFunctionData","gasLimit","marketplaceContractABI","toPromise","approve","operator","approvalStatus","renew","priceRanges","duration","totalCost","namesLengths","getNameLength","add","http","getDomainMetadata","domainHash","ensMetadataAPI","getDomainContentHash","ethName","getResolver","getContentHash","web2Link","replace","findDomains","domains","ensGraphQLAPI","query","gql","request","getDomain","downloadDomainsListNamesOnly","finalForm","downloadDomainsListCSV","kk","calculateExpiry","expiryDate","eDate","getTime","calculateGracePeriodPercentage","timeUtilGraceEnds","gracePeriod","isDomainNameNotValid","prefixedOrSuffixed","prefixedAndSuffixed","minLengthOverride","skipNormalisation","minLength","invalidCharsForcedFilter","includes","ens_normalize","performNormalisation","prettify","ens_beautify","calculateDomainsPrice","ethToUsdRate","durationInYears","ethUsdRate","nameCost","parseFloat","commitSingleGasCost","commitGasCost","registerGasCost","registerWithConfigGasCost","renewGasCost","markFormGroupTouched","formGroup","values","controls","forEach","control","markAsTouched","PathResolveService","resolve","route","state","typoPath","getThreshold","dictionary","path","Math","abs","sortByDistances","pathsDistance","sort","a","b","levenshtein","matrix","j","charAt","min","TrezorService","miscUtils","pagesFacade","connect","TrezorConnect","lazyLoad","webusb","popup","manifest","coin","undefined","payload","descriptor","signPayment","accountInfo","transaction","nonce","toHexString","signed","success","utils","v","s","getWeb3Provider","detectEthereumProvider","p","IconRegistryService","injectCustomIcons","perloadCustomIcons","ic","ici","Image","src","PaymentEffectsService","recordLastConnectionAddress","connectionAddress","getLastConnectionAddress","lConnectionAddres","Intercept","router","userFacade","intercept","req","handle","LedgerService","userFacadeService","ledger","getAddress","createTransport","TransportUSB","transport","LedgerEth","signTransaction","substring","LNRABI","gloablAny","lnr","nameSearch","nameBytes","owner","id","labelHash","expiry","Number","MAX_SAFE_INTEGER","isNotAvailable","gracePeriodPercent","registrationDate","createdAt","MetamaskService","getAccounts","chainChangedDetectionDaemon","ethereum","on","chainId","setNetworkChainCode","accounts","removeUser","getChainId","networkVersion","Ethers","payloadHash","tx","roundUp","num","roundTo","round","testJSON","json","str","testUrl","RegExp","checksumEtheruemAddress","commafied","parts","split","prependToArray","array","newArray","slice","unshift","toHex","rb","testNumeric","testAlphaNumeric","testAlpha","testEmoji","testIntNumeric","parseXml","xml","dom","DOMParser","parseFromString","PaymentStoreErrorsEnum","PaymentErrorService","getPaymentErrorTranslatedTextKey","paymentError","getPaymentErrorEnumKey","errorCode","networkName","removePayments","removeItem","savePayments","paymentData","loadPayments","l","PaymentService","userService","currencyService","walletService","prepareTransaction","toAddress","gasPrice","payment","gas","paymentTotal","paymentAbstractBytesSlot","resolveAddressOfEth","walletAddress","resolveName","n","getWalletNonce","getTransactionCount","getGasPrice","getFeeData","feeData","getPoaps","poapGraphQLAPI","getPoapIds","poapResult","tokens","event","getPoapTokens","getPoapTokensByPoapId","poapTokens","ENSBulkRegistrationContractMainnetABI","components","ENSBulkRegistrationContractTestnetABI","RegistrationFacilityService","miscUtilsService","paymentService","registrationDomainsToCommitmentPacket","secret","commitments","compiled","nc","reverseRecord","fuses","wrapperExpiry","metadata","commitmentPacketToRegistrationDomains","decompiled","createRegistrationCommitmentPacket","getEnsBulkRegistrationContract","comitmentsPrepared","nCP","isResolverSet","commitmentResult","createCommitmentsForRegistration","bulkRegistrationContractAddress","BulkRegistrationContractABI","pr","mul","div","createRegistrationRequestPaymentPacket","commitmentsPrepared","decodeRegistrationPacket","abstractData","parseTransaction","completeRegistration","names","EnsTestnetABI","EnsABI","EnsRegistrarControllerTestnetABI","EnsRegistrarControllerABI","martketSaleTopics","SEAPORT","RARIBLE","X2Y2","LOOKSRARE","SortableMarkets","resolevTxType","relatedNameLabelHash","marketTopics","markets","qualifiedTx","logs","topics","resolvedEventType","labelHashInHex","paymentNoAddressBytes","topicNormalised","x","whichMarket","marketBuyer","getMarketBuyer","marketSeller","getMarketSeller","txHash","transactionHash","txValueToEther","date","timestamp","registrant","w","uniqueSet","filteredEvents","re","isDuplicate","has","market","eventWholeData","match","getENSContract","ensContractABI","getENSRegistrarControllerContract","ensRegistrarControllerContractABI","countRegistrations","loadRegistrationsAndFeed","loadRegistrations","sRegistrations","saveAllRegistrations","registrationsRaw","registrations","saveRegistrations","removeRegistration","registrationsUpdated","removeAllRegistrations","isDomainOnRegistrationList","TranslationPipe","translationService","language","getLanguage","translations","getTranslation","keysSplit","default","currentKey","key","lang","savedLanguage","loadLanguage","navigator","getLocale","getCacheableLanguagekeys","translation","getText","saveLanguage","getUserDomains","getEthAddress","getEthName","lookupAddress","getUserText","text","getUserContentHash","metamaskService","quitUserSession","saveUserSession","userData","loadUserSession","getUserSessionProvider","providerData","newProvider","createAlchemyFrontDefaultProvider","E","createAlchemyFrontProvider","createInfuraFrontProvider","createJSONFrontProvider","getDefaultChainId","chain","providerKeys","providerKey","providerKeyPicked","floor","random","providers","projectId","projectSecret","ngZone","dateNow","walletConnect","connector","WalletConnect","bridge","qrcodeModal","QRCodeModal","qrcodeModalOptions","mobileLinks","desktopLinks","clientMeta","error","wc","killSession","setErrorState","chainAccount","gotoPageRoute","createSession","account","registerUser","walletType","sendTransaction","WalletService","produceNonce","nonceLength","charLibrary","nonceString","rnum","validateWalletAddress","test","InitEffectsCategory","SetCategoriesMetadata","SetCategoriesRootVolumeData","AddOneCategory","UpdateCategory","UpsertOneCategory","UpsertManyCategory","RemoveOneCategory","RemoveManyCategory","RemoveAllCategory","SetCategoryError","toSave","InitEffectsENSBookmark","AddOneENSBookmark","UpdateENSBookmark","UpsertOneENSBookmark","UpsertManyENSBookmark","RemoveOneENSBookmark","RemoveManyENSBookmark","RemoveAllENSBookmark","SetENSBookmarkError","InitEffectsENSRegistration","AddOneENSRegistration","UpdateENSRegistration","UpsertOneENSRegistration","UpsertManyENSRegistration","RemoveOneENSRegistration","RemoveManyENSRegistration","RemoveAllENSRegistration","SetENSRegistrationError","SetNavigatorButtonsState","GetNavigatorButtonsState","SetNavigatorState","GetNavigatorState","InitEffectsPages","ShowLoadingProgressBarOnLoad","HideLoadingProgressBarOnLoadFinished","SetPagesCriticalError","SetPagesPageSlide","SetPagesState","SetPageIpfsErrors","SetPageIpfsState","SetPageChainCode","SetPagesNewPageState","SetPagesNetworkState","SetPagesVisibility","SetRPCProvider","SetPagesNetworkStateOffline","GetPagesState","GotoPageRoute","redirect","firstTimeSet","InitEffectsPayments","PaymentCheckFulfilled","CancelledPayment","AddOnePayment","UpdatePayment","UpsertOnePayment","UpsertManyPayment","SetEthUSDRates","RemoveOnePayment","RemoveManyPayment","RemoveAllPayment","ArchiveAllPayment","SetPaymentError","InitEffectsUserState","SetUserPoaps","SetUserState","SetUserError","GetUserState","RemoveUserError","RemoveUserState","RemoveUser","AddUser","UpdateUser","RegisterUser","store","userState$","select","getCurrentUserState","user$","getCurrentUser","startEffects","dispatch","UserEffectsInit","UserRegister","newUserState","userState","UserStateSet","removeUserState","UserStateRemove","UserRemove","removeUserStateError","UserErrorRemove","UserErrorSet","addUser","userAddData","UserAdd","updateUser","UserUpdate","PaymentFacadeService","paymentState$","getPaymentState","pendingPayments$","getPendingPayments","paymentsStoreError$","getPaymentStateError","paymentsStoreLoading$","getPaymentStateLoading","ethUsdPrice$","getEthUsdPrice","PaymentsEffectsInit","usdRate","PaymentETHUSDRatesSet","createPayment","PaymentAddOne","removeAllPayment","PaymentRemoveAll","removePayment","PaymentRemoveOne","paymentSerial","payments","PaymentRemoveMany","archiveAllPayment","PaymentArchiveAll","upsertPayment","PaymentUpsertOne","updatePayment","PaymentUpdate","getPayment","paymentId","selectPayment","getPayments","removePaymentStateError","PaymentErrorSet","ENSBookmarkFacadeService","getENSBookmarkState$","getENSBookmarkState","ENSBookmarkEffectsInit","addBookmark","bookmark","ENSBookmarkAddOne","ENSBookmarkRemoveOne","ENSBookmarkRemoveAll","removeBookmarks","ENSBookmarkRemoveMany","upsertBookmark","ENSBookmarkUpsertOne","upsertAllBookmark","ENSBookmarkUpsertMany","updateBookmark","ENSBookmarkUpdate","getBookmark","bookmarkId","selectENSBookmark","getBookmarks","getENSBookmarks","removeBookmarkStateError","ENSBookmarkErrorSet","ENSRegistrationFacadeService","getENSRegistrationState$","getENSRegistrationState","ENSRegistrationEffectsInit","addRegistration","ENSRegistrationAddOne","ENSRegistrationRemoveOne","removeRegistrations","ENSRegistrationRemoveMany","ENSRegistrationRemoveAll","upsertRegistration","ENSRegistrationUpsertOne","upsertAllRegistration","ENSRegistrationUpsertMany","updateRegistration","ENSRegistrationUpdate","getRegistration","registrationId","selectENSRegistration","getRegistrations","getENSRegistrations","removeRegistrationStateError","ENSRegistrationErrorSet","CategoryFacadeService","getCategoryState$","getCategoryState","CategoryEffectsInit","CategoryAddOne","CategoryRemoveOne","CategoryRemoveAll","categories","CategoryRemoveMany","CategoryUpsertOne","CategoryUpsertMany","CategoryUpdate","selectCategory","getCategorys","CategoryErrorSet","disabledButtonnavigatorState$","getCurrentNavigatorButtonsState","newNavigatorButtonsState","navigatorState","setTimeout","NavigatorButtonsStateSet","resetNavigatorButtonState","initialNavigatorButtonsState","navigatorState$","getCurrentNavigatorState","newNavigatorState","NavigatorStateSet","resetNavigatorState","initialNavigatorState","navigatorFacade","navigatorButtonFacade","dialog","pagesState$","getCurrentPagesState","pageErrorCode$","getCurrentErrorCode","pagesIpfsState$","getIpfsState","pagesIpfsError$","getIpfsError","pageLoadingState$","getCurrentPageLoadState","pageCritiaclError$","getCriticalErrorState","pageVisibility$","getCurrentPageVisibility","PagesEffectsInit","showLoadingProgressBar","document","getElementById","style","display","PagesShowLoadingProgressBarOnLoad","showNotEnabledToolDialog","titleText","subText","panelClass","setPageCriticalError","errorOccured","PagesSetCriticalError","setRpcProvider","PagesSetRPCProvider","setIpfsError","PagesSetIpfsError","setIpfsState","PagesSetIpfsState","hideLoadingProgressBar","PagesHideLoadingProgressBarOnLoadFinished","newPagesState","pagesState","PagesNewPageStateSet","newNetworkState","networkState","PagesNetworkStateSet","chainCode","PagesSetChainCode","setChainCodeByNetworkName","triggerNetworkOfflineDialog","PagesNetworkOfflineStateInvoke","setPageSlide","pageSlide","PagesSetPageSlide","pageRoute","toPageId","PageGotoRoute","pageId","disabledButtons","action","navigatorActiveButtonId","navigatorData","IpfsStatesEnum","initialPagesState","optionalProvider","pageVisibility","criticalErrorOccured","currentPageId","currentPageSlide","ipfsError","ipfsReady","networkStatus","networkChainCode","isPageLoading","initialUserState","loading","user","poapsResolved","poaps","adapter","createEntityAdapter","selectId","initialPaymentState","getInitialState","ethUsdPrice","paymentCancelled","stateChange","upsertOne","ids","entities","addOne","upsertMany","removeOne","removeMany","removeAll","updatedPayments","archived","ensRegistrationAdapter","initialENSRegistrationState","ensBookmarkAdapter","initialENSBookmarkState","CategoryAdapter","initialCategoryState","categoriesMetadata","categoriesRootVolumeData","getNavigatorButtonsState","createFeatureSelector","createSelector","getNavigatorState","getPagesState","getCurrentNetworkChainId","getUserState","getUser","getPaymentStateFull","pendingPs","ps","paymentStatus","getENSRegistrationStateFull","archivedPs","getENSBookmarkStateFull","getCategoryStateFull","ctx_r13","ctx_r15","ctx_r16","pagesFacadeService","genericDialogRef","Subject","ngOnInit","backdropClick","subscribe","closedByButton","closeDialog","overlays","getElementsByClassName","wrappers","overlaysCountOnInit","remove","attr","createAttribute","attributes","setNamedItem","existingAttr","getNamedItem","newAttr","close","goToOnExit","goToOnExitPage","yesNoPressed","yesNoButton","goToLink","buttonLink","buttonLinkPageRef","textAlign","selectors","IconComponent","iconRegistryService","iconsRegistry","iconId","stopCheck","checkIconSubscription","interval","takeUntil","icon","nativeElement","innerText","setIcon","replaceAll","APNG","parseURL","apng","width","height","iconAnimation","addContext","getContext","playIcon","play","rewind","frames","ngAfterViewChecked","isVisible","offsetParent","ngOnDestroy","unsubscribe","_reboot","asObservable","BootController","instance","watchReboot","reboot$","restart","production","development","deployed","local","chrome","defaultChain","baseUrl","validChainIds","networks","goerli","networkId","ensApp","homestead","routes","redirectTo","pathMatch","loadChildren","Promise","m","BootstrapModule","HomeModule","CanvasModule","DomainModule","ProfileModule","ManageModule","CheckoutModule","CategoryModule","NotFoundModule","AppRoutingModule","useHash","NetworkStatusEnum","AppComponent","userSessionService","iconsRegistryService","onNetworkOnline","target","onNetworkOffline","cId","ngDoCheck","cdk","lightMode","classList","ngAfterViewInit","onLine","getHeight","innerHeight","pageLoadingState","ctx","NavigatorEffects","actions$","RpcService","loadRpc","saveRpc","rpcData","removeRPC","PagesEffects","activatedRoute","ensBookmarksFacade","ensRegistrationFacade","categoriesFacade","rpcService","createEffect","ofType","events","runOutsideAngular","NavigationStart","NavigationEnd","NavigationError","assessProviderChanges","createProvider","withLatestFrom","networkAndPageState","network","pageState","delay","run","message","navigateByUrl","addEventListener","hidden","PagesSetVisibility","initiateOtherEffects","canvasEffectsInitialised","UserEffects","trezorService","ledgerService","poapService","userSessionStored","defaultChainId","connectType","userDataParsed","UserPoapsSet","userPoaps","userPoapTokens","timeNow","timeout","userSession","connectSignature","originalConnectAddress","deviceLanguage","PaymentEffects","paymentErrorService","currencyExchangeService","walletConnectService","paymentStorageService","paymentEffectsService","PaymentUpsertMany","paymentHash","CheckPaymentFulfilled","preparedTx","paymentMarketAddress","paymentGasLimit","staticGenericTranslatedTexts","horizontalPosition","verticalPosition","txToFilter","txHex","signedPacked","hash","staticPaymentTranslatedTexts","PaymentCancelled","paymentNonce","paymentResolved","pvp","pv","paymentState","mergeMap","hasResolved","getBlockNumber","blockNumber","searchTxFromBlock","paymentPayer","paymentPayee","getTransactionReceipt","foundTx","getTransactionByNonce","status","confirmations","paymentDate","paymentType","ENSBookmarkEffects","bookMarkService","ENSRegistrationEffects","registrationService","registrationFacilityService","CategoryEffects","categoriesDataService","hasRootCategoryDataBeenResolved","categoryMetdata","retryWhen","delayWhen","categoryMetdataRaw","categoriesRootProviders","rootDataProviders","CategoryMetadataSet","activeProviders","providerChosen","CategoryRootVolumeDataSet","AppModule","HTTP_INTERCEPTORS","multi","BrowserModule","BrowserAnimationsModule","StoreModule","UserState","UserReducers","NavigatorState","NavigatorReducers","PagesState","PagesReducers","PaymentState","PaymentReducers","NavigatorButtonsState","NavigatorButtonsReducers","ENSRegistrationState","ENSRegistrationReducers","ENSBookmarkState","ENSBookmarkReducers","CategoriesState","CategoryReducers","runtimeChecks","strictActionImmutability","EffectsModule","StoreDevtoolsModule","maxAge","mainApp","global","process","browser","versions","node","appIsPaused","BehaviorSubject","enableProdMode","ngRef","destroy","__NgCli_bootstrap_1","bootstrapModule","err","console"],"sources":["./src/app/configurations/contracts/ens-marketplace-abi-mainnet.model.ts","./src/app/configurations/contracts/ens-marketplace-abi-testnet.model.ts","./src/app/configurations/contracts/contract-addresses-mainnet.enum.ts","./src/app/configurations/contracts/contract-addresses-testnet.enum.ts","./src/app/configurations/contracts/supported-currencies.enum.ts","./src/app/configurations/contracts/ens-contracts.model.ts","./src/app/configurations/contracts/block-explorers.enum.ts","./src/app/configurations/contracts/ens-token-nft-abi.model.ts","./src/app/configurations/contracts/lnr-contracts.model.ts","./src/app/configurations/translations/en.conf.ts","./src/app/configurations/translations/de.conf.ts","./src/app/configurations/translations/cn.conf.ts","./src/app/configurations/translations/jp.conf.ts","./src/app/configurations/translations/es.conf.ts","./src/app/configurations/translations/ru.conf.ts","./src/app/configurations/translations/fr.conf.ts","./src/app/configurations/translation.conf.ts","./src/app/configurations/hammer-js.conf.ts","./src/app/configurations/general.conf.ts","./src/app/configurations/icons.ts","./src/app/configurations/image-to-preload.conf.ts","./src/app/configurations/private-pages.conf.ts","./src/app/configurations/invalid-chars.conf.ts","./src/app/configurations/data-node-endpoints.conf.ts","./src/app/models/domains/domain-type.enum.ts","./src/app/models/ens/ens-events.enum.ts","./src/app/models/error-enums/user-store-errors.enum.ts","./src/app/models/service-providers.model.ts","./src/app/models/pay-no-market-address.model.ts","./src/app/models/router-paths.model.ts","./src/app/models/rpc/valid-rpc-providers.enum.ts","./src/app/models/states/pages-interfaces/pages.enum.ts","./src/app/models/states/payment-interfaces/payment-error-codes.enum.ts","./src/app/models/states/payment-interfaces/payment-types.enum.ts","./src/app/models/states/wallet-interfaces/nonce-types.enum.ts","./src/app/models/states/wallet-interfaces/wallet-types.enum.ts","./src/app/modules/miscs/icon.module.ts","./src/app/modules/miscs/custom-address-dialog.module.ts","./src/app/modules/miscs/generic-dialog.module.ts","./src/app/modules/miscs/onboard-dialog.module.ts","./src/app/modules/miscs/spinner-custom.module.ts","./src/app/modules/miscs/bulk-search.module.ts","./src/app/modules/miscs/blocky.module.ts","./src/app/modules/miscs/settings-dialog.module.ts","./src/app/modules/miscs/main-header.module.ts","./src/app/modules/miscs/ether-decimal-fixed.module.ts","./src/app/modules/miscs/renew-management-dialog.module.ts","./src/app/modules/miscs/onboard-management-dialog.module.ts","./src/app/modules/miscs/translation.module.ts","./src/app/modules/pipes/ether-decimal-fixed.pipe.ts","./src/app/modules/pipes/format-time.pipe.ts","./src/app/modules/pipes/time-ago.pipe.ts","./src/app/modules/shared.module.ts","./src/app/services/bookmarks/bookmarks-service.service.ts","./src/app/services/categories-data/categories-data.service.ts","./src/app/services/contract/contract.service.ts","./src/app/services/currency/currency.service.ts","./src/app/configurations/contracts/chainlink-aggregator-v3.abi.ts","./src/app/services/currency/currency-exchange.service.ts","./src/app/services/download/download.service.ts","./src/app/services/ens-marketplace/ens-marketplace.service.ts","./src/app/services/ens/ens.service.ts","./src/app/services/form-validation/form-validation.service.ts","./src/app/services/path-resolve/path-resolve.service.ts","./src/app/services/trezor/trezor.service.ts","./src/app/services/icon-registry/icon-registry.service.ts","./src/app/services/store/payments/payment-effects.service.ts","./src/app/services/intercept/intercept.ts","./src/app/services/ledger/ledger.service.ts","./src/app/configurations/contracts/lnr.abi.ts","./src/app/services/lnr/lnr.service.ts","./src/app/services/metamask/metamask.service.ts","./src/app/services/misc-utils/misc-utils.service.ts","./src/app/models/error-enums/payment-store-errors.enum.ts","./src/app/services/payment/payment-error.service.ts","./src/app/services/payment/payment-storage.service.ts","./src/app/services/payment/payment.service.ts","./src/app/services/poap/poap.service.ts","./src/app/configurations/contracts/ens-bulk-registration-mainnet.abi.ts","./src/app/configurations/contracts/ens-bulk-registration-testnet.abi.ts","./src/app/services/registration/registration-facility.service.ts","./src/app/configurations/contracts/ens-abi-testnet.model.ts","./src/app/configurations/contracts/ens-abi.model.ts","./src/app/configurations/contracts/ens-registrar-controller-abi-testnet.model.ts","./src/app/configurations/contracts/ens-registrar-controller-abi.model.ts","./src/app/services/registration/registration-data.service.ts","./src/app/services/registration/registration-service.service.ts","./src/app/services/translations/translation.pipe.ts","./src/app/services/translations/translation.service.ts","./src/app/services/user/user.service.ts","./src/app/services/user/user-session.service.ts","./src/app/services/wallet-connect/wallet-connect.service.ts","./src/app/services/wallet/wallet.service.ts","./src/app/store/actions/categories.action.ts","./src/app/store/actions/ens-bookmark.action.ts","./src/app/store/actions/ens-registration.action.ts","./src/app/store/actions/navigation-buttons.actions.ts","./src/app/store/actions/navigator.actions.ts","./src/app/store/actions/pages.actions.ts","./src/app/store/actions/payment.actions.ts","./src/app/store/actions/user.actions.ts","./src/app/store/facades/user.facades.ts","./src/app/store/facades/payment.facade.ts","./src/app/store/facades/ens-bookmark.facades.ts","./src/app/store/facades/ens-registration.facades.ts","./src/app/store/facades/categories.facades.ts","./src/app/store/facades/navigator-buttons.facades.ts","./src/app/store/facades/navigator.facades.ts","./src/app/store/facades/pages.facades.ts","./src/app/store/reducers/navigator-buttons.reducers.ts","./src/app/store/reducers/navigator.reducers.ts","./src/app/models/ipfs/ipfs-states.enum.ts","./src/app/store/reducers/pages.reducers.ts","./src/app/store/reducers/user.reducers.ts","./src/app/store/reducers/payment.reducers.ts","./src/app/store/reducers/ens-registration.reducers.ts","./src/app/store/reducers/ens-bookmark.reducers.ts","./src/app/store/reducers/categories.reducers.ts","./src/app/store/selectors/navigator-buttons.selectors.ts","./src/app/store/selectors/navigator.selectors.ts","./src/app/store/selectors/pages.selectors.ts","./src/app/store/selectors/user.selectors.ts","./src/app/store/selectors/payment.selectors.ts","./src/app/store/selectors/ens-registration.selectors.ts","./src/app/store/selectors/ens-bookmark.selectors.ts","./src/app/store/selectors/categories.selectors.ts","./src/app/widgets/generic-dialog/generic-dialog.component.html","./src/app/widgets/generic-dialog/generic-dialog.component.ts","./src/app/widgets/icon/icon.component.ts","./src/app/widgets/icon/icon.component.html","./src/boot-control.ts","./src/environments/environment.prod.ts","./src/app/app-routing.module.ts","./src/app/models/states/pages-interfaces/network-status.enum.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/store/effects/navigator.effects.ts","./src/app/services/rpc/rpc.service.ts","./src/app/store/effects/pages.effects.ts","./src/app/store/effects/user.effects.ts","./src/app/store/effects/payment.effects.ts","./src/app/store/effects/ens-bookmark.effects.ts","./src/app/store/effects/ens-registration.effects.ts","./src/app/store/effects/categories.effects.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["export const ENSMarketplaceMainnetABI = [\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'addressStorage',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    name: 'receiptNonces',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'reservedStorage',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'uintStorage',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'string[]',\n        name: 'domains',\n        type: 'string[]',\n      },\n    ],\n    name: 'transferDomains',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'renewDomains',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'getENSPriceRanges',\n    outputs: [\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: 'resetRentryGuard',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'nameExists',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'nameOwner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'domainName',\n        type: 'string',\n      },\n    ],\n    name: 'getNameHash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newController',\n        type: 'address',\n      },\n    ],\n    name: 'changeController',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'collectFees',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","export const ENSMarketplaceTestnetABI = [\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'addressStorage',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    name: 'receiptNonces',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'reservedStorage',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'uintStorage',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'string[]',\n        name: 'domains',\n        type: 'string[]',\n      },\n    ],\n    name: 'transferDomains',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'renewDomains',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'getENSPriceRanges',\n    outputs: [\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: 'resetRentryGuard',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'nameExists',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'nameOwner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'domainName',\n        type: 'string',\n      },\n    ],\n    name: 'getNameHash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newController',\n        type: 'address',\n      },\n    ],\n    name: 'changeController',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'collectFees',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","import { AcceptedCurrencyModel } from '../../models/currencies';\n\nexport enum ContractAddressesMainnetEnum {\n  ETH = '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',\n  DAI = '0xf80A32A835F79D7787E8a8ee5721D0fEaFd78108',\n  USDT = '0xB404c51BBC10dcBE948077F18a4B8E553D160084',\n  WBTC = '0xa0E54Ab6AA5f0bf1D62EC3526436F3c05b3348A0',\n}\n\nexport const contractChainlinkMainnet =\n  '0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419';\nexport const bulkRegistrationMainnet =\n  '0x67f57d9C4dc6fbEE423B15B6bBe488c3896AfBc3';\nexport const marketplaceMainnet = '0x34c3f58058E2ad098ef437Ee5Ea1ff1fE2fe4214';\n\nexport const acceptedCurrenciesMainnet = [] as AcceptedCurrencyModel[];\n","import { AcceptedCurrencyModel } from '../../models/currencies';\n\nexport enum ContractAddressesTestnetEnum {\n  ETH = '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',\n  DAI = '0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD',\n  USDT = '0x13512979ADE267AB5100878E2e0f485B568328a4',\n  WBTC = '0x3b92f58feD223E2cB1bCe4c286BD97e42f2A12EA',\n}\n\nexport const contractChainlinkTestnet =\n  '0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e';\nexport const bulkRegistrationTestnet =\n  '0x37c6ea208a60FbD6D63B9C705F832246c8806C3c';\nexport const marketplaceTestnet = '0x4a21FD6B250c2EF7EFA4B52966F57A45179FFA57';\n\nexport const acceptedCurrenciesTestnet = [\n  {\n    currency: 'ETH',\n    address: ContractAddressesTestnetEnum.ETH,\n    decimals: 18,\n    decimalRepresentation: '1000000000000000000',\n    highValueAsset: true,\n  },\n  {\n    currency: 'DAI',\n    address: ContractAddressesTestnetEnum.DAI,\n    decimals: 18,\n    decimalRepresentation: '1000000000000000000',\n    highValueAsset: false,\n  } as AcceptedCurrencyModel,\n  {\n    currency: 'USDT',\n    address: ContractAddressesTestnetEnum.USDT,\n    decimals: 6,\n    decimalRepresentation: '1000000',\n    highValueAsset: false,\n  } as AcceptedCurrencyModel,\n  {\n    currency: 'WBTC',\n    address: ContractAddressesTestnetEnum.WBTC,\n    decimals: 18,\n    decimalRepresentation: '1000000000000000000',\n    highValueAsset: true,\n  } as AcceptedCurrencyModel,\n] as AcceptedCurrencyModel[];\n","export enum SupportedCurrenciesEnum {\n  ETH = \"Ethereum\",\n  DAI = \"Dai Stablecoin\",\n  USDT = \"Tether USD\",\n  WBTC = \"Wrapped Bitcoin\",\n}\n","import { payNoMarketAddress } from 'src/app/models/pay-no-market-address.model';\n\nexport const ENSContracts = {\n  registrar: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  resolver: '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41',\n  resolverTestnet: '0x4B1488B7a6B320d2D721406204aBc3eeAa9AD329',\n  registrarController: '0x283Af0B28c62C092C9727F1Ee09c02CA627EB7F5',\n  migrationContract: '0x6109DD117AA5486605FC85e040ab00163a75c662',\n  token: '0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85',\n  nullResolver: payNoMarketAddress,\n};\n","export enum BlockExplorersEnum {\n  homestead = 'https://etherscan.io/',\n  goerli = 'https://goerli.etherscan.io/',\n}\n","export const ENSTokenNFTABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'approved',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'balance',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'ownerOf',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getApproved',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: '_approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","import { payNoMarketAddress } from 'src/app/models/pay-no-market-address.model';\n\nexport const LNRContracts = {\n  registrar: '0x5564886ca2C518d1964E5FCea4f423b41Db9F561',\n  nullResolver: payNoMarketAddress,\n};\n","export default {\n  BUTTON: {\n    SAVE_CHANGES: 'Save Changes',\n    PROCEED: 'Proceed',\n    DISMISS: 'Dismiss',\n    CONNECT: 'Connect',\n    CONNECT_WALLET: 'Connect Wallet',\n    DISCONNECT: 'Disconnect',\n    LOGOUT: 'Logout',\n    CLOSE: 'Close',\n    SETTINGS: 'Settings',\n    LAUNCH_APP: 'Launch App',\n    CONNECT_TO_PROCEED: 'Connect Wallet',\n    VIEW_DETAILS: 'View Details',\n    REFRESH: 'Refresh',\n    START_REGISTRATION: 'Start Registration',\n    CANCEL: 'Cancel',\n    PRESS_ENTER: 'Press Enter',\n    LEARN_MORE: 'Learn More',\n    CLOSE_WINDOW: 'Close Window',\n    SHOW_AVAILABLE_ONLY: 'Show Available Only',\n    SHOW_AVAILABLE: 'Show Available',\n    PROCEED_SEARCH: 'Proceed Search',\n    DOWNLOAD: 'Download',\n    SHOW_ALL: 'Show All',\n    DESELECT_ALL: 'Deselect All',\n    SHOW_SELCTED: 'Show Selected',\n    LINK: 'Link',\n    CUSTOM_LINK: 'Custom Link',\n    SET_QR_LINK_ALL: 'Set QR Link All',\n    SET_QR_LINK: 'Set QR Link',\n    DISABLE_ALL: 'Disable All',\n    DISABLE_QR_CODE: 'Disable QR Code',\n    ENABLE_QR_CODE: 'Enable QR Code',\n    SET_QR_COLOR: 'Set QR Color',\n    SET_COLOR: 'Set Color',\n    SET_ALL_COLORS: 'Set All Colors',\n    SET_PRICE: 'Set Price',\n    SET_PRICE_ALL: 'Set Price All',\n    RESET: 'Reset',\n    CHECK_PROFILE: 'Check Profile',\n    GO_TO_DASHBOARD: 'Go to Dashboard',\n    GO_TO_HOME: 'Go To Home',\n    VIEW_PROFILE: 'View Profile',\n    CHECK_DOMAINS: 'Check Domains',\n    TRANSACTION_DETAILS: 'Transaction Details',\n    BUY_NOW: 'Buy Now',\n    CLEAR_HISTORY: 'Clear History',\n    DEFAULT: 'Default',\n    CUSTOM: 'Custom',\n    FRACTIONALISE: 'Fractionalise',\n    MORE_INFO: 'More Info',\n    LESS_INFO: 'Less Info',\n    APPROVE: 'Approve',\n    NEXT: 'Next',\n    PENDING: 'Pending',\n    REMOVE_ALL_ITEMS: 'Remove All Items',\n    ADD_ALL_TO_CART: 'Add All To Cart',\n    BOOKMARK_ALL: 'Bookmark All',\n    DOWNLOAD_LIST: 'Download List',\n    SHARE_LIST: 'Share List',\n    MORE: 'More',\n    CHANGE: 'Change',\n  },\n  HEADER: {\n    FAQ: 'FAQs',\n    BACK_TO_HOME: 'Back to Home',\n    HOME: 'Home',\n    CATEGORIES: 'Categories',\n    HELP_SUPPORT: 'Help & Support',\n    HELP: 'Help',\n    CANCEL_REGISTRATION: 'Cancel Registration',\n    PROFILE: 'Profile',\n    SETTINGS: 'Settings',\n    DOCS: 'Docs',\n    DOCUMENTATIONS: 'Documentations',\n    CART: 'Cart',\n    BOOKMARKS: 'Bookmarks',\n    PAYMENTS_HISTORY: 'Payments History',\n    LIGHT_MODE: 'Light Mode',\n    CUSTOM_RPC: 'Custom RPC',\n    SETUP_REQUIRED: 'Setup Required',\n    MANAGE_DOMAINS: 'Manage Domains',\n    APPROVE: 'Approve',\n    FEATURE_DISABLED: 'Feature Disabled',\n  },\n  IPFS: {\n    INITIALISING: 'Starting p2p',\n    FINDING_PEERS: 'Finding peers',\n    FAILED: 'Failed',\n    READY: 'Ready',\n    PUBLISHING: 'Publishing',\n  },\n  EVENTS: {\n    TRANSFER: 'Transfer',\n    REGISTRATION: 'Registration',\n    RENEWAL: 'Renewal',\n    SALE: 'Sale',\n    MINT: 'Mint',\n    BURN: 'Burn',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE:\n      'Network is not supported. Please change your network.',\n    IPNS_PUBLISHING_COMPLETED: 'Publishing completed!',\n    PENDING_TRANSACTION_CERATED:\n      'A new transaction has been created. Please check your wallet.',\n  },\n  RENEWAL_DURATIONS: {\n    ONE_WEEK: '1 Week',\n    ONE_MONTH: '1 Month',\n    THREE_MONTHS: '3 Months',\n    SIX_MONTHS: '6 Months',\n    ONE_YEAR: '1 Year',\n    TWO_YEARS: '2 Years',\n    THREE_YEARS: '3 Years',\n    FOUR_YEARS: '4 Years',\n    FIVE_YEARS: '5 Years',\n  },\n  LABELS: {\n    TOP_CATEGORIES: 'Top Categories',\n    TOTAL_ASSETS: 'Total Assets',\n    MONTHLY_SALES: 'Monthly Sales',\n    DAILY_VOLUME: 'Daily Volume',\n    MONTHLY_VOLUME: 'Monthly Volume',\n    DAILY_SALES: 'Daily Sales',\n    TOP_SALE: 'Top Sale',\n    TOP_SALES: 'Top Sales',\n    TOP_BUYER: 'Top Buyer',\n    RECENT_SALES: 'Recent Sales',\n    SALES_ACTIVITY: 'Sales Activity',\n    ENTER_NAMES_TO_SEARCH: 'Enter names to search',\n    NOT_AVAILABLE: 'Not Available',\n    VOLUME: 'Volume',\n    FLOOR: 'Floor',\n    FILTER: 'Filter',\n    RENEWAL_DURATION: 'Renewal Duration',\n    TRANSACTION: 'Transaction',\n    USER_PROFILE: 'User Profile',\n    FEATURE_DISABLED: 'This feature is currently disabled.',\n    COMPLETE: 'Complete',\n    ESTIMATED_COST: 'Estimated Cost',\n    ADDRESS: 'Address',\n    TRANSFER: 'Transfer',\n    PLEASE_WAIT: 'Please wait',\n    SELECT_A_DOMAIN: 'Select a Domain',\n    RENEW: 'Renew',\n    MANAGE_DOMAINS: 'Manage Domains',\n    SEARCH_FOR: 'Search For',\n    MANAGE: 'Manage',\n    COLLECT: 'Collect',\n    LANDING_TEXT:\n      'Open-source, decentralised, Web3 domains search, registration & marketplace.',\n    PROFILE: 'Profile',\n    GO_TO_PROFILE: 'Go to Profile',\n    SEARCH: 'Search',\n    CONTAIN_ALPHABET: 'Contain Alphabet',\n    CONTAIN_NUMBERS: 'Contain Numbers',\n    CONTAIN_EMOJI: 'Contain Emoji',\n    MIN_LENGTH: 'Min. Length',\n    MAX_LENGTH: 'Max. Length',\n    CONTAINING_KEYWORDS: 'Containing Keywords',\n    FILTERS: 'Filters',\n    DOMAINS: 'Domains',\n    DOMAIN: 'Domain',\n    DOMAIN_HISTORY: 'Domain History',\n    EXPIRATION_DATE: 'Expiration Date',\n    REGISTRATION_DATE: 'Registration Date',\n    CREATION_DATE: 'Creation Date',\n    DETAILS: 'Details',\n    YOUR_DOMAINS: 'Your Domains',\n    PROCESSING: 'Processing',\n    LAYOUT: 'Layout',\n    ENTER_SUFFIX: 'Enter suffix',\n    ENTER_PREFIX: 'Enter prefix',\n    CLICK: 'Click',\n    CONNECT_TO_START: ' to get started or ',\n    TIP: 'Tip',\n    ACTION: 'Action',\n    ADVANCED_SEARCH_TIP:\n      'use new line or commas to seperate your domain entries.',\n    ADVANCED_SEARCH: 'Advanced Search',\n    ADVANCED_MODE: 'Advanced Mode',\n    REGISTER_DOMAINS_TO: 'Register Domains To',\n    NO_DOMAINS_SELECTED: 'No domains selected.',\n    FIND_AND_REGISTER: 'Register domains e.g. domain1, domain2...',\n    SELECTED_DOMAINS: 'Selected Domains',\n    REGISTER: 'Register',\n    BOOKMARKS: 'Bookmarks',\n    SEARCH_RESULTS: 'Search Results',\n    PROCEED_TO_REGISTRATION: 'Proceed To Registration',\n    REGISTER_DOMAINS: 'Register Domains',\n    REGISTRANT_ADDRESS: 'Registrant Address',\n    SET_RESOLVER: 'Set Resolver',\n    TOTAL_COST: 'Total Cost',\n    GAS_PRICE: 'Gas Price',\n    NO_ADDRESS_DETECTED: 'No address detected.',\n    DURATION: 'Duration',\n    NOTICE_SELECT_AN_RPC:\n      'Notice: select an RPC that will be used in the application to replace the default RPC provider.',\n    ENABLE_LIGHT_MODE: 'Enable light layout style.',\n    CLICK_NEXT_TO_PROCEED: 'Click <b>Next</b> to proceed.',\n  },\n  REGISTRATION: {\n    REGISTRATION_CANCELLED_TITLE: 'Registration Cancelled',\n    REGISTRATION_CANCELLED_DESCRIPTION: 'Your registration has been cancelled.',\n    CANCEL_REGISTRATION_TITLE: 'Cancel Registration',\n    CANCEL_REGISTRATION_DESCRIPTION:\n      'Are you sure you want to cancel this registration? This action cannot be undone.',\n    BEFORE_COMMIT: 'Step 1: request registration.',\n    COMMIT_SENT: 'Processing request...',\n    COMMIT_COMPLETE: 'Step 1: request registration received...',\n    AWAIT: 'Finalising request...',\n    BEFORE_REGISTRATION: 'Complete registration.',\n    REGISTRATION_SENT: 'Completing registration...',\n    REGISTRATION_COMPLETE: 'Registration complete!',\n    REGISTRATION_COMPLETE_TITLE: 'Registration Complete',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED:\n      'Your domains have now been registered.',\n    BASKET_EMPTY: 'Your basket is empty',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER: 'Please select new domains to register.',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: 'Transaction cancelled. Please try again.',\n  },\n  SPINNER: {\n    LEDGER_NO_DEVICE_SELECTED:\n      'An error has occured while connecting to your wallet. Please try again.',\n    NO_DATA_TO_DISPLAY: 'No items to display.',\n    PERFORMING_SEARCH: 'Performing search...',\n    LOADING_DATA: 'Loading Data...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET:\n      'Please follow the instructions in your wallet to proceed.',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: 'Enter Duration',\n    ENTER_QR_LINK: 'Enter custom QR Code URL',\n    ENTER_PRICE: 'Enter price',\n    ENTER_CUSTOM_ADDRESS: 'Enter custom address',\n    ENTER_RECEIVER_ADDRESS: 'Enter Receiver Address',\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: 'Invalid Duration',\n    INVALID_QR_LINK: 'Invalid URL, please try again.',\n    INVALID_PRICE: 'Invalid price, please try again.',\n    NO_ADDRESS_DETECTED: 'No address detected, please try again.',\n    INVALID_ADDRESS: 'Invalid address, please try again.',\n  },\n  STEP: {\n    STEP_1: 'Step 1',\n    STEP_2: 'Step 2',\n    STEP_3: 'Step 3',\n    STEP_4: 'Step 4',\n    STEP_5: 'Step 5',\n  },\n  RENEW: {\n    RENEWAL_COST: 'Renewal Cost',\n    ESTIMATED_RENEWAL_COST:\n      'Below is the estimated renewal cost for this transaction.',\n    RENEWAL_COMPLETE: 'Renewal Complete',\n    DOMAINS_READY_FOR_RENEWAL:\n      ' Your domains are now ready renewal. To complete your renewal press proceed.',\n  },\n  TRANSFER: {\n    TRANSFER_TO: 'Transfer to',\n    TRANSFER_COMPLETE: 'Transfer Complete!',\n    SETUP_INSTRUCTION:\n      'To enabled ENS domains management, your account must be configured to approve domain transfers.',\n    CONTRACT_APPROVAL_NOTE:\n      'Contract approval allows the contract to perform transferring of domains on your behalf.',\n    DOMAINS_READY_FOR_TRANSFER:\n      \"Your domains are now ready for transfer. Enter the reciever's address and press proceed.\",\n  },\n};\n","export default {\n  BUTTON: {\n    SAVE_CHANGES: 'Änderungen speichern',\n    PROCEED: 'Fortfahren',\n    DISMISS: 'Verwerfen',\n    CONNECT: 'Verbinden',\n    CONNECT_WALLET: 'Wallet verbinden',\n    DISCONNECT: 'Verbindung trennen',\n    LOGOUT: 'Abmelden',\n    CLOSE: 'Schließen',\n    SETTINGS: 'Einstellungen',\n    LAUNCH_APP: 'App starten',\n    CONNECT_TO_PROCEED: 'Wallet verbinden',\n    VIEW_DETAILS: 'Details anzeigen',\n    REFRESH: 'Aktualisieren',\n    START_REGISTRATION: 'Registrierung starten',\n    CANCEL: 'Abbrechen',\n    PRESS_ENTER: 'Drücke Enter',\n    LEARN_MORE: 'Mehr erfahren',\n    CLOSE_WINDOW: 'Fenster schließen',\n    SHOW_AVAILABLE_ONLY: 'Nur verfügbare anzeigen',\n    SHOW_AVAILABLE: 'Nur verfügbare anzeigen',\n    PROCEED_SEARCH: 'Suche fortsetzen',\n    DOWNLOAD: 'Download',\n    SHOW_ALL: 'Alle anzeigen',\n    DESELECT_ALL: 'Alle abwählen',\n    SHOW_SELCTED: 'Ausgewählte anzeigen',\n    LINK: 'Link',\n    CUSTOM_LINK: 'Eigener Link',\n    SET_QR_LINK_ALL: 'QR-Link alle setzen',\n    SET_QR_LINK: 'QR-Link alle setzen',\n    DISABLE_ALL: 'Alle deaktivieren',\n    DISABLE_QR_CODE: 'QR-Code deaktivieren',\n    ENABLE_QR_CODE: 'QR-Code deaktivieren',\n    SET_QR_COLOR: 'QR-Farbe festlegen',\n    SET_COLOR: 'QR-Farbe festlegen',\n    SET_ALL_COLORS: 'QR-Farbe festlegen',\n    SET_PRICE: 'Preis festlegen',\n    SET_PRICE_ALL: 'Preis alle festlegen',\n    RESET: 'Reset',\n    CHECK_PROFILE: 'Profil prüfen',\n    GO_TO_DASHBOARD: 'Zum Dashboard gehen',\n    GO_TO_HOME: 'Gehe zu Home',\n    VIEW_PROFILE: 'Profil anzeigen',\n    CHECK_DOMAINS: 'Domänen überprüfen',\n    TRANSACTION_DETAILS: 'Transaktionsdetails',\n    BUY_NOW: 'Jetzt kaufen',\n    CLEAR_HISTORY: 'Verlauf löschen',\n    DEFAULT: 'Standard',\n    CUSTOM: 'Benutzerdefiniert',\n    FRACTIONALISE: 'Zersplittern',\n    MORE_INFO: 'Weitere Informationen',\n    LESS_INFO: 'Weniger Infos',\n    APPROVE: 'Genehmigen',\n    NEXT: 'Nächste',\n    PENDING: 'Ausstehend',\n    REMOVE_ALL_ITEMS: 'Alle Waren entfernen',\n    ADD_ALL_TO_CART: 'Alle zum Warenkorb hinzufügen',\n    BOOKMARK_ALL: 'Alle Tabs als Lesezeichen',\n    DOWNLOAD_LIST: 'Übersicht',\n    SHARE_LIST: 'Liste teilen',\n    MORE: 'Mehr',\n    CHANGE: 'Verändern',\n  },\n  HEADER: {\n    FAQ: 'FAQ',\n    BACK_TO_HOME: 'Zurück zur Startseite',\n    HOME: 'Zurück',\n    CATEGORIES: 'Kategorien',\n    HELP_SUPPORT: 'Hilfe & Support',\n    HELP: 'Hilfe',\n    CANCEL_REGISTRATION: 'Registrierung abbrechen',\n    PROFILE: 'Profil',\n    SETTINGS: 'Einstellungen',\n    DOCS: 'Texte',\n    DOCUMENTATIONS: 'Dokumentationen',\n    CART: 'Warenkorb',\n    BOOKMARKS: 'Lesezeichen',\n    PAYMENTS_HISTORY: 'Zahlungsverlauf',\n    LIGHT_MODE: 'Heller Modus',\n    CUSTOM_RPC: 'Eigener RPC',\n    SETUP_REQUIRED: 'Einrichtung erforderlich',\n    MANAGE_DOMAINS: 'Verwaltung von Domains',\n    APPROVE: 'Genehmigen',\n    FEATURE_DISABLED: 'Funktion gesperrt',\n  },\n  IPFS: {\n    INITIALISING: 'Starte p2p',\n    FINDING_PEERS: 'Suche Partner',\n    FAILED: 'Fehler',\n    READY: 'Bereit',\n    PUBLISHING: 'Veröffentlichen',\n  },\n  EVENTS: {\n    TRANSFER: 'Überweisung',\n    REGISTRATION: 'Anmeldung',\n    RENEWAL: 'Erneuern',\n    SALE: 'Verkauf',\n    MINT: 'Minze',\n    BURN: 'Verbrennen',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE:\n      'Netzwerk wird nicht unterstützt. Bitte Netzwerk wechseln.',\n    IPNS_PUBLISHING_COMPLETED: 'Veröffentlichung abgeschlossen!',\n    PENDING_TRANSACTION_CERATED:\n      'Eine neue Transaktion wurde erstellt. Bitte überprüfen Sie Ihre Wallet.',\n  },\n  RENEWAL_DURATIONS: {\n    ONE_WEEK: '1 Woche',\n    ONE_MONTH: '1 Monat',\n    THREE_MONTHS: '3 Monate',\n    SIX_MONTHS: '6 Monate',\n    ONE_YEAR: '1 Jahr',\n    TWO_YEARS: '2 Jahre',\n    THREE_YEARS: '3 Jahre',\n    FOUR_YEARS: '4 Jahre',\n    FIVE_YEARS: '5 Jahre',\n  },\n  LABELS: {\n    TOP_CATEGORIES: 'Top-Kategorien',\n    TOTAL_ASSETS: 'Aktivitäten (Gesamt)',\n    MONTHLY_SALES: 'Monatsumsatz',\n    DAILY_VOLUME: 'Tägliches Volumen',\n    MONTHLY_VOLUME: 'Monatliche Lautstärke',\n    DAILY_SALES: 'Tagesumsatz',\n    TOP_SALE: 'Top Verkauf',\n    TOP_SALES: 'Top Verkäufe',\n    TOP_BUYER: 'Top-Käufer',\n    RECENT_SALES: 'Neueste Verkäufe',\n    SALES_ACTIVITY: 'Verkaufsaktivität',\n    ENTER_NAMES_TO_SEARCH: 'Namen zum Suchen eingeben',\n    NOT_AVAILABLE: 'Nicht verfügbar',\n    VOLUME: 'Lautstärke',\n    FLOOR: 'Boden',\n    FILTER: 'Filter',\n    RENEWAL_DURATION: 'Erneuerungsdauer',\n    TRANSACTION: 'Überweisung',\n    USER_PROFILE: 'Benutzerprofil',\n    FEATURE_DISABLED: 'Diese Funktion ist derzeit deaktiviert.',\n    COMPLETE: 'Complete',\n    ESTIMATED_COST: 'Geschätzte Kosten',\n    ADDRESS: 'Adresse',\n    TRANSFER: 'Überweisung',\n    PLEASE_WAIT: 'Bitte warten',\n    SELECT_A_DOMAIN: 'Domain auswählen',\n    RENEW: 'Renew',\n    MANAGE_DOMAINS: 'Verwaltung von Domains',\n    SEARCH_FOR: 'Suche nach',\n    MANAGE: 'Verwalten',\n    COLLECT: 'Einsammeln',\n    LANDING_TEXT:\n      'Open-Source, dezentralisiert, Web3 Domains Suche, Registrierung & Marktplatz.',\n    PROFILE: 'Profil',\n    GO_TO_PROFILE: 'Gehen Sie zum Profil',\n    SEARCH: 'Suchen',\n    CONTAIN_ALPHABET: 'Enthält Alphabet',\n    CONTAIN_NUMBERS: 'Enthält Zahlen',\n    CONTAIN_EMOJI: 'Enthält Emoji',\n    MIN_LENGTH: 'Min. Länge',\n    MAX_LENGTH: 'Max. Länge',\n    CONTAINING_KEYWORDS: 'Enthält Stichwörter',\n    FILTERS: 'Filtern',\n    DOMAINS: 'Domains',\n    DOMAIN: 'Bedeutungsfeld',\n    DOMAIN_HISTORY: 'Domänengeschichte',\n    EXPIRATION_DATE: 'Verfallsdatum',\n    REGISTRATION_DATE: 'Anmeldung',\n    CREATION_DATE: 'Erstellungsdatum',\n    DETAILS: 'Details',\n    YOUR_DOMAINS: 'Ihre Domains',\n    PROCESSING: 'Verarbeitung',\n    LAYOUT: 'Layout',\n    ENTER_SUFFIX: 'Suffix eingeben',\n    ENTER_PREFIX: 'Präfix eingeben',\n    CLICK: 'Click',\n    CONNECT_TO_START: ' loslegen oder ',\n    TIP: 'Tip',\n    ACTION: 'Aktion',\n    ADVANCED_SEARCH_TIP:\n      'verwenden Sie neue Zeile oder Kommas um Ihre Domain-Einträge zu trennen.',\n    ADVANCED_SEARCH: 'Erweiterte Suche',\n    ADVANCED_MODE: 'Erweiterter Modus',\n    REGISTER_DOMAINS_TO: 'Domains registrieren zu',\n    NO_DOMAINS_SELECTED: 'Keine Domains ausgewählt.',\n    FIND_AND_REGISTER: 'Registrieren Sie Domains z.B. domain1, domain2...',\n    SELECTED_DOMAINS: 'Ausgewählte Domains',\n    REGISTER: 'Registrieren',\n    BOOKMARKS: 'Lesezeichen',\n    SEARCH_RESULTS: 'Suchergebnisse',\n    PROCEED_TO_REGISTRATION: 'Zur Registrierung fortfahren',\n    REGISTER_DOMAINS: 'Domains registrieren zu',\n    REGISTRANT_ADDRESS: 'Adresse des Interessenten',\n    SET_RESOLVER: 'Auflöser setzen',\n    TOTAL_COST: 'Gesamtkosten',\n    GAS_PRICE: 'Gaspreis',\n    NO_ADDRESS_DETECTED: 'Keine Adresse erkannt.',\n    DURATION: 'Dauer',\n    NOTICE_SELECT_AN_RPC:\n      'Hinweis: Wählen Sie einen RPC, der in der Anwendung verwendet wird, um den Standard-RPC-Anbieter zu ersetzen.',\n    ENABLE_LIGHT_MODE: 'Licht-Layout-Stil aktivieren.',\n    CLICK_NEXT_TO_PROCEED: 'Klicke <b>weiter</b> um fortzufahren.',\n  },\n  REGISTRATION: {\n    REGISTRATION_CANCELLED_TITLE: 'Registrierung abgebrochen',\n    REGISTRATION_CANCELLED_DESCRIPTION: 'Ihre Anmeldung wurde abgebrochen.',\n    CANCEL_REGISTRATION_TITLE: 'Registrierung abbrechen',\n    CANCEL_REGISTRATION_DESCRIPTION:\n      'Sind Sie sicher, dass Sie diese Registrierung abbrechen möchten? Diese Aktion kann nicht rückgängig gemacht werden.',\n    BEFORE_COMMIT: 'Schritt 1: Registrierung anfordern.',\n    COMMIT_SENT: 'Anfrage wird verarbeitet...',\n    COMMIT_COMPLETE: 'Schritt 1: Registrierung anfordern...',\n    AWAIT: 'Anfrage wird verarbeitet...',\n    BEFORE_REGISTRATION: 'Vollständige Registrierung.',\n    REGISTRATION_SENT: 'Registrierung wird abgeschlossen...',\n    REGISTRATION_COMPLETE: 'Anmeldung!',\n    REGISTRATION_COMPLETE_TITLE: 'Anmeldung',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED:\n      'Ihre Domains wurden jetzt registriert.',\n    BASKET_EMPTY: 'Ihr Warenkorb ist leer',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER:\n      'Bitte wählen Sie neue Domains zum Registrieren aus.',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED:\n      'Transaktion abgebrochen. Bitte versuchen Sie es erneut.',\n  },\n  SPINNER: {\n    LEDGER_NO_DEVICE_SELECTED:\n      'Beim Verbinden mit Ihrer Wallet ist ein Fehler aufgetreten. Bitte versuchen Sie es erneut.',\n    NO_DATA_TO_DISPLAY: 'Keine Elemente zum Anzeigen.',\n    PERFORMING_SEARCH: 'Suche wird durchgeführt...',\n    LOADING_DATA: 'Lade Daten...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET:\n      'Bitte folgen Sie den Anweisungen in Ihrer Brieftasche um fortzufahren.',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: 'Dauer eingeben',\n    ENTER_QR_LINK: 'Eigene QR-Code URL eingeben',\n    ENTER_PRICE: 'Preis eingeben',\n    ENTER_CUSTOM_ADDRESS: 'Eigene Adresse eingeben',\n    ENTER_RECEIVER_ADDRESS: 'Empfängeradresse eingeben',\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: 'Ungültige Dauer',\n    INVALID_QR_LINK: 'Ungültige URL, bitte versuchen Sie es erneut.',\n    INVALID_PRICE: 'Ungültiger Preis, bitte versuchen Sie es erneut.',\n    NO_ADDRESS_DETECTED:\n      'Keine Adresse erkannt, bitte versuchen Sie es erneut.',\n    INVALID_ADDRESS: 'Ungültige Adresse, bitte versuchen Sie es erneut.',\n  },\n  STEP: {\n    STEP_1: 'Schritt 1',\n    STEP_2: 'Schritt 2',\n    STEP_3: 'Schritt 3',\n    STEP_4: 'Schritt 4',\n    STEP_5: 'Schritt 5',\n  },\n  RENEW: {\n    RENEWAL_COST: 'Erneuerungskosten',\n    ESTIMATED_RENEWAL_COST:\n      'Unten sind die geschätzten Erneuerungskosten für diese Transaktion.',\n    RENEWAL_COMPLETE: 'Erneuerung abgeschlossen',\n    DOMAINS_READY_FOR_RENEWAL:\n      ' Ihre Domains sind nun fertig Erneuerung. Um Ihre Erneuerung abzuschließen, fahren Sie fort.',\n  },\n  TRANSFER: {\n    TRANSFER_TO: 'Weiter in',\n    TRANSFER_COMPLETE: 'Übertragung abgeschlossen!',\n    SETUP_INSTRUCTION:\n      'Um die ENS-Domains-Verwaltung zu aktivieren, muss Ihr Konto so konfiguriert sein, dass es die Übertragung von Domains genehmigt.',\n    CONTRACT_APPROVAL_NOTE:\n      'Die Vertragsgenehmigung ermöglicht es dem Vertrag, die Übertragung von Domains in Ihrem Namen durchzuführen.',\n    DOMAINS_READY_FOR_TRANSFER:\n      'Deine Domains sind jetzt zur Übertragung bereit. Gib die Empfängeradresse ein und drücke auf Fortfahren.',\n  },\n};\n","export default {\n  BUTTON: {\n    SAVE_CHANGES: '保存更改',\n    PROCEED: '继续',\n    DISMISS: '关闭',\n    CONNECT: '连接',\n    CONNECT_WALLET: '连接钱包',\n    DISCONNECT: '断开连接',\n    LOGOUT: '注销',\n    CLOSE: '关闭',\n    SETTINGS: '设置',\n    LAUNCH_APP: '启动应用程序',\n    CONNECT_TO_PROCEED: '连接钱包',\n    VIEW_DETAILS: '查看详情',\n    REFRESH: '刷新',\n    START_REGISTRATION: '开始注册',\n    CANCEL: '取消',\n    PRESS_ENTER: '按回车键',\n    LEARN_MORE: '了解更多',\n    CLOSE_WINDOW: '关闭窗口',\n    SHOW_AVAILABLE_ONLY: '仅显示可用的',\n    SHOW_AVAILABLE: '仅显示可用的',\n    PROCEED_SEARCH: '正在搜索',\n    DOWNLOAD: '下载',\n    SHOW_ALL: '显示全部',\n    DESELECT_ALL: '取消全选',\n    SHOW_SELCTED: '显示选中的',\n    LINK: '链接',\n    CUSTOM_LINK: '自定义链接',\n    SET_QR_LINK_ALL: '设置所有 QR 链接',\n    SET_QR_LINK: 'Set QR Link',\n    DISABLE_ALL: '禁用所有',\n    DISABLE_QR_CODE: '禁用二维码',\n    ENABLE_QR_CODE: '启用二维码',\n    SET_QR_COLOR: '设置 QR 颜色',\n    SET_COLOR: '设置颜色',\n    SET_ALL_COLORS: '设置 QR 颜色',\n    SET_PRICE: '设置价格',\n    SET_PRICE_ALL: '设置价格所有',\n    RESET: 'Reset',\n    CHECK_PROFILE: '检查个人资料',\n    GO_TO_DASHBOARD: '转到仪表板',\n    GO_TO_HOME: '返回首页',\n    VIEW_PROFILE: '查看个人资料',\n    CHECK_DOMAINS: '检查域',\n    TRANSACTION_DETAILS: '交易详情',\n    BUY_NOW: '立即购买',\n    CLEAR_HISTORY: '清除历史记录',\n    DEFAULT: '默认',\n    CUSTOM: '自定',\n    FRACTIONALISE: '分解',\n    MORE_INFO: '更多信息',\n    LESS_INFO: '较少资讯',\n    APPROVE: '批准',\n    NEXT: '下一页',\n    PENDING: '待付款',\n    REMOVE_ALL_ITEMS: '移除所有项目',\n    ADD_ALL_TO_CART: '将全部添加到购物车',\n    BOOKMARK_ALL: '全部书签',\n    DOWNLOAD_LIST: '下载列表',\n    SHARE_LIST: '分享列表',\n    MORE: '更多',\n    CHANGE: '找零',\n  },\n  HEADER: {\n    FAQ: '常见问题',\n    BACK_TO_HOME: '返回首页',\n    HOME: '主页',\n    CATEGORIES: '物品类别',\n    HELP_SUPPORT: '帮助与支持',\n    HELP: '求助',\n    CANCEL_REGISTRATION: '取消注册',\n    PROFILE: '个人信息',\n    SETTINGS: '设置',\n    DOCS: '文档',\n    DOCUMENTATIONS: '文件',\n    CART: '购物车',\n    BOOKMARKS: '书签',\n    PAYMENTS_HISTORY: '付款历史',\n    LIGHT_MODE: '日间模式',\n    CUSTOM_RPC: '自定义 RPC',\n    SETUP_REQUIRED: '需要设置',\n    MANAGE_DOMAINS: '管理域',\n    APPROVE: '批准',\n    FEATURE_DISABLED: '禁用功能',\n  },\n  IPFS: {\n    INITIALISING: '正在启动 p2p',\n    FINDING_PEERS: '查找节点',\n    FAILED: '失败',\n    READY: '准备好',\n    PUBLISHING: '发布',\n  },\n  EVENTS: {\n    TRANSFER: '转移',\n    REGISTRATION: '登记',\n    RENEWAL: '续费',\n    SALE: '销售',\n    MINT: '分钟数',\n    BURN: '刻录',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE: '不支持网络。请更改您的网络。',\n    IPNS_PUBLISHING_COMPLETED: '发布已完成！',\n    PENDING_TRANSACTION_CERATED: '新交易已创建。请检查您的钱包。',\n  },\n  RENEWAL_DURATIONS: {\n    ONE_WEEK: '1 周',\n    ONE_MONTH: '1个月',\n    THREE_MONTHS: '3个月',\n    SIX_MONTHS: '6个月',\n    ONE_YEAR: '1 年',\n    TWO_YEARS: '2 年',\n    THREE_YEARS: '3 年',\n    FOUR_YEARS: '4 年',\n    FIVE_YEARS: '5 年',\n  },\n  LABELS: {\n    TOP_CATEGORIES: '顶级交易类别',\n    TOTAL_ASSETS: '总资产：',\n    MONTHLY_SALES: '每月销售',\n    DAILY_VOLUME: '每日音量',\n    MONTHLY_VOLUME: '每月音量',\n    DAILY_SALES: '每日特惠',\n    TOP_SALE: '最高销售',\n    TOP_SALES: '最高销售',\n    TOP_BUYER: '顶级买家',\n    RECENT_SALES: '最近销售',\n    SALES_ACTIVITY: '销售活动',\n    ENTER_NAMES_TO_SEARCH: '输入要搜索的名称',\n    NOT_AVAILABLE: '不可用',\n    VOLUME: '音量',\n    FLOOR: '地板',\n    FILTER: '筛选',\n    RENEWAL_DURATION: '更新持续时间',\n    TRANSACTION: '交易',\n    USER_PROFILE: '用户基本资料',\n    FEATURE_DISABLED: '此功能在当前版本中已被禁用。',\n    COMPLETE: '完成',\n    ESTIMATED_COST: '成本预估',\n    ADDRESS: '地址',\n    TRANSFER: '转移',\n    PLEASE_WAIT: '请稍等',\n    SELECT_A_DOMAIN: '选择域',\n    RENEW: '续费',\n    MANAGE_DOMAINS: '管理域',\n    SEARCH_FOR: '搜索文件',\n    MANAGE: '展开',\n    COLLECT: '收集',\n    LANDING_TEXT: '开放源码，分散，Web3域名搜索，注册和市场。',\n    PROFILE: '个人信息',\n    GO_TO_PROFILE: '转到文件',\n    SEARCH: '搜索',\n    CONTAIN_ALPHABET: '包含字母表',\n    CONTAIN_NUMBERS: '包含数字',\n    CONTAIN_EMOJI: '包含表情',\n    MIN_LENGTH: '最小长度',\n    MAX_LENGTH: '最大长度',\n    CONTAINING_KEYWORDS: '包含关键字',\n    FILTERS: '筛选器',\n    DOMAINS: '域',\n    DOMAIN: '语义域',\n    DOMAIN_HISTORY: '域名历史',\n    EXPIRATION_DATE: '过期日期',\n    REGISTRATION_DATE: '登记',\n    CREATION_DATE: '创建日期',\n    DETAILS: '详细信息',\n    YOUR_DOMAINS: '您的域',\n    PROCESSING: '处理中',\n    LAYOUT: '布局',\n    ENTER_SUFFIX: '输入后缀',\n    ENTER_PREFIX: '输入前缀',\n    CLICK: 'Click',\n    CONNECT_TO_START: ' 开始或 ',\n    TIP: 'Tip',\n    ACTION: '运动',\n    ADVANCED_SEARCH_TIP: '使用新行或逗号分隔你的域名。',\n    ADVANCED_SEARCH: '高级搜索',\n    ADVANCED_MODE: '高级模式',\n    REGISTER_DOMAINS_TO: '注册域名到',\n    NO_DOMAINS_SELECTED: '未选择域名。',\n    FIND_AND_REGISTER: '注册域，例如 domain1, domain2...',\n    SELECTED_DOMAINS: '选定域',\n    REGISTER: '注册',\n    BOOKMARKS: '书签',\n    SEARCH_RESULTS: '搜索结果',\n    PROCEED_TO_REGISTRATION: '继续注册',\n    REGISTER_DOMAINS: '注册域名到',\n    REGISTRANT_ADDRESS: '注册地址',\n    SET_RESOLVER: '设置解析器',\n    TOTAL_COST: '总成本',\n    GAS_PRICE: '煤气价格',\n    NO_ADDRESS_DETECTED: '未检测到地址。',\n    DURATION: '期限',\n    NOTICE_SELECT_AN_RPC:\n      '注意：选择一个将在应用程序中使用的RPC来替换默认的 RPC 提供商。',\n    ENABLE_LIGHT_MODE: '启用光布局风格。',\n    CLICK_NEXT_TO_PROCEED: '点击 <b>下一个</b> 继续。',\n  },\n  REGISTRATION: {\n    REGISTRATION_CANCELLED_TITLE: '注册已取消',\n    REGISTRATION_CANCELLED_DESCRIPTION: '您的注册已被取消。',\n    CANCEL_REGISTRATION_TITLE: '取消注册',\n    CANCEL_REGISTRATION_DESCRIPTION: '您确定要取消此注册吗？此操作不能撤消。',\n    BEFORE_COMMIT: '第 1 步：请求注册。',\n    COMMIT_SENT: '正在处理请求...',\n    COMMIT_COMPLETE: '第 1 步：请求注册。',\n    AWAIT: '正在处理请求...',\n    BEFORE_REGISTRATION: '完成注册。',\n    REGISTRATION_SENT: '正在完成注册...',\n    REGISTRATION_COMPLETE: '登记!',\n    REGISTRATION_COMPLETE_TITLE: '登记',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: '您的域名已被注册。',\n    BASKET_EMPTY: '您的篮子是空的',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER: '请选择要注册的新域名。',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: '交易已取消。请重试。',\n  },\n  SPINNER: {\n    LEDGER_NO_DEVICE_SELECTED: '连接到您的钱包时发生错误。请再试一次。',\n    NO_DATA_TO_DISPLAY: '没有要显示的项目。',\n    PERFORMING_SEARCH: '正在执行搜索...',\n    LOADING_DATA: '正在加载数据...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET: '请按照你钱包中的说明继续操作。',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: '输入持续时间',\n    ENTER_QR_LINK: '输入自定义 QR 代码 URL',\n    ENTER_PRICE: '输入价格',\n    ENTER_CUSTOM_ADDRESS: '输入自定义地址',\n    ENTER_RECEIVER_ADDRESS: '输入收件人地址',\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: '无效时长',\n    INVALID_QR_LINK: '无效的 URL，请重试。',\n    INVALID_PRICE: '价格无效，请重试。',\n    NO_ADDRESS_DETECTED: '未检测到地址，请重试。',\n    INVALID_ADDRESS: '无效的地址，请重试。',\n  },\n  STEP: {\n    STEP_1: '第一步',\n    STEP_2: '第 2 步',\n    STEP_3: '第 3 步',\n    STEP_4: '第 4 步',\n    STEP_5: '第 5 步',\n  },\n  RENEW: {\n    RENEWAL_COST: '更新成本',\n    ESTIMATED_RENEWAL_COST: '下面是这笔交易的估计更新费用。',\n    RENEWAL_COMPLETE: '更新完成',\n    DOMAINS_READY_FOR_RENEWAL: ' 您的域名已准备就绪。要完成更新，请按下继续。',\n  },\n  TRANSFER: {\n    TRANSFER_TO: '转账到',\n    TRANSFER_COMPLETE: '传输完成！',\n    SETUP_INSTRUCTION: '要启用ENS域管理，您的帐户必须配置为批准域转让。',\n    CONTRACT_APPROVAL_NOTE: '合同批准允许合同代表您进行域转让。',\n    DOMAINS_READY_FOR_TRANSFER:\n      '您的域名已准备好传输。请输入接收者的地址并按下继续。',\n  },\n};\n","export default {\n  BUTTON: {\n    SAVE_CHANGES: '変更を保存',\n    PROCEED: '続行する',\n    DISMISS: '却下する',\n    CONNECT: '接続する',\n    CONNECT_WALLET: 'ウォレットに接続',\n    DISCONNECT: '接続を解除',\n    LOGOUT: 'ログアウト',\n    CLOSE: '閉じる',\n    SETTINGS: '設定',\n    LAUNCH_APP: 'アプリを起動',\n    CONNECT_TO_PROCEED: 'ウォレットに接続',\n    VIEW_DETAILS: '詳細を表示',\n    REFRESH: '更新',\n    START_REGISTRATION: '登録を開始',\n    CANCEL: 'キャンセル',\n    PRESS_ENTER: 'Enter キーを押します',\n    LEARN_MORE: 'もっと詳しく',\n    CLOSE_WINDOW: 'ウィンドウを閉じる',\n    SHOW_AVAILABLE_ONLY: '利用可能なもののみ表示',\n    SHOW_AVAILABLE: '利用可能なもののみ表示',\n    PROCEED_SEARCH: '検索を続行する',\n    DOWNLOAD: 'ダウンロード',\n    SHOW_ALL: 'すべて表示',\n    DESELECT_ALL: 'すべての選択を解除',\n    SHOW_SELCTED: '選択したものを表示',\n    LINK: 'リンク',\n    CUSTOM_LINK: 'カスタムリンク',\n    SET_QR_LINK_ALL: 'QRリンクをすべて設定',\n    SET_QR_LINK: 'QRリンクをすべて設定',\n    DISABLE_ALL: 'すべて無効',\n    DISABLE_QR_CODE: 'QRコードを無効にする',\n    ENABLE_QR_CODE: 'QRコードを有効にする',\n    SET_QR_COLOR: 'QRコードの色を設定',\n    SET_COLOR: 'QRコードの色を設定',\n    SET_ALL_COLORS: 'QRコードの色を設定',\n    SET_PRICE: '価格の設定',\n    SET_PRICE_ALL: '価格を全て設定',\n    RESET: 'Reset',\n    CHECK_PROFILE: 'プロファイルを確認',\n    GO_TO_DASHBOARD: 'ダッシュボードに移動',\n    GO_TO_HOME: 'ホームへ移動',\n    VIEW_PROFILE: 'プロフィールを表示',\n    CHECK_DOMAINS: 'ドメインを確認',\n    TRANSACTION_DETAILS: 'トランザクションの詳細',\n    BUY_NOW: '今すぐ購入',\n    CLEAR_HISTORY: '履歴をクリア',\n    DEFAULT: 'Default',\n    CUSTOM: 'カスタム',\n    FRACTIONALISE: '分数化',\n    MORE_INFO: '詳細',\n    LESS_INFO: '簡易情報',\n    APPROVE: '承認',\n    NEXT: '次へ',\n    PENDING: '保留中',\n    REMOVE_ALL_ITEMS: 'すべてのアイテムを削除',\n    ADD_ALL_TO_CART: 'すべてをカートに入れる',\n    BOOKMARK_ALL: 'すべてをブックマーク',\n    DOWNLOAD_LIST: 'ダウンロードリスト',\n    SHARE_LIST: 'リストを共有',\n    MORE: 'その他',\n    CHANGE: '変更',\n  },\n  HEADER: {\n    FAQ: 'よくある質問',\n    BACK_TO_HOME: 'ホームに戻る',\n    HOME: '家',\n    CATEGORIES: 'カテゴリ',\n    HELP_SUPPORT: 'ヘルプ & サポート',\n    HELP: 'ヘルプ',\n    CANCEL_REGISTRATION: '登録をキャンセル',\n    PROFILE: 'プロフィール',\n    SETTINGS: '設定',\n    DOCS: 'ドキュメント',\n    DOCUMENTATIONS: '文書',\n    CART: 'カート',\n    BOOKMARKS: 'ブックマーク',\n    PAYMENTS_HISTORY: '支払履歴',\n    LIGHT_MODE: 'ライトモード',\n    CUSTOM_RPC: 'カスタム RPC',\n    SETUP_REQUIRED: 'セットアップが必要です',\n    MANAGE_DOMAINS: 'ページドメイン',\n    APPROVE: '承認',\n    FEATURE_DISABLED: '機能の無効化',\n  },\n  IPFS: {\n    INITIALISING: 'p2pを開始',\n    FINDING_PEERS: 'ピアを検索中',\n    FAILED: '失敗しました',\n    READY: '準備完了',\n    PUBLISHING: '公開',\n  },\n  EVENTS: {\n    TRANSFER: '送金',\n    REGISTRATION: '登録',\n    RENEWAL: '更新',\n    SALE: '販売',\n    MINT: '造幣局',\n    BURN: '書き込み中',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE:\n      'ネットワークはサポートされていません。ネットワークを変更してください。',\n    IPNS_PUBLISHING_COMPLETED: '公開完了！',\n    PENDING_TRANSACTION_CERATED:\n      '新しい取引が作成されました。ウォレットを確認してください。',\n  },\n  RENEWAL_DURATIONS: {\n    ONE_WEEK: '1 週',\n    ONE_MONTH: '1ヶ月',\n    THREE_MONTHS: '3カ月',\n    SIX_MONTHS: '6カ月',\n    ONE_YEAR: '1年',\n    TWO_YEARS: '2 年',\n    THREE_YEARS: '3 年',\n    FOUR_YEARS: '4 年',\n    FIVE_YEARS: '5 年',\n  },\n  LABELS: {\n    TOP_CATEGORIES: 'トップカテゴリ',\n    TOTAL_ASSETS: '資産の合計',\n    MONTHLY_SALES: '月商',\n    DAILY_VOLUME: '毎日の音量',\n    MONTHLY_VOLUME: '月刊ボリューム',\n    DAILY_SALES: '毎日の販売',\n    TOP_SALE: '人気セール',\n    TOP_SALES: '人気セール',\n    TOP_BUYER: 'トップバイヤー：',\n    RECENT_SALES: 'アプリ履歴のスタイル',\n    SALES_ACTIVITY: '販売活動',\n    ENTER_NAMES_TO_SEARCH: '名前を入力して検索',\n    NOT_AVAILABLE: '利用できません（見つかりません、利用不可）',\n    VOLUME: '音量',\n    FLOOR: '床',\n    FILTER: 'フィルター',\n    RENEWAL_DURATION: '更新期間',\n    TRANSACTION: 'トランザクション',\n    USER_PROFILE: 'ユーザープロフィール',\n    FEATURE_DISABLED: 'この機能は現在無効化されています',\n    COMPLETE: '完了',\n    ESTIMATED_COST: '料金の目安：',\n    ADDRESS: '会社アクセス',\n    TRANSFER: '送金',\n    PLEASE_WAIT: 'お待ちください',\n    SELECT_A_DOMAIN: 'ドメインの選択',\n    RENEW: '更新',\n    MANAGE_DOMAINS: 'ページドメイン',\n    SEARCH_FOR: '検索文字',\n    MANAGE: '管理',\n    COLLECT: 'これを全部集めて ',\n    LANDING_TEXT:\n      'オープンソース、分散化、Web3ドメイン検索、登録、マーケットプレイス。',\n    PROFILE: 'プロフィール',\n    GO_TO_PROFILE: 'プロファイルに行く',\n    SEARCH: '検索',\n    CONTAIN_ALPHABET: 'アルファベットが含まれています',\n    CONTAIN_NUMBERS: '数字が含まれています',\n    CONTAIN_EMOJI: '絵文字を含む',\n    MIN_LENGTH: '最小長さ',\n    MAX_LENGTH: '最大の長さ',\n    CONTAINING_KEYWORDS: 'キーワードを含む',\n    FILTERS: 'フィルタ',\n    DOMAINS: 'ドメイン',\n    DOMAIN: 'ドメイン',\n    DOMAIN_HISTORY: 'ドメイン履歴',\n    EXPIRATION_DATE: '有効期限日',\n    REGISTRATION_DATE: '登録',\n    CREATION_DATE: '作成日',\n    DETAILS: '詳細',\n    YOUR_DOMAINS: 'あなたのドメイン',\n    PROCESSING: '処理中',\n    LAYOUT: 'レイアウト',\n    ENTER_SUFFIX: 'サフィックスを入力',\n    ENTER_PREFIX: 'サフィックスを入力',\n    CLICK: 'Click',\n    CONNECT_TO_START: ' 始めるには ',\n    TIP: 'Tip',\n    ACTION: 'Action',\n    ADVANCED_SEARCH_TIP:\n      '新しい行またはカンマを使用して、ドメインエントリを分離します。',\n    ADVANCED_SEARCH: '詳細検索',\n    ADVANCED_MODE: '詳細モード',\n    REGISTER_DOMAINS_TO: 'ドメインを登録先',\n    NO_DOMAINS_SELECTED: 'ドメインが選択されていません。',\n    FIND_AND_REGISTER: 'ドメインを検索します。例：domain1, domain2...',\n    SELECTED_DOMAINS: '選択したドメイン',\n    REGISTER: '登録',\n    BOOKMARKS: 'ブックマーク',\n    SEARCH_RESULTS: '検索結果',\n    PROCEED_TO_REGISTRATION: '登録に進む',\n    REGISTER_DOMAINS: 'ドメインを登録先',\n    REGISTRANT_ADDRESS: '登録者アドレス',\n    SET_RESOLVER: 'リゾルバーを設定',\n    TOTAL_COST: '合計コスト',\n    GAS_PRICE: 'ガス価格',\n    NO_ADDRESS_DETECTED: 'アドレスが見つかりません。',\n    DURATION: '期間',\n    NOTICE_SELECT_AN_RPC:\n      '注意: デフォルトのRPCプロバイダを置き換えるためにアプリケーションで使用されるRPCを選択します。',\n    ENABLE_LIGHT_MODE: 'ライトのレイアウトスタイルを有効にする',\n    CLICK_NEXT_TO_PROCEED: '<b>次へ</b> をクリックして進みます。',\n  },\n  REGISTRATION: {\n    REGISTRATION_CANCELLED_TITLE: '登録をキャンセルしました',\n    REGISTRATION_CANCELLED_DESCRIPTION: 'あなたの登録がキャンセルされました。',\n    CANCEL_REGISTRATION_TITLE: '登録をキャンセル',\n    CANCEL_REGISTRATION_DESCRIPTION:\n      'この認証を削除しても宜しいですか？ この操作を元に戻すことはできません。',\n    BEFORE_COMMIT: 'ステップ 1: リクエスト登録',\n    COMMIT_SENT: 'リクエストを処理しています...',\n    COMMIT_COMPLETE: 'ステップ 1: リクエスト登録',\n    AWAIT: 'リクエストを処理しています...',\n    BEFORE_REGISTRATION: '登録の完了',\n    REGISTRATION_SENT: '登録を完了中...',\n    REGISTRATION_COMPLETE: '登録!',\n    REGISTRATION_COMPLETE_TITLE: '登録',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: 'ドメインが登録されました。',\n    BASKET_EMPTY: 'カートが空です',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER:\n      '登録する新しいドメインを選択してください。',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED:\n      '取引がキャンセルされました。もう一度やり直してください。',\n  },\n  SPINNER: {\n    LEDGER_NO_DEVICE_SELECTED:\n      'クーポンを作成する時にエラーが発生しました。もう一度やり直してください。',\n    NO_DATA_TO_DISPLAY: '表示する項目がありません。',\n    PERFORMING_SEARCH: '検索を実行中...',\n    LOADING_DATA: 'データを読み込み中...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET:\n      '続行するにはウォレットの指示に従ってください。',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: '期間を入力',\n    ENTER_QR_LINK: 'カスタム QR コードのURLを入力してください',\n    ENTER_PRICE: '価格を入力',\n    ENTER_CUSTOM_ADDRESS: 'カスタムアドレスを入力してください',\n    ENTER_RECEIVER_ADDRESS: '受信者アドレスを入力してください',\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: '無効な期間',\n    INVALID_QR_LINK: '無効な URL です。もう一度やり直してください。',\n    INVALID_PRICE: '無効な価格です。もう一度やり直してください。',\n    NO_ADDRESS_DETECTED:\n      'アドレスが見つかりませんでした。もう一度やり直してください。',\n    INVALID_ADDRESS: '僅用於中文',\n  },\n  STEP: {\n    STEP_1: 'ステップ 1',\n    STEP_2: 'ステップ 2',\n    STEP_3: 'ステップ 3',\n    STEP_4: 'ステップ 4',\n    STEP_5: 'ステップ 5',\n  },\n  RENEW: {\n    RENEWAL_COST: '更新コスト',\n    ESTIMATED_RENEWAL_COST:\n      '以下は、このトランザクションの推定更新コストです。',\n    RENEWAL_COMPLETE: '更新完了',\n    DOMAINS_READY_FOR_RENEWAL:\n      ' ドメインの更新が完了しました。更新を完了するには、format@@0を押します。',\n  },\n  TRANSFER: {\n    TRANSFER_TO: '送金',\n    TRANSFER_COMPLETE: '転送完了！',\n    SETUP_INSTRUCTION:\n      'ENSドメイン管理を有効にするには、ドメイン転送を承認するためにアカウントを設定する必要があります。',\n    CONTRACT_APPROVAL_NOTE:\n      '契約承認により、契約はお客様に代わってドメインの譲渡を行うことができます。',\n    DOMAINS_READY_FOR_TRANSFER:\n      'ドメインを転送する準備ができました。レシピのアドレスを入力し、続行を押してください。',\n  },\n};\n","export default {\n  BUTTON: {\n    SAVE_CHANGES: 'Guardar Cambios',\n    PROCEED: 'Continuar',\n    DISMISS: 'Descartar',\n    CONNECT: 'Conectar',\n    CONNECT_WALLET: 'Conectar cartera',\n    DISCONNECT: 'Desconectar',\n    LOGOUT: 'Cerrar sesión',\n    CLOSE: 'Cerrar',\n    SETTINGS: 'Ajustes',\n    LAUNCH_APP: 'Iniciar App',\n    CONNECT_TO_PROCEED: 'Conectar cartera',\n    VIEW_DETAILS: 'Ver detalles',\n    REFRESH: 'Refrescar',\n    START_REGISTRATION: 'Iniciar registro',\n    CANCEL: 'Cancelar',\n    PRESS_ENTER: 'Presione Entrar',\n    LEARN_MORE: 'Más información',\n    CLOSE_WINDOW: 'Cerrar ventana',\n    SHOW_AVAILABLE_ONLY: 'Mostrar sólo disponible',\n    SHOW_AVAILABLE: 'Mostrar sólo disponible',\n    PROCEED_SEARCH: 'Proceder búsqueda',\n    DOWNLOAD: 'Descargar',\n    SHOW_ALL: 'Mostrar todo',\n    DESELECT_ALL: 'Deseleccionar todo',\n    SHOW_SELCTED: 'Mostrar seleccionados',\n    LINK: 'Enlace',\n    CUSTOM_LINK: 'Enlace personalizado',\n    SET_QR_LINK_ALL: 'Establecer todos los enlaces QR',\n    SET_QR_LINK: 'Establecer todos los enlaces QR',\n    DISABLE_ALL: 'Desactivar todo',\n    DISABLE_QR_CODE: 'Desactivar código QR',\n    ENABLE_QR_CODE: 'Habilitar código QR',\n    SET_QR_COLOR: 'Establecer color QR',\n    SET_COLOR: 'Definir color',\n    SET_ALL_COLORS: 'Establecer todos los colores',\n    SET_PRICE: 'Fijar Precio',\n    SET_PRICE_ALL: 'Fijar precio todo',\n    RESET: 'Reset',\n    CHECK_PROFILE: 'Comprobar perfil',\n    GO_TO_DASHBOARD: 'Ir al Tablero',\n    GO_TO_HOME: 'Ir a Inicio',\n    VIEW_PROFILE: 'Ver perfil',\n    CHECK_DOMAINS: 'Comprobar dominios',\n    TRANSACTION_DETAILS: 'Detalles de la transacción',\n    BUY_NOW: 'Comprar ahora',\n    CLEAR_HISTORY: 'Borrar el Historial',\n    DEFAULT: 'Predeterminado',\n    CUSTOM: 'Personal',\n    FRACTIONALISE: 'Fraccionalizar',\n    MORE_INFO: 'Más información',\n    LESS_INFO: 'Menos Info',\n    APPROVE: 'Aprobar',\n    NEXT: 'Próximo',\n    PENDING: 'Pendiente',\n    REMOVE_ALL_ITEMS: 'Eliminar todos los artículos',\n    ADD_ALL_TO_CART: 'Añadir Todo al Carrito',\n    BOOKMARK_ALL: 'Marcar todas las pestañas',\n    DOWNLOAD_LIST: 'Lista de descargas',\n    SHARE_LIST: 'Compartir lista',\n    MORE: 'Más',\n    CHANGE: 'Cambiar',\n  },\n  HEADER: {\n    FAQ: 'FAQs',\n    BACK_TO_HOME: 'Volver a Inicio',\n    HOME: 'Casa',\n    CATEGORIES: 'Categorías',\n    HELP_SUPPORT: 'Ayuda y soporte',\n    HELP: 'Ayuda',\n    CANCEL_REGISTRATION: 'Cancelar Registro',\n    PROFILE: 'Perfil',\n    SETTINGS: 'Ajustes',\n    DOCS: 'Documentos',\n    DOCUMENTATIONS: 'Documentaciones',\n    CART: 'Carrito',\n    BOOKMARKS: 'Marcadores',\n    PAYMENTS_HISTORY: 'Historial de pago',\n    LIGHT_MODE: 'Modo Claro',\n    CUSTOM_RPC: 'RPC Personalizado',\n    SETUP_REQUIRED: 'Se requiere configuración',\n    MANAGE_DOMAINS: 'Administrar dominios',\n    APPROVE: 'Aprobar',\n    FEATURE_DISABLED: 'Función deshabilitada',\n  },\n  IPFS: {\n    INITIALISING: 'Iniciando p2p',\n    FINDING_PEERS: 'Encontrando pares',\n    FAILED: 'Fallo',\n    READY: 'Listo',\n    PUBLISHING: 'Publicación',\n  },\n  EVENTS: {\n    TRANSFER: 'Transferir',\n    REGISTRATION: 'Registro',\n    RENEWAL: 'Renovación',\n    SALE: 'Venta',\n    MINT: 'Moneda',\n    BURN: 'Quemar',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE:\n      'La red no es compatible. Por favor, cambie su red.',\n    IPNS_PUBLISHING_COMPLETED: '¡Publicación completada!',\n    PENDING_TRANSACTION_CERATED:\n      'Se ha creado una nueva transacción. Por favor, comprueba tu cartera.',\n  },\n  RENEWAL_DURATIONS: {\n    ONE_WEEK: '1 Semana',\n    ONE_MONTH: '1 mes',\n    THREE_MONTHS: '3 meses',\n    SIX_MONTHS: '6 meses',\n    ONE_YEAR: '1 año',\n    TWO_YEARS: '2 años',\n    THREE_YEARS: '3 años',\n    FOUR_YEARS: '4 años',\n    FIVE_YEARS: '5 años',\n  },\n  LABELS: {\n    TOP_CATEGORIES: 'Categorías principales',\n    TOTAL_ASSETS: 'Total de activos',\n    MONTHLY_SALES: 'Ventas mensuales',\n    DAILY_VOLUME: 'Volumen gas diario',\n    MONTHLY_VOLUME: 'Volumen gas mensual',\n    DAILY_SALES: 'Ventas diarias',\n    TOP_SALE: 'Mejores ventas',\n    TOP_SALES: 'Mejores ventas',\n    TOP_BUYER: 'Comprador Top',\n    RECENT_SALES: 'Ventas recientes',\n    SALES_ACTIVITY: 'Actividad de ventas',\n    ENTER_NAMES_TO_SEARCH: 'Introducir nombres para buscar',\n    NOT_AVAILABLE: 'No Disponible',\n    VOLUME: 'Volumen',\n    FLOOR: 'Piso',\n    FILTER: 'Filtro',\n    RENEWAL_DURATION: 'Duración de la renovación',\n    TRANSACTION: 'Transacción',\n    USER_PROFILE: 'Perfil de usuario',\n    FEATURE_DISABLED: 'Esta opción está actualmente deshabilitada',\n    COMPLETE: 'Completada',\n    ESTIMATED_COST: 'Costo Estimado',\n    ADDRESS: 'Dirección',\n    TRANSFER: 'Transferir',\n    PLEASE_WAIT: 'Por favor espera',\n    SELECT_A_DOMAIN: 'Seleccione un dominio',\n    RENEW: 'Renovar',\n    MANAGE_DOMAINS: 'Administrar dominios',\n    SEARCH_FOR: 'Buscar por',\n    MANAGE: 'Gestionar',\n    COLLECT: 'Coleccionar',\n    LANDING_TEXT:\n      'Fuente abierta, descentralizada, Web3 dominios de búsqueda, registro y mercado.',\n    PROFILE: 'Perfil',\n    GO_TO_PROFILE: 'Ir al perfil',\n    SEARCH: 'Buscar',\n    CONTAIN_ALPHABET: 'Contiene el alfabeto',\n    CONTAIN_NUMBERS: 'Contiene números',\n    CONTAIN_EMOJI: 'Contiene Emoji',\n    MIN_LENGTH: 'Longitud Mínima',\n    MAX_LENGTH: 'Longitud Máxima',\n    CONTAINING_KEYWORDS: 'Conteniendo palabras clave',\n    FILTERS: 'Filtros',\n    DOMAINS: 'Dominios',\n    DOMAIN: 'Dominio',\n    DOMAIN_HISTORY: 'Historial de dominios',\n    EXPIRATION_DATE: 'Fecha de caducidad',\n    REGISTRATION_DATE: 'Fecha de registro',\n    CREATION_DATE: 'Fecha de creación',\n    DETAILS: 'Detalles',\n    YOUR_DOMAINS: 'Tus dominios',\n    PROCESSING: 'Procesando',\n    LAYOUT: 'Diseño',\n    ENTER_SUFFIX: 'Introducir sufijo',\n    ENTER_PREFIX: 'Introduzca prefijo',\n    CLICK: 'Click',\n    CONNECT_TO_START: ' para empezar o ',\n    TIP: 'Tip',\n    ACTION: 'Acción',\n    ADVANCED_SEARCH_TIP:\n      'utilice una nueva línea o comas para separar sus entradas de dominio.',\n    ADVANCED_SEARCH: 'Bsqueda avanzada.',\n    ADVANCED_MODE: 'Modo avanzado',\n    REGISTER_DOMAINS_TO: 'Registrar Dominios a',\n    NO_DOMAINS_SELECTED: 'No hay dominios seleccionados.',\n    FIND_AND_REGISTER: 'Buscar dominios por ejemplo dominio1, dominio2...',\n    SELECTED_DOMAINS: 'Dominios seleccionados',\n    REGISTER: 'Registrarse',\n    BOOKMARKS: 'Marcadores',\n    SEARCH_RESULTS: 'Resultados de búsqueda',\n    PROCEED_TO_REGISTRATION: 'Continuar con el registro',\n    REGISTER_DOMAINS: 'Registrar Dominios a',\n    REGISTRANT_ADDRESS: 'Registrar dirección',\n    SET_RESOLVER: 'Definir Resolver',\n    TOTAL_COST: 'Coste total',\n    GAS_PRICE: 'Precio gas',\n    NO_ADDRESS_DETECTED: 'Ninguna dirección detectada.',\n    DURATION: 'Duración',\n    NOTICE_SELECT_AN_RPC:\n      'Aviso: seleccione un RPC que se utilizará en la aplicación para reemplazar al proveedor RPC predeterminado.',\n    ENABLE_LIGHT_MODE: 'Activar estilo de diseño de luz.',\n    CLICK_NEXT_TO_PROCEED: 'Haga clic en <b>Next</b> para continuar.',\n  },\n  REGISTRATION: {\n    REGISTRATION_CANCELLED_TITLE: 'Registro cancelado',\n    REGISTRATION_CANCELLED_DESCRIPTION: 'Tu registro ha sido cancelado.',\n    CANCEL_REGISTRATION_TITLE: 'Cancelar Registro',\n    CANCEL_REGISTRATION_DESCRIPTION:\n      '¿Estás seguro que deseas eliminar este configuración? ¡Esta acción no se puede deshacer!',\n    BEFORE_COMMIT: 'Paso 1: solicitar registro.',\n    COMMIT_SENT: 'Procesando solicitud...',\n    COMMIT_COMPLETE: 'Paso 1: solicitar registro...',\n    AWAIT: 'Procesando solicitud...',\n    BEFORE_REGISTRATION: 'Finalización de registro',\n    REGISTRATION_SENT: 'Completando registro...',\n    REGISTRATION_COMPLETE: 'Fecha de registro!',\n    REGISTRATION_COMPLETE_TITLE: 'Registro completado',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: 'Tus dominios han sido registrados.',\n    BASKET_EMPTY: 'Tu cesta está vacía',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER:\n      'Por favor, seleccione nuevos dominios para registrarse.',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: 'Transacción cancelada. Por favor, inténtelo de nuevo.',\n  },\n  SPINNER: {\n    LEDGER_NO_DEVICE_SELECTED:\n      'Se produjo un error al crear el cupón. Por favor, inténtalo de nuevo.',\n    NO_DATA_TO_DISPLAY: 'No hay elementos para mostrar.',\n    PERFORMING_SEARCH: 'Realizando búsqueda...',\n    LOADING_DATA: 'Cargando datos...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET:\n      'Siga las instrucciones de su cartera para continuar.',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: 'Introducir duración',\n    ENTER_QR_LINK: 'Introduzca la URL personalizada del código QR',\n    ENTER_PRICE: 'Introducir precio',\n    ENTER_CUSTOM_ADDRESS: 'Introduzca dirección personalizada',\n    ENTER_RECEIVER_ADDRESS: 'Introduzca la dirección del receptor',\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: 'Duración no válida',\n    INVALID_QR_LINK: 'URL no válida, por favor inténtelo de nuevo.',\n    INVALID_PRICE: 'Precio no válido, por favor inténtalo de nuevo.',\n    NO_ADDRESS_DETECTED:\n      'No se ha detectado ninguna dirección, inténtelo de nuevo.',\n    INVALID_ADDRESS: 'Código no válido. Inténtelo de nuevo.',\n  },\n  STEP: {\n    STEP_1: 'Paso 1',\n    STEP_2: 'Paso 2',\n    STEP_3: 'Paso 3',\n    STEP_4: 'Paso 4',\n    STEP_5: 'Paso 5',\n  },\n  RENEW: {\n    RENEWAL_COST: 'Coste de Renovación',\n    ESTIMATED_RENEWAL_COST:\n      'A continuación se muestra el costo estimado de renovación de esta transacción.',\n    RENEWAL_COMPLETE: 'Renovación Completa',\n    DOMAINS_READY_FOR_RENEWAL:\n      ' Tus dominios están listos para la renovación. Para completar la prensa, procede.',\n  },\n  TRANSFER: {\n    TRANSFER_TO: 'Transferir',\n    TRANSFER_COMPLETE: '¡Transferencia completada!',\n    SETUP_INSTRUCTION:\n      'Para activar la administración de dominios ENS, su cuenta debe estar configurada para aprobar transferencias de dominios.',\n    CONTRACT_APPROVAL_NOTE:\n      'La aprobación del contrato permite que el contrato realice la transferencia de dominios en su nombre.',\n    DOMAINS_READY_FOR_TRANSFER:\n      'Tus dominios están listos para ser transferidos. Introduce la dirección del destinatario y pulsa continuar.',\n  },\n};\n","export default {\n  BUTTON: {\n    SAVE_CHANGES: 'Сохранить изменения',\n    PROCEED: 'Продолжить',\n    DISMISS: 'Отклонить',\n    CONNECT: 'Подключиться',\n    CONNECT_WALLET: 'Подключить кошелек',\n    DISCONNECT: 'Отключиться',\n    LOGOUT: 'Выйти',\n    CLOSE: 'Закрыть',\n    SETTINGS: 'Настройки',\n    LAUNCH_APP: 'Запустить приложение',\n    CONNECT_TO_PROCEED: 'Подключить кошелек',\n    VIEW_DETAILS: 'Детали',\n    REFRESH: 'Обновить',\n    START_REGISTRATION: 'Начать регистрацию',\n    CANCEL: 'Отмена',\n    PRESS_ENTER: 'Нажмите Enter',\n    LEARN_MORE: 'Узнать больше',\n    CLOSE_WINDOW: 'Закрыть окно',\n    SHOW_AVAILABLE_ONLY: 'Показать только доступные',\n    SHOW_AVAILABLE: 'Показать только доступные',\n    PROCEED_SEARCH: 'Продолжить поиск',\n    DOWNLOAD: 'Скачать',\n    SHOW_ALL: 'Показать все',\n    DESELECT_ALL: 'Отменить выбор',\n    SHOW_SELCTED: 'Показать выбранные',\n    LINK: 'Ссылка',\n    CUSTOM_LINK: 'Пользовательская ссылка',\n    SET_QR_LINK_ALL: 'Установить QR ссылку все',\n    SET_QR_LINK: 'Установить QR ссылку все',\n    DISABLE_ALL: 'Отключить все',\n    DISABLE_QR_CODE: 'Отключить QR-код',\n    ENABLE_QR_CODE: 'Отключить QR-код',\n    SET_QR_COLOR: 'Установить цвет QR',\n    SET_COLOR: 'Задать цвет',\n    SET_ALL_COLORS: 'Установить цвет QR',\n    SET_PRICE: 'Установить цену',\n    SET_PRICE_ALL: 'Установить цену для всех',\n    RESET: 'Reset',\n    CHECK_PROFILE: 'Проверить профиль',\n    GO_TO_DASHBOARD: 'Перейти к панели управления',\n    GO_TO_HOME: 'Перейти на главную',\n    VIEW_PROFILE: 'Просмотр профиля',\n    CHECK_DOMAINS: 'Проверить домены',\n    TRANSACTION_DETAILS: 'Детали транзакции',\n    BUY_NOW: 'Купить сейчас',\n    CLEAR_HISTORY: 'Очистить историю',\n    DEFAULT: 'По умолчанию',\n    CUSTOM: 'Своё',\n    FRACTIONALISE: 'Фракционализация',\n    MORE_INFO: 'Подробнее',\n    LESS_INFO: 'Скрыть',\n    APPROVE: 'Утверждено',\n    NEXT: 'Следующий',\n    PENDING: 'В обработке',\n    REMOVE_ALL_ITEMS: 'Удалить все позиции',\n    ADD_ALL_TO_CART: 'Добавить все в корзину',\n    BOOKMARK_ALL: 'Отметить все',\n    DOWNLOAD_LIST: 'Файлы для скачивания',\n    SHARE_LIST: 'Поделиться списком',\n    MORE: 'Еще',\n    CHANGE: 'Редактировать',\n  },\n  HEADER: {\n    FAQ: 'ЧАВО',\n    BACK_TO_HOME: 'Назад на главную',\n    HOME: 'Домой',\n    CATEGORIES: 'Категории',\n    HELP_SUPPORT: 'Помощь и поддержка',\n    HELP: 'Помощь',\n    CANCEL_REGISTRATION: 'Отменить регистрацию',\n    PROFILE: 'Профиль',\n    SETTINGS: 'Настройки',\n    DOCS: 'Документ',\n    DOCUMENTATIONS: 'Документация',\n    CART: 'Корзина',\n    BOOKMARKS: 'Закладки',\n    PAYMENTS_HISTORY: 'История платежей',\n    LIGHT_MODE: 'Светлый режим',\n    CUSTOM_RPC: 'Custom ETH RPC',\n    SETUP_REQUIRED: 'Требуется настройка',\n    MANAGE_DOMAINS: 'Управление доменами',\n    APPROVE: 'Утверждено',\n    FEATURE_DISABLED: 'Функция отключена',\n  },\n  IPFS: {\n    INITIALISING: 'Запуск p2p',\n    FINDING_PEERS: 'Поиск пиров',\n    FAILED: 'Неудачный',\n    READY: 'Готово',\n    PUBLISHING: 'Публикация',\n  },\n  EVENTS: {\n    TRANSFER: 'Перевод',\n    REGISTRATION: 'Регистрация',\n    RENEWAL: 'Продлить',\n    SALE: 'Продажа',\n    MINT: 'Минт',\n    BURN: 'Сжечь',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE:\n      'Сеть не поддерживается. Пожалуйста, измените сеть.',\n    IPNS_PUBLISHING_COMPLETED: 'Публикация завершена!',\n    PENDING_TRANSACTION_CERATED:\n      'Была создана новая транзакция. Пожалуйста, проверьте ваш кошелек.',\n  },\n  RENEWAL_DURATIONS: {\n    ONE_WEEK: '1 неделя',\n    ONE_MONTH: 'Месяц',\n    THREE_MONTHS: '3 месяца',\n    SIX_MONTHS: '6 месяца',\n    ONE_YEAR: '1 год',\n    TWO_YEARS: '2 года',\n    THREE_YEARS: '3 года',\n    FOUR_YEARS: '4 года',\n    FIVE_YEARS: '5 года',\n  },\n  LABELS: {\n    TOP_CATEGORIES: 'Категории',\n    TOTAL_ASSETS: 'Итоговые активы',\n    MONTHLY_SALES: 'Проездной на месяц',\n    DAILY_VOLUME: 'Дневной объем',\n    MONTHLY_VOLUME: 'Ежемесячный объем',\n    DAILY_SALES: 'Ежедневная распродажа',\n    TOP_SALE: 'Топ продаж',\n    TOP_SALES: 'Лидеры продаж',\n    TOP_BUYER: 'Топ Покупатель',\n    RECENT_SALES: 'Стиль недавних ',\n    SALES_ACTIVITY: 'Активность продаж',\n    ENTER_NAMES_TO_SEARCH: 'Введите имена для поиска',\n    NOT_AVAILABLE: 'Недоступно',\n    VOLUME: 'Громкость',\n    FLOOR: 'Пол',\n    FILTER: 'Фильтр',\n    RENEWAL_DURATION: 'Продолжительность обновления',\n    TRANSACTION: 'Транзакция',\n    USER_PROFILE: 'Профиль пользователя',\n    FEATURE_DISABLED: 'Эта функциональность на данный момент недоступна',\n    COMPLETE: 'Готово',\n    ESTIMATED_COST: 'Предполагаемые затраты',\n    ADDRESS: 'Адрес',\n    TRANSFER: 'Перевод',\n    PLEASE_WAIT: 'Пожалуйста, подождите',\n    SELECT_A_DOMAIN: 'Выбранные домены',\n    RENEW: 'Продлить',\n    MANAGE_DOMAINS: 'Управление доменами',\n    SEARCH_FOR: 'Поиск',\n    MANAGE: 'Управлять',\n    COLLECT: 'Собрать',\n    LANDING_TEXT:\n      'Открытый исходный код, децентрализованный поиск доменов Web3, регистрация и рынок.',\n    PROFILE: 'Профиль',\n    GO_TO_PROFILE: 'Зайди в профиль',\n    SEARCH: 'Искать',\n    CONTAIN_ALPHABET: 'Содержит алфавит',\n    CONTAIN_NUMBERS: 'Содержит числа',\n    CONTAIN_EMOJI: 'Содержит смайлы',\n    MIN_LENGTH: 'Мин. длина',\n    MAX_LENGTH: 'Макс. длина',\n    CONTAINING_KEYWORDS: 'Содержащие ключевые слова',\n    FILTERS: 'Фильтры',\n    DOMAINS: 'Домены',\n    DOMAIN: 'Поле',\n    DOMAIN_HISTORY: 'История доменов',\n    EXPIRATION_DATE: 'Дата истечения',\n    REGISTRATION_DATE: 'Регистрация',\n    CREATION_DATE: 'Дата создания',\n    DETAILS: 'Детали',\n    YOUR_DOMAINS: 'Ваши домены',\n    PROCESSING: 'Обработка',\n    LAYOUT: 'Макет',\n    ENTER_SUFFIX: 'Введите суффикс',\n    ENTER_PREFIX: 'Укажите префикс',\n    CLICK: 'Нажать',\n    CONNECT_TO_START: ' начать или ',\n    TIP: 'Tip',\n    ACTION: 'Действие',\n    ADVANCED_SEARCH_TIP:\n      'используйте новую строку или запятую для разделения ваших доменных записей.',\n    ADVANCED_SEARCH: 'Усовершенствованный поиск',\n    ADVANCED_MODE: 'Расширенный режим',\n    REGISTER_DOMAINS_TO: 'Регистрация доменов для',\n    NO_DOMAINS_SELECTED: 'Домены не выбраны.',\n    FIND_AND_REGISTER: 'Поиск доменов, например домена1, домена2...',\n    SELECTED_DOMAINS: 'Выбранные домены',\n    REGISTER: 'Регистрация',\n    BOOKMARKS: 'Закладки',\n    SEARCH_RESULTS: 'Результаты поиска',\n    PROCEED_TO_REGISTRATION: 'Перейти к регистрации',\n    REGISTER_DOMAINS: 'Регистрация доменов для',\n    REGISTRANT_ADDRESS: 'Регистрационный адрес',\n    SET_RESOLVER: 'Установить резолвер',\n    TOTAL_COST: 'Общая стоимость',\n    GAS_PRICE: 'Цена газа',\n    NO_ADDRESS_DETECTED: 'Адрес не обнаружен.',\n    DURATION: 'Продолжительность',\n    NOTICE_SELECT_AN_RPC:\n      'Примечание: выберите RPC, который будет использоваться в приложении для замены поставщика RPC по умолчанию.',\n    ENABLE_LIGHT_MODE: 'Включить светлый стиль.',\n    CLICK_NEXT_TO_PROCEED: 'Нажмите <b>Далее</b> , чтобы продолжить.',\n  },\n  REGISTRATION: {\n    REGISTRATION_CANCELLED_TITLE: 'Регистрация отменена',\n    REGISTRATION_CANCELLED_DESCRIPTION: 'Ваша регистрация была отменена.',\n    CANCEL_REGISTRATION_TITLE: 'Отменить регистрацию',\n    CANCEL_REGISTRATION_DESCRIPTION:\n      'Вы уверены, что хотите удалить регистрацию этого проекта? Это действие будет невозможно отменить.',\n    BEFORE_COMMIT: 'Шаг 1: запрос на регистрацию.',\n    COMMIT_SENT: 'Обработка запроса...',\n    COMMIT_COMPLETE: 'Шаг 1: запрос на регистрацию...',\n    AWAIT: 'Обработка запроса...',\n    BEFORE_REGISTRATION: 'Окончание регистрации',\n    REGISTRATION_SENT: 'Завершение регистрации...',\n    REGISTRATION_COMPLETE: 'Регистрация!',\n    REGISTRATION_COMPLETE_TITLE: 'Регистрация завершена',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: 'Ваши домены зарегистрированы.',\n    BASKET_EMPTY: 'Ваша корзина пуста',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER:\n      'Пожалуйста, выберите новые домены для регистрации.',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: 'Транзакция отменена. Пожалуйста, попробуйте еще раз.',\n  },\n  SPINNER: {\n    LEDGER_NO_DEVICE_SELECTED:\n      'Произошла ошибка при подключении к вашему кошельку. Пожалуйста, попробуйте еще раз.',\n    NO_DATA_TO_DISPLAY: 'Нет элементов для отображения.',\n    PERFORMING_SEARCH: 'Выполняется поиск...',\n    LOADING_DATA: 'Загрузка данных...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET:\n      'Чтобы продолжить, следуйте инструкциям в вашем кошельке.',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: 'Введите длительность',\n    ENTER_QR_LINK: 'Введите свой QR-код URL',\n    ENTER_PRICE: 'Введите цену',\n    ENTER_CUSTOM_ADDRESS: 'Введите свой адрес',\n    ENTER_RECEIVER_ADDRESS: 'Введите адрес получателя',\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: 'Неверная длительность',\n    INVALID_QR_LINK: 'Неправильный URL, попробуйте еще раз.',\n    INVALID_PRICE: 'Неправильная цена, попробуйте еще раз.',\n    NO_ADDRESS_DETECTED: 'Адрес не обнаружен, попробуйте еще раз.',\n    INVALID_ADDRESS: '僅用於中文',\n  },\n  STEP: {\n    STEP_1: 'Шаг 1',\n    STEP_2: 'Шаг 2',\n    STEP_3: 'Шаг 3',\n    STEP_4: 'Шаг 4',\n    STEP_5: 'Шаг 5',\n  },\n  RENEW: {\n    RENEWAL_COST: 'Стоимость обновления',\n    ESTIMATED_RENEWAL_COST:\n      'Ниже приведены оценочные расходы на продление данной сделки.',\n    RENEWAL_COMPLETE: 'Обновление завершено',\n    DOMAINS_READY_FOR_RENEWAL:\n      ' Ваши домены теперь готовы к обновлению. Чтобы завершить обновление, нажмите продолжить.',\n  },\n  TRANSFER: {\n    TRANSFER_TO: 'Перевод',\n    TRANSFER_COMPLETE: 'Перевод завершен',\n    SETUP_INSTRUCTION:\n      'Чтобы включить управление доменами ENS, ваша учетная запись должна быть настроена на утверждение переноса домена.',\n    CONTRACT_APPROVAL_NOTE:\n      'Одобрение договора позволяет выполнять передачу доменов от Вашего имени.',\n    DOMAINS_READY_FOR_TRANSFER:\n      'Теперь ваши домены готовы для передачи. Введите адрес получателя и нажмите продолжить.',\n  },\n};\n","export default {\n  BUTTON: {\n    SAVE_CHANGES: 'Enregistrer les modifications',\n    PROCEED: 'Procéder',\n    DISMISS: 'Refuser',\n    CONNECT: 'Connecter',\n    CONNECT_WALLET: 'Connecter le portefeuille',\n    DISCONNECT: 'Déconnecter',\n    LOGOUT: 'Déconnexion',\n    CLOSE: 'Fermer',\n    SETTINGS: 'Réglages',\n    LAUNCH_APP: \"Lancer l'application\",\n    CONNECT_TO_PROCEED: 'Connecter le portefeuille',\n    VIEW_DETAILS: 'Voir les détails',\n    REFRESH: 'Rafraîchir',\n    START_REGISTRATION: \"Commencer l'inscription\",\n    CANCEL: 'Abandonner',\n    PRESS_ENTER: 'Appuyez sur Entrée',\n    LEARN_MORE: 'En savoir plus',\n    CLOSE_WINDOW: 'Fermer la fenêtre',\n    SHOW_AVAILABLE_ONLY: 'Afficher uniquement les disponibilités',\n    SHOW_AVAILABLE: 'Afficher uniquement les disponibilités',\n    PROCEED_SEARCH: 'Poursuivre la recherche',\n    DOWNLOAD: 'Télécharger',\n    SHOW_ALL: 'Tout afficher',\n    DESELECT_ALL: 'Désélectionner tout',\n    SHOW_SELCTED: 'Afficher la sélection',\n    LINK: 'Lier',\n    CUSTOM_LINK: 'Lien personnalisé',\n    SET_QR_LINK_ALL: 'Définir le lien QR',\n    SET_QR_LINK: 'Définir le lien QR',\n    DISABLE_ALL: 'Désactiver tout',\n    DISABLE_QR_CODE: 'Désactiver le QR Code',\n    ENABLE_QR_CODE: 'Désactiver le QR Code',\n    SET_QR_COLOR: 'Définir la couleur du QR',\n    SET_COLOR: 'Définir la couleur du QR',\n    SET_ALL_COLORS: 'Définir la couleur du QR',\n    SET_PRICE: 'Fixer le prix',\n    SET_PRICE_ALL: 'Fixer le prix à tous',\n    RESET: 'Reset',\n    CHECK_PROFILE: 'Vérifier le profil',\n    GO_TO_DASHBOARD: 'Aller au tableau de bord',\n    GO_TO_HOME: \"Aller à la page d'accueil\",\n    VIEW_PROFILE: 'Voir le profil',\n    CHECK_DOMAINS: 'Vérifier les domaines',\n    TRANSACTION_DETAILS: 'Détails de la transaction',\n    BUY_NOW: 'Acheter maintenant',\n    CLEAR_HISTORY: \"Effacer l'historique\",\n    DEFAULT: 'Par défaut',\n    CUSTOM: 'Personnaliser',\n    FRACTIONALISE: 'Fractionaliser',\n    MORE_INFO: \"Plus d'informations\",\n    LESS_INFO: \"Moins d'info\",\n    APPROVE: 'Approuver',\n    NEXT: 'Suivant',\n    PENDING: 'En attente',\n    REMOVE_ALL_ITEMS: 'Supprimer tous les éléments',\n    ADD_ALL_TO_CART: 'Tout ajouter au panier',\n    BOOKMARK_ALL: 'Marquer tous les favoris',\n    DOWNLOAD_LIST: 'Liste des téléchargements',\n    SHARE_LIST: 'Partager la liste',\n    MORE: 'Plus d’infos',\n    CHANGE: 'Modifier',\n  },\n  HEADER: {\n    FAQ: 'Foire aux questions',\n    BACK_TO_HOME: \"Retour à la page d'accueil\",\n    HOME: 'Retour',\n    CATEGORIES: 'Catégories',\n    HELP_SUPPORT: 'Aide & Support',\n    HELP: 'Aide',\n    CANCEL_REGISTRATION: \"Annuler l'inscription\",\n    PROFILE: 'Profil',\n    SETTINGS: 'Réglages',\n    DOCS: 'Documents',\n    DOCUMENTATIONS: 'Documentations',\n    CART: 'Panier',\n    BOOKMARKS: 'Signets',\n    PAYMENTS_HISTORY: 'Historique des paiements',\n    LIGHT_MODE: 'Mode clair',\n    CUSTOM_RPC: 'RPC personnalisé',\n    SETUP_REQUIRED: 'Configuration requise',\n    MANAGE_DOMAINS: 'Gestion Domaines',\n    APPROVE: 'Approuver',\n    FEATURE_DISABLED: 'Fonction désactivée',\n  },\n  IPFS: {\n    INITIALISING: 'Démarrage p2p',\n    FINDING_PEERS: 'Recherche de pairs',\n    FAILED: 'Echoué',\n    READY: 'Prêt',\n    PUBLISHING: 'Publication en cours',\n  },\n  EVENTS: {\n    TRANSFER: 'Transférer',\n    REGISTRATION: 'Inscription',\n    RENEWAL: 'Renouvellement',\n    SALE: 'Vente',\n    MINT: 'Médicaments',\n    BURN: 'Brûlure',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE:\n      \"Le réseau n'est pas pris en charge. Veuillez modifier votre réseau.\",\n    IPNS_PUBLISHING_COMPLETED: 'Publication terminée !',\n    PENDING_TRANSACTION_CERATED:\n      'Une nouvelle transaction a été créée. Veuillez vérifier votre portefeuille.',\n  },\n  RENEWAL_DURATIONS: {\n    ONE_WEEK: '1 La semaine',\n    ONE_MONTH: '1 mois',\n    THREE_MONTHS: '3 Mois',\n    SIX_MONTHS: '6 Mois',\n    ONE_YEAR: '1 an',\n    TWO_YEARS: '2 Ans',\n    THREE_YEARS: '3 Ans',\n    FOUR_YEARS: '4 Ans',\n    FIVE_YEARS: '5 Ans',\n  },\n  LABELS: {\n    TOP_CATEGORIES: 'Catégories Top',\n    TOTAL_ASSETS: 'Total des biens',\n    MONTHLY_SALES: 'Ventes mensuelles',\n    DAILY_VOLUME: 'Volume quotidien',\n    MONTHLY_VOLUME: 'Volume mensuel',\n    DAILY_SALES: 'Journal Des Ventes',\n    TOP_SALE: 'Meilleure vente',\n    TOP_SALES: 'Meilleures ventes',\n    TOP_BUYER: 'Meilleur Acheteur',\n    RECENT_SALES: 'Ventes récentes',\n    SALES_ACTIVITY: 'Activité des ventes',\n    ENTER_NAMES_TO_SEARCH: 'Entrez les noms à rechercher',\n    NOT_AVAILABLE: 'Non disponible',\n    VOLUME: 'Volume',\n    FLOOR: 'Sol',\n    FILTER: 'Filtre',\n    RENEWAL_DURATION: 'Durée du Renouvellement',\n    TRANSACTION: 'Transaction',\n    USER_PROFILE: \"Profil de l'utilisateur\",\n    FEATURE_DISABLED: 'Cette fonctionnalité est actuellement désactivée.',\n    COMPLETE: 'Compléter',\n    ESTIMATED_COST: 'Coût estimé',\n    ADDRESS: 'Adresse',\n    TRANSFER: 'Transférer',\n    PLEASE_WAIT: 'Je vous laisse attendre :',\n    SELECT_A_DOMAIN: 'Sélectionner un domaine',\n    RENEW: 'Renew',\n    MANAGE_DOMAINS: 'Gestion Domaines',\n    SEARCH_FOR: 'Rechercher',\n    MANAGE: 'Gérer',\n    COLLECT: 'Prendre',\n    LANDING_TEXT:\n      'Open source, décentralisé, Web3 domaines de recherche, enregistrement & marketplace.',\n    PROFILE: 'Profil',\n    GO_TO_PROFILE: 'Aller au Profil',\n    SEARCH: 'Chercher',\n    CONTAIN_ALPHABET: \"Contient l'alphabet\",\n    CONTAIN_NUMBERS: 'Contient des nombres',\n    CONTAIN_EMOJI: 'Contient des émoticônes',\n    MIN_LENGTH: 'Longueur min.',\n    MAX_LENGTH: 'Longueur Max.',\n    CONTAINING_KEYWORDS: 'Contenant des mots-clés',\n    FILTERS: 'Filtres',\n    DOMAINS: 'Domaines',\n    DOMAIN: 'Verkkotunnus',\n    DOMAIN_HISTORY: 'Historique du domaine',\n    EXPIRATION_DATE: \"Date d'expiration\",\n    REGISTRATION_DATE: 'Inscription',\n    CREATION_DATE: 'Date de Création',\n    DETAILS: 'Détail',\n    YOUR_DOMAINS: 'Vos domaines',\n    PROCESSING: 'En cours de traitement',\n    LAYOUT: 'Disposition',\n    ENTER_SUFFIX: 'Saisir le suffixe',\n    ENTER_PREFIX: 'Entrez le préfixe',\n    CLICK: 'Click',\n    CONNECT_TO_START: ' pour commencer ou ',\n    TIP: 'Tip',\n    ACTION: 'Action',\n    ADVANCED_SEARCH_TIP:\n      'utilisez une nouvelle ligne ou une nouvelle virgule pour séparer vos entrées de domaine.',\n    ADVANCED_SEARCH: 'Recherche avancée',\n    ADVANCED_MODE: 'Mode Avancé',\n    REGISTER_DOMAINS_TO: 'Enregistrer les domaines à',\n    NO_DOMAINS_SELECTED: 'Aucun domaine sélectionné.',\n    FIND_AND_REGISTER:\n      'Enregistrer les domaines par exemple domaine1, domaine2...',\n    SELECTED_DOMAINS: 'Domaines sélectionnés',\n    REGISTER: 'Inscription',\n    BOOKMARKS: 'Signets',\n    SEARCH_RESULTS: 'Résultats de recherche',\n    PROCEED_TO_REGISTRATION: \"Procéder à l'inscription\",\n    REGISTER_DOMAINS: 'Enregistrer les domaines à',\n    REGISTRANT_ADDRESS: \"Adresse de l'inscrit\",\n    SET_RESOLVER: 'Définir le résolveur',\n    TOTAL_COST: 'Coût total',\n    GAS_PRICE: 'Prix du gaz',\n    NO_ADDRESS_DETECTED: 'Aucune adresse détectée.',\n    DURATION: 'Durée',\n    NOTICE_SELECT_AN_RPC:\n      \"Remarque : sélectionnez un RPC qui sera utilisé dans l'application pour remplacer le fournisseur RPC par défaut.\",\n    ENABLE_LIGHT_MODE: 'Activer le style de mise en page léger.',\n    CLICK_NEXT_TO_PROCEED: 'Cliquez sur <b>Suivant</b> pour continuer.',\n  },\n  REGISTRATION: {\n    REGISTRATION_CANCELLED_TITLE: 'Inscription annulée',\n    REGISTRATION_CANCELLED_DESCRIPTION: 'Votre inscription a été annulée.',\n    CANCEL_REGISTRATION_TITLE: \"Annuler l'inscription\",\n    CANCEL_REGISTRATION_DESCRIPTION:\n      'Êtes-vous sûr de vouloir annuler cette inscription ? Cette action ne peut pas être annulée.',\n    BEFORE_COMMIT: \"Étape 1 : demande d'inscription.\",\n    COMMIT_SENT: 'Traitement de la requête...',\n    COMMIT_COMPLETE: \"Étape 1 : demande d'inscription...\",\n    AWAIT: 'Traitement de la requête...',\n    BEFORE_REGISTRATION: \"Terminer l'inscription.\",\n    REGISTRATION_SENT: \"Fin de l'inscription...\",\n    REGISTRATION_COMPLETE: 'Inscription!',\n    REGISTRATION_COMPLETE_TITLE: 'Inscription',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: 'Vos domaines ont été enregistrés.',\n    BASKET_EMPTY: 'Votre panier est vide',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER:\n      'Veuillez sélectionner de nouveaux domaines à enregistrer.',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: 'Transaction annulée. Veuillez réessayer.',\n  },\n  SPINNER: {\n    LEDGER_NO_DEVICE_SELECTED:\n      'Une erreur est survenue lors de la connexion à votre portefeuille. Veuillez réessayer.',\n    NO_DATA_TO_DISPLAY: 'Aucun élément à afficher.',\n    PERFORMING_SEARCH: 'Recherche en cours...',\n    LOADING_DATA: 'Chargement des données...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET:\n      'Veuillez suivre les instructions de votre portefeuille pour continuer.',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: 'Entrez la durée',\n    ENTER_QR_LINK: \"Entrez l'URL du QR Code personnalisé\",\n    ENTER_PRICE: 'Entrez le prix',\n    ENTER_CUSTOM_ADDRESS: 'Entrez une adresse personnalisée',\n    ENTER_RECEIVER_ADDRESS: \"Entrez l'adresse du destinataire\",\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: 'Durée non valide',\n    INVALID_QR_LINK: 'URL invalide, veuillez réessayer.',\n    INVALID_PRICE: 'URL invalide, veuillez réessayer.',\n    NO_ADDRESS_DETECTED: 'Aucune adresse détectée, veuillez réessayer.',\n    INVALID_ADDRESS: 'Adresse invalide, veuillez réessayer.',\n  },\n  STEP: {\n    STEP_1: 'Etape 1',\n    STEP_2: 'Etape 2',\n    STEP_3: 'Etape 3',\n    STEP_4: 'Etape 4',\n    STEP_5: 'Etape 5',\n  },\n  RENEW: {\n    RENEWAL_COST: 'Coût de Renouvellement',\n    ESTIMATED_RENEWAL_COST:\n      'Voici le coût estimé de renouvellement de cette transaction.',\n    RENEWAL_COMPLETE: 'Renouvellement terminé',\n    DOMAINS_READY_FOR_RENEWAL:\n      ' Vos domaines sont maintenant prêts à être renouvelés. Pour finaliser votre renouvellement, appuyez sur continuer.',\n  },\n  TRANSFER: {\n    TRANSFER_TO: 'Transfert vers',\n    TRANSFER_COMPLETE: 'Transfert terminé !',\n    SETUP_INSTRUCTION:\n      'Pour activer la gestion des domaines ENS, votre compte doit être configuré pour approuver les transferts de domaine.',\n    CONTRACT_APPROVAL_NOTE:\n      \"L'approbation du contrat permet au contrat d'effectuer des transferts de domaines en votre nom.\",\n    DOMAINS_READY_FOR_TRANSFER:\n      \"Vos domaines sont maintenant prêts pour le transfert. Entrez l'adresse du destinataire et appuyez sur continuer.\",\n  },\n};\n","import * as EN from './translations/en.conf';\nimport * as DE from './translations/de.conf';\nimport * as CN from './translations/cn.conf';\nimport * as JP from './translations/jp.conf';\nimport * as ES from './translations/es.conf';\nimport * as RU from './translations/ru.conf';\nimport * as FR from './translations/fr.conf';\n\nexport const validTranslations = {\n  en: EN,\n  de: DE,\n  es: ES,\n  fr: FR,\n  ru: RU,\n  jp: JP,\n  cn: CN,\n};\n","import { HammerGestureConfig } from '@angular/platform-browser';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class HammerJsConf extends HammerGestureConfig {\n\toverrides = {\n\t\tswipe: { velocity: 0.3, threshold: 10 },\n\t} as any;\n}\n","import { DomainTypeEnum } from '../models/domains';\nimport { PagesEnum } from '../models/states/pages-interfaces';\n\nexport const generalConfigurations = {\n  version: '0.1.0',\n  defaultLanguage: 'en',\n  defaultPage: PagesEnum.HOME,\n  maximumDecimalInPrices: 8,\n  maxAttemptsToCheckoutData: 10,\n  sessionTimeout: 6000 * 15,\n  maxRPCCallRetries: 10,\n  timeUntilImageLoadErrors: 3000,\n  timeToUpdateEthUSDRate: 60000,\n  timeToUpdateCheckoutPipe: 3000,\n  timeToUpdateRegistrationGasPrice: 5000,\n  timeUntilCheckoutExpires: 3000,\n  maxBlogsOnHome: 3,\n  maxConfirmationsUntilTxFinal: 1,\n  declarePaymentStatusUnkownUntilXFailedDataFetches: 5,\n  gasLimitBuffer: 50000,\n  maxCheckoutRetryUntilRehydrateProcessId: 5,\n  maxIpfsSubscriptionRetries: 5,\n  maxDomainsToRegister: 150,\n  maxYearsRegistration: 1000,\n  maxTotalCostBuffer: 105,\n  maxDomainSearch: {\n    ENS: 1000,\n    LNR: 100,\n  },\n  defaultCurrency: 'ETH',\n  enableCustomRPC: true,\n  frontpageBlogsFeed:\n    'https://s3.amazonaws.com/revue/accounts/rss_feeds/000/527/060/original/rss_feed_527060.xml?1664402575',\n  docsLink: 'https://docs.predomain.xyz/',\n  blockscanLink: 'https://chat.blockscan.com/index?a=',\n  nftyChatLink: 'https://nftychat.xyz/dm/',\n  appName: 'predomain',\n  appStagingName: 'staging.predomain',\n  trezorManifest: {\n    email: 'predomain@skiff.com',\n    appUrl: 'https://predomain.eth.limo',\n  },\n  appMeta: {\n    description: 'Decentralised ENS Search, Registration, & Marketplace',\n    url: 'https://predomain.eth.limo',\n    icons: ['https://ecanvas.eth.limo/assets/logo.png'],\n    name: 'Predomain.eth',\n  },\n  enabledTools: {\n    category: true,\n    management: true,\n    canvas: true,\n    registration: true,\n    profile: true,\n    domain: true,\n  },\n  enablePoapResolution: false,\n  poapRequiredTools: {\n    category: {\n      required: false,\n      poapId: null,\n      allowedIds: null,\n    },\n    management: { required: false, poapId: null, allowedIds: null },\n    canvas: { required: false, poapId: null, allowedIds: null },\n    registration: { required: false, poapId: null, allowedIds: null },\n    profile: { required: false, poapId: null, allowedIds: null },\n    domain: { required: false, poapId: null, allowedIds: null },\n  },\n  wallectConnectSupportedWallets: [\n    'rainbow',\n    'metamask',\n    'argent',\n    'trust',\n    'trezor',\n    'imtoken',\n    'pillar',\n    'coinbase',\n  ],\n  domainsCanBeRegistered: [DomainTypeEnum.ENS],\n  domainExtensions: {\n    ENS: '.eth',\n    LNR: '.og',\n  },\n  domainNormalisationRequired: [DomainTypeEnum.ENS],\n  domainTldTitles: {\n    ENS: 'ENS - Ethereum Name Service',\n    LNR: 'LNR - Linagee Name Registrar',\n  },\n  categoiesDataSourceFallback: 'https://localhost:42069',\n  categoriesUseFallback: true,\n  categoryChartTimeRange: 2629800000,\n  categoriesDomain: 'categories.predomain.eth',\n};\n","export const icons = {\n  check: 'assets/icons/check.apng',\n  confetti: 'assets/icons/confetti.apng',\n  cart_empty: 'assets/icons/cart_empty.apng',\n  llayers: 'assets/icons/llayers.apng',\n  spin: 'assets/icons/spin.apng',\n};\n\nexport const infiniteLoopedIcons = ['spin', 'confetti'];\n","export const imageToPreload = [\n  'icn-ledger.svg',\n  'icn-metamask.svg',\n  'trezor-logo.png',\n  'metamask-connect-in-progress.png',\n  'metamask-sign-in-progress.png',\n  'trezor-connect-in-progress.png',\n  'trezor-sign-in-progress.png',\n  'ledger-connect-in-progress.png',\n  'ledger-sign-in-progress.png',\n];\n","import { PagesEnum } from '../models/states/pages-interfaces';\n\n/**\n * Define pages that are not accessible without a wallet connected.\n */\nexport const privatePages = [\n  PagesEnum.CANVAS,\n  PagesEnum.CHECKOUT,\n  PagesEnum.MANAGE,\n];\n","export const invalidChars = [];\n","export const dataNodeEndpoints = {\n  ping: 'ping/0x0',\n  checkout: 'checkout',\n};\n","export enum DomainTypeEnum {\n  ENS = 'ENS',\n  LNR = 'LNR',\n}\n","export enum EnsEventsEnum {\n  TRANSFER = 'EVENTS.TRANSFER',\n  REGISTRATION = 'EVENTS.REGISTRATION',\n  RENEWAL = 'EVENTS.RENEWAL',\n  SALE = 'EVENTS.SALE',\n  MINT = 'EVENTS.MINT',\n  BURN = 'EVENTS.BURN',\n}\n\nexport enum EnsEvensSymbolEnum {\n  'EVENTS.TRANSFER' = 'sync_alt',\n  'EVENTS.REGISTRATION' = 'sync_alt',\n  'EVENTS.RENEWAL' = 'update',\n  'EVENTS.SALE' = 'shopping_cart',\n  'EVENTS.MINT' = 'magic_button',\n  'EVENTS.BURN' = 'local_fire_department',\n}\n","export enum UserStoreErrorsEnum {\n  UNKNOWN = 'UNKNOWN_USER',\n  CONNECT_ERROR = 'CONNECT_ERROR',\n  LEDGER_NO_DEVICE_SELECTED = 'LEDGER_NO_DEVICE_SELECTED',\n  EMAIL_INVALID = 'EMAIL_INVALID',\n  COMPANY_NAME_INVALID = 'COMPANY_NAME_INVALID',\n  COMPANY_ADDRESS_INVALID = 'COMPANY_ADDRESS_INVALID',\n  SELECTED_CURRENCIES_INVALID = 'SELECTED_CURRENCIES_INVALID',\n  WALLET_ADDRESS_INVALID = 'WALLET_ADDRESS_INVALID',\n  ACCOUNT_EXISTS = 'ACCOUNT_EXISTS',\n  USER_NO_NETWORK_CONNECTION = 'USER_NO_NETWORK_CONNECTION',\n  CANNOT_FIND_WALLET_ADDRESS_TO_RECOVER = 'CANNOT_FIND_WALLET_ADDRESS_TO_RECOVER',\n  DEVICE_VERIFICATION_FAILED = 'DEVICE_VERIFICATION_FAILED',\n  REGISTRATION_EXPIRED = 'REGISTRATION_EXPIRED',\n  REGISTER_CAPTCHA_INVALID = 'REGISTER_CAPTCHA_INVALID',\n  EMAIL_VERIFICATION_FAILED = 'EMAIL_VERIFICATION_FAILED',\n}\n","import { HttpClient } from '@angular/common/http';\nimport { FormatTimePipe, TimeAgoPipe } from '../modules/pipes';\nimport {\n  FormValidationService,\n  MiscUtilsService,\n  PaymentStorageService,\n  TranslationService,\n  UserService,\n  UserSessionService,\n} from '../services';\nimport { BookmarksServiceService } from '../services/bookmarks';\nimport { EnsService } from '../services/ens';\nimport { WalletConnectService } from '../services/wallet-connect';\nimport {\n  RegistrationDataService,\n  RegistrationServiceService,\n} from '../services/registration';\nimport {\n  NavigatorButtonsFacadeService,\n  NavigatorFacadeService,\n  PagesFacadeService,\n  UserFacadeService,\n} from '../store/facades';\nimport { DownloadService } from '../services/download/download.service';\nimport { ContractService } from '../services/contract';\nimport { EnsMarketplaceService } from '../services/ens-marketplace';\nimport { LnrService } from '../services/lnr';\nimport { CategoriesDataService } from '../services/categories-data';\nimport { PoapService } from '../services/poap';\n\nexport const serviceProviders = [\n  UserService,\n  UserSessionService,\n  UserFacadeService,\n  PagesFacadeService,\n  NavigatorFacadeService,\n  NavigatorButtonsFacadeService,\n  FormValidationService,\n  MiscUtilsService,\n  TranslationService,\n  FormatTimePipe,\n  TimeAgoPipe,\n  HttpClient,\n  EnsService,\n  RegistrationDataService,\n  BookmarksServiceService,\n  RegistrationServiceService,\n  PaymentStorageService,\n  WalletConnectService,\n  DownloadService,\n  ContractService,\n  EnsMarketplaceService,\n  LnrService,\n  CategoriesDataService,\n  PoapService,\n];\n","export const payNoMarketAddress = '0x0000000000000000000000000000000000000000';\n","export const routerPaths = {\n  canvas: 'canvas',\n  bootstrap: 'bootstrap',\n  home: 'home',\n  checkout: 'checkout',\n  notfound: 'notfound',\n  profile: 'profile',\n  domain: 'domain',\n  manage: 'manage',\n};\n","export enum ValidRPCProvidersEnum {\n  DEFAULT,\n  CUSTOM,\n  INFURA,\n  ALCHEMY,\n}\n","export enum PagesEnum {\n  BOOTSTRAP = 'BOOTSTRAP',\n  HOME = 'HOME',\n  CANVAS = 'CANVAS',\n  CHECKOUT = 'CHECKOUT',\n  ERROR = 'ERROR',\n  SUCCESS = 'SUCCESS',\n  PROFILE = 'PROFILE',\n  DOMAIN = 'DOMAIN',\n  NOTFOUND = 'NOTFOUND',\n  MANAGE = 'manage',\n}\n","export enum PaymentErrorCodes {\n  NONE,\n  PAYMENT_EXPIRED,\n  TOKEN_NOT_SUPPORTED,\n  INSUFFICIENT_FUNDS,\n  SIGNATURE_INVALID,\n  PAYMENT_FAILURE,\n  AMOUNT_ZERO,\n  MARKET_NOT_SUPPORTED,\n}\n","/**\n * LEAVE THE VALUES, IT MUST BE SET EXPLICITLY.\n */\nexport enum PaymentTypesEnum {\n  PAY = 0,\n  REGISTER = 1,\n  COMMIT = 2,\n  TX_APPROVAL = 3,\n  TX_TRANSFER = 4,\n  TX_RENEW = 5,\n}\n","export enum NonceTypesEnum {\n  SERIAL,\n  TOKEN\n}\n","export enum WalletTypesEnum {\n  METAMASK,\n  LEDGER,\n  TREZOR,\n  WALLET_CONNECT,\n}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { IconComponent } from 'src/app/widgets/icon';\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [IconComponent],\n  exports: [\n    IconComponent,\n    MatDialogModule,\n    MatButtonModule,\n    TranslationModule,\n    FlexLayoutModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class IconModule {}\n","import { NgModule } from \"@angular/core\";\nimport { TranslationModule } from \"./translation.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { serviceProviders } from \"../../models\";\nimport { CustomAddressComponent } from \"../../widgets/custom-address/custom-address.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { CommonModule } from \"@angular/common\";\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [CustomAddressComponent],\n  exports: [\n    CustomAddressComponent,\n    TranslationModule,\n    FlexLayoutModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  bootstrap: [],\n  entryComponents: [CustomAddressComponent],\n  schemas: [],\n})\nexport class CustomAddressDialogModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { GenericDialogComponent } from '../../widgets/generic-dialog/generic-dialog.component';\nimport { IconModule } from './icon.module';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [GenericDialogComponent],\n  exports: [\n    CommonModule,\n    GenericDialogComponent,\n    TranslationModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [GenericDialogComponent],\n  schemas: [],\n})\nexport class GenericDialogModule {}\n","import { NgModule } from \"@angular/core\";\nimport { TranslationModule } from \"./translation.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { serviceProviders } from \"../../models\";\nimport { OnboardDialogComponent } from \"../../widgets/onboard-dialog\";\nimport { SharedModule } from \"../shared.module\";\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    SharedModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [OnboardDialogComponent],\n  exports: [OnboardDialogComponent, TranslationModule, FlexLayoutModule],\n  bootstrap: [],\n  entryComponents: [OnboardDialogComponent],\n  schemas: [],\n})\nexport class OnboardDialogModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { SpinnerCustomComponent } from 'src/app/widgets/spinner-custom';\nimport { CommonModule } from '@angular/common';\nimport { IconModule } from './icon.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [SpinnerCustomComponent],\n  exports: [\n    SpinnerCustomComponent,\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class SpinnerCustomModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { IconModule } from './icon.module';\nimport { CommonModule } from '@angular/common';\nimport { BulkSearchComponent } from 'src/app/widgets/bulk-search';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { SpinnerCustomModule } from './spinner-custom.module';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatInputModule,\n    MatSlideToggleModule,\n    MatProgressBarModule,\n    SpinnerCustomModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [BulkSearchComponent],\n  exports: [\n    BulkSearchComponent,\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatInputModule,\n    MatSlideToggleModule,\n    MatProgressBarModule,\n    SpinnerCustomModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class BulkSearchModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { IconModule } from './icon.module';\nimport { CommonModule } from '@angular/common';\nimport { BlockyComponent } from 'src/app/widgets/blocky';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslationModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [BlockyComponent],\n  exports: [\n    CommonModule,\n    BlockyComponent,\n    MatIconModule,\n    TranslationModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class BlockyModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { serviceProviders } from '../../models';\nimport { CommonModule } from '@angular/common';\nimport { SettingsComponent } from 'src/app/widgets/settings';\nimport { SharedModule } from '../shared.module';\n\n@NgModule({\n  imports: [CommonModule, TranslationModule, SharedModule],\n  providers: [...serviceProviders],\n  declarations: [SettingsComponent],\n  exports: [CommonModule, SettingsComponent, SharedModule],\n  bootstrap: [],\n  entryComponents: [SettingsComponent],\n  schemas: [],\n})\nexport class SettingsDialogModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { IconModule } from './icon.module';\nimport { CommonModule } from '@angular/common';\nimport { MainHeaderComponent } from 'src/app/widgets/main-header';\nimport { BulkSearchModule } from './bulk-search.module';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BlockyModule } from './blocky.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SpinnerCustomModule } from './spinner-custom.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { SettingsDialogModule } from './settings-dialog.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatBadgeModule,\n    MatMenuModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    FlexLayoutModule,\n    SpinnerCustomModule,\n    BulkSearchModule,\n    SettingsDialogModule,\n    BlockyModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [MainHeaderComponent],\n  exports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MainHeaderComponent,\n    MatDialogModule,\n    MatButtonModule,\n    MatBadgeModule,\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatInputModule,\n    TranslationModule,\n    FlexLayoutModule,\n    SpinnerCustomModule,\n    BulkSearchModule,\n    SettingsDialogModule,\n    BlockyModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class MainHeaderModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationPipe } from '../../services';\nimport { EtherDecimalFixedPipe } from '../pipes';\n\n@NgModule({\n  imports: [],\n  providers: [],\n  declarations: [EtherDecimalFixedPipe],\n  exports: [EtherDecimalFixedPipe],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class EtherDecimalFixedModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { SharedModule } from '../shared.module';\nimport { IconModule } from './icon.module';\nimport { RenewManagementComponent } from 'src/app/widgets/renew-management/renew-management.component';\nimport { EtherDecimalFixedModule } from './ether-decimal-fixed.module';\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n    EtherDecimalFixedModule,\n    SharedModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [RenewManagementComponent],\n  exports: [\n    RenewManagementComponent,\n    TranslationModule,\n    IconModule,\n    EtherDecimalFixedModule,\n    FlexLayoutModule,\n  ],\n  bootstrap: [],\n  entryComponents: [RenewManagementComponent],\n  schemas: [],\n})\nexport class RenewManagementDialogModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { SharedModule } from '../shared.module';\nimport { OnboardManagementComponent } from 'src/app/widgets/onboard-management';\nimport { IconModule } from './icon.module';\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n    SharedModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [OnboardManagementComponent],\n  exports: [\n    OnboardManagementComponent,\n    TranslationModule,\n    IconModule,\n    FlexLayoutModule,\n  ],\n  bootstrap: [],\n  entryComponents: [OnboardManagementComponent],\n  schemas: [],\n})\nexport class OnboardManagementDialogModule {}\n","import { NgModule } from \"@angular/core\";\nimport { TranslationPipe } from \"../../services\";\n\n@NgModule({\n  imports: [],\n  providers: [],\n  declarations: [TranslationPipe],\n  exports: [TranslationPipe],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class TranslationModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.addDefaultLocale(en);\n\n@Pipe({\n  name: 'fixedEther',\n})\nexport class EtherDecimalFixedPipe implements PipeTransform {\n  transform(value: number): any {\n    return value.toFixed(6);\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatTime',\n})\nexport class FormatTimePipe extends DatePipe implements PipeTransform {\n  transform(value: string): any {\n    if (value) {\n      const inputDate = new Date(parseInt(value));\n      return super.transform(inputDate, 'MMM d y HH:MM');\n    }\n  }\n\n  transformShortened(value: string): any {\n    if (value) {\n      const inputDate = new Date(parseInt(value));\n      return super.transform(inputDate, 'MMM d');\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nimport { FormatTimePipe } from './format-time.pipe';\nTimeAgo.addDefaultLocale(en);\n\n@Pipe({\n  name: 'timeAgo',\n})\nexport class TimeAgoPipe implements PipeTransform {\n  constructor(protected formatTimePipe: FormatTimePipe) {}\n\n  transform(value: string): any {\n    const timeAgo = new TimeAgo('en-GB');\n    if (value) {\n      const time = timeAgo.format(new Date(parseInt(value)));\n      if (time.toLowerCase().indexOf('year') > -1) {\n        return this.formatTimePipe.transform(value);\n      }\n      return time;\n    }\n  }\n}\n","import {\n  NgModule,\n  CUSTOM_ELEMENTS_SCHEMA,\n  NO_ERRORS_SCHEMA,\n} from '@angular/core';\nimport {\n  MAT_BOTTOM_SHEET_DATA,\n  MatBottomSheetModule,\n} from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n  MatDialogModule,\n} from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {\n  MatProgressBarModule,\n  MAT_PROGRESS_BAR_DEFAULT_OPTIONS,\n} from '@angular/material/progress-bar';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { TranslationModule } from './miscs/translation.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport {\n  GenericDialogModule,\n  CustomAddressDialogModule,\n  IconModule,\n} from './miscs';\nimport { serviceProviders } from '../models';\nimport { HammerJsConf } from '../configurations';\nimport { GetScrollableXyDirective } from './directives';\nimport { FormatTimePipe, TimeAgoPipe } from './pipes';\nimport { HeaderComponent } from '../widgets/header';\nimport { NavigatorComponent } from '../widgets/navigator';\nimport { NavigatorButtonComponent } from '../widgets/navigator-button';\nimport { PinInputComponent } from '../widgets/pin-input';\nimport { SpinnerComponent } from '../widgets/spinner';\nimport { PreviewImageComponent } from '../widgets/preview-image';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { NgxColorsModule } from 'ngx-colors';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    RouterModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IconModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatChipsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatRadioModule,\n    MatStepperModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatRippleModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatListModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSnackBarModule,\n    MatProgressBarModule,\n    MatBadgeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    TranslationModule,\n    DragDropModule,\n    OverlayModule,\n    GenericDialogModule,\n    CustomAddressDialogModule,\n    QRCodeModule,\n    NgxColorsModule,\n  ],\n  providers: [\n    ...serviceProviders,\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: HammerJsConf,\n    },\n    { provide: MAT_PROGRESS_BAR_DEFAULT_OPTIONS, useValue: {} },\n    { provide: MAT_BOTTOM_SHEET_DATA, useValue: {} },\n    { provide: MAT_DIALOG_DATA, useValue: {} },\n    { provide: MatDialogRef, useValue: {} },\n  ],\n  declarations: [\n    HeaderComponent,\n    NavigatorComponent,\n    NavigatorButtonComponent,\n    PinInputComponent,\n    SpinnerComponent,\n    GetScrollableXyDirective,\n    FormatTimePipe,\n    TimeAgoPipe,\n    PreviewImageComponent,\n  ],\n  exports: [\n    HttpClientModule,\n    TranslationModule,\n    CommonModule,\n    RouterModule,\n    HeaderComponent,\n    NavigatorComponent,\n    NavigatorButtonComponent,\n    MatAutocompleteModule,\n    PinInputComponent,\n    SpinnerComponent,\n    PreviewImageComponent,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IconModule,\n    MatBottomSheetModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatRippleModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatListModule,\n    MatStepperModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatTableModule,\n    MatSnackBarModule,\n    MatBadgeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    DragDropModule,\n    OverlayModule,\n    GetScrollableXyDirective,\n    FormatTimePipe,\n    TimeAgoPipe,\n    GenericDialogModule,\n    CustomAddressDialogModule,\n    QRCodeModule,\n    NgxColorsModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class SharedModule {}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DomainMetadataModel } from 'src/app/models/domains';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BookmarksServiceService {\n  constructor(protected snackBar: MatSnackBar) {}\n\n  countBookmarks() {\n    return this.loadBookmarksAndFeed().length;\n  }\n\n  loadBookmarks() {\n    return localStorage.getItem('canvas-bookmarks');\n  }\n\n  loadBookmarksAndFeed() {\n    const sBookmarks = this.loadBookmarks();\n    if (sBookmarks !== null && sBookmarks !== '' && sBookmarks !== '[]') {\n      return JSON.parse(sBookmarks);\n    }\n    return [];\n  }\n\n  saveAllBookmark(domainsData: DomainMetadataModel[]) {\n    const bookmarksRaw = this.loadBookmarksAndFeed().reduce(\n      (accumulator, value) => {\n        return { ...accumulator, [value.labelName]: value };\n      },\n      {}\n    );\n    const bKeys = Object.keys(bookmarksRaw);\n    let bookmarks = [...new Set(bKeys)].map((k) => bookmarksRaw[k]);\n    bookmarks = bookmarks.concat(domainsData);\n    localStorage.setItem('canvas-bookmarks', JSON.stringify(bookmarks));\n    return bookmarks;\n  }\n\n  saveBookmark(domainData: DomainMetadataModel) {\n    const bookmarksRaw = this.loadBookmarksAndFeed().reduce(\n      (accumulator, value) => {\n        return { ...accumulator, [value.labelName]: value };\n      },\n      {}\n    );\n    const bKeys = Object.keys(bookmarksRaw);\n    const bookmarks = [...new Set(bKeys)].map((k) => bookmarksRaw[k]);\n    bookmarks.push(domainData);\n    localStorage.setItem('canvas-bookmarks', JSON.stringify(bookmarks));\n    return bookmarks;\n  }\n\n  removeAllBookmarks() {\n    localStorage.setItem('canvas-bookmarks', JSON.stringify([]));\n    return [];\n  }\n  removeBookmark(bookmarks: DomainMetadataModel[], domainName: string) {\n    const bookmarksUpdated = [];\n    bookmarks.filter((d) => {\n      if (d.labelName !== domainName) {\n        bookmarksUpdated.push(d);\n      }\n    });\n    localStorage.setItem('canvas-bookmarks', JSON.stringify(bookmarks));\n    return bookmarks;\n  }\n\n  clearBookmarks() {\n    localStorage.setItem('canvas-bookmarks', JSON.stringify([]));\n  }\n\n  isDomainBookmarked(bookmarks: DomainMetadataModel[], domainName: string) {\n    for (const d of bookmarks) {\n      if (d.labelName === domainName) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport {\n  dataNodeEndpoints,\n  generalConfigurations,\n} from 'src/app/configurations';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoriesDataService {\n  constructor(protected httpClient: HttpClient) {}\n\n  pingCategoriesDataProviders(endPoints: string[]) {\n    let useEnpoints = endPoints;\n    if (environment.development === true) {\n      useEnpoints = [generalConfigurations.categoiesDataSourceFallback];\n    }\n    const endPointRequests = useEnpoints.map((e) => {\n      return this.httpClient.get([e, dataNodeEndpoints.ping].join('/')).pipe(\n        switchMap((r) => of({ provider: e, result: r })),\n        catchError((e) => {\n          return of(false);\n        })\n      );\n    });\n    return forkJoin(endPointRequests);\n  }\n\n  getCategoriesIpfsMetadata(endPoint: string, category: string) {\n    if (generalConfigurations.categoriesUseFallback === true) {\n      return this.httpClient\n        .get('assets/categories/' + category + '-meta.json')\n        .pipe(\n          switchMap((r) => {\n            return of(r);\n          }),\n          catchError((e) => {\n            return of(false);\n          })\n        );\n    }\n    return this.httpClient.get(endPoint).pipe(\n      switchMap((r) => of(r)),\n      catchError((e) => {\n        return of(false);\n      })\n    );\n  }\n\n  getCategoriesRootVolumeData(endPoint: string) {\n    let useEnpoint = endPoint;\n    if (environment.development === true) {\n      useEnpoint = generalConfigurations.categoiesDataSourceFallback;\n    }\n    return this.httpClient\n      .get(\n        [\n          useEnpoint,\n          dataNodeEndpoints.checkout,\n          'root_volume',\n          'root_volume',\n        ].join('/')\n      )\n      .pipe(\n        switchMap((r) => of(r)),\n        catchError((e) => {\n          return of(false);\n        })\n      );\n  }\n\n  getCategoriesData(endPoint: string, collection: string) {\n    let useEnpoint = endPoint;\n    if (environment.development === true) {\n      useEnpoint = generalConfigurations.categoiesDataSourceFallback;\n    }\n    return this.httpClient\n      .get(\n        [\n          useEnpoint,\n          dataNodeEndpoints.checkout,\n          'collections',\n          collection + '.' + generalConfigurations.categoriesDomain,\n        ].join('/')\n      )\n      .pipe(\n        switchMap((r) => of(r)),\n        catchError((e) => {\n          return of(false);\n        })\n      );\n  }\n\n  getCategoriesRootFallbackData() {\n    return this.httpClient.get('assets/categories/root.json').pipe(\n      switchMap((r) => of(r)),\n      catchError((e) => {\n        return of(false);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Contract } from 'ethers';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContractService {\n  constructor() {}\n\n  getGasLimitEstimation(\n    provider = null,\n    method: string,\n    params: any,\n    payer: string,\n    contractAddress: string = null,\n    contractABI: any = null,\n    providerFunction = false,\n    value: string = '0x0'\n  ) {\n    let c;\n    if (\n      providerFunction === false &&\n      (contractAddress === null || contractABI === null)\n    ) {\n      return of(false);\n    }\n    if (providerFunction === false) {\n      c = new Contract(contractAddress, contractABI, provider);\n    }\n    return new Observable((observer) => {\n      if (providerFunction === false) {\n        c.estimateGas[method](...params, {\n          value,\n          from: payer,\n        })\n          .then((r) => {\n            if (r === null) {\n              observer.next(false);\n              observer.complete();\n            }\n            observer.next(r);\n            observer.complete();\n          })\n          .catch((e) => {\n            observer.next(false);\n            observer.complete();\n          });\n      } else {\n        provider\n          .estimateGas(params)\n          .then((r) => {\n            if (r === null) {\n              observer.next(false);\n              observer.complete();\n            }\n            observer.next(r);\n            observer.complete();\n          })\n          .catch((e) => {\n            observer.next(false);\n            observer.complete();\n          });\n      }\n    });\n  }\n}\n","import * as ethers from 'ethers';\nimport { BigNumber } from 'ethers';\nimport { environment } from '../../../environments/environment';\nimport { Injectable } from '@angular/core';\nimport {\n  acceptedCurrenciesMainnet,\n  acceptedCurrenciesTestnet,\n  ContractAddressesMainnetEnum,\n  ContractAddressesTestnetEnum,\n  SupportedCurrenciesEnum,\n} from '../../configurations/contracts';\nimport { AcceptedCurrencyModel } from '../../models/currencies';\nimport { PaymentTypesEnum } from '../../models/states/payment-interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrencyService {\n  constructor() {}\n  /**\n   * Environment production: mainnet contracts are used.\n   * Environment development (true): devnet contracts are used.\n   * Environment development (false): testnet (ropsten) contracts are used.\n   * @param currency\n   */\n  deriveCurrencyAddressFromName(currency: string) {\n    let currencies;\n    if (environment.production === true) {\n      currencies = Object(ContractAddressesMainnetEnum);\n    } else {\n      currencies = Object(ContractAddressesTestnetEnum);\n    }\n    return currencies[currency.toUpperCase()];\n  }\n\n  deriveCurrencyDataFromCurrencyName(currency: string) {\n    let currencies;\n    if (environment.production === true) {\n      currencies = Object(acceptedCurrenciesMainnet) as AcceptedCurrencyModel[];\n    } else {\n      currencies = Object(acceptedCurrenciesTestnet) as AcceptedCurrencyModel[];\n    }\n    let currencySearched: any = false;\n    for (const c of currencies) {\n      if (c.currency === currency) {\n        currencySearched = c as AcceptedCurrencyModel;\n      }\n    }\n    return currencySearched;\n  }\n\n  convertAmountToDecimal(amountInString: string, currency: string) {\n    const paymentCurrency = this.deriveCurrencyDataFromCurrencyName(currency);\n    if (paymentCurrency === false) {\n      return false;\n    }\n    const currencyData = paymentCurrency as AcceptedCurrencyModel;\n    const bnAmount = BigNumber.from(amountInString);\n    return ethers.utils.formatUnits(bnAmount, currencyData.decimals);\n  }\n\n  convertAmountToToken(amountInString: string, currency: string) {\n    const paymentCurrency = this.deriveCurrencyDataFromCurrencyName(currency);\n    if (paymentCurrency === false) {\n      return false;\n    }\n    const currencyData = paymentCurrency as AcceptedCurrencyModel;\n    return ethers.utils.parseUnits(amountInString, currencyData.decimals);\n  }\n\n  getSupportedCurrencies() {\n    let currencies;\n    if (environment.production === true) {\n      currencies = Object(acceptedCurrenciesMainnet) as AcceptedCurrencyModel[];\n    } else {\n      currencies = Object(acceptedCurrenciesTestnet) as AcceptedCurrencyModel[];\n    }\n    return currencies as AcceptedCurrencyModel[];\n  }\n\n  determineDefaultCurrencyForPayment(\n    searchType: PaymentTypesEnum,\n    chooseSecondDefault = false\n  ) {\n    let secondDefaultToBeChosen = false;\n    for (const c of Object.keys(SupportedCurrenciesEnum)) {\n      const currencyData = this.deriveCurrencyDataFromCurrencyName(\n        c\n      ) as AcceptedCurrencyModel;\n      if (searchType === PaymentTypesEnum.PAY) {\n        if (chooseSecondDefault === true && secondDefaultToBeChosen === false) {\n          secondDefaultToBeChosen = true;\n        } else {\n          return c;\n        }\n      }\n    }\n  }\n}\n","export const chainlinkV3ABI = [\n  {\n    inputs: [],\n    name: 'decimals',\n    outputs: [\n      {\n        internalType: 'uint8',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'description',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint80',\n        name: '_roundId',\n        type: 'uint80',\n      },\n    ],\n    name: 'getRoundData',\n    outputs: [\n      {\n        internalType: 'uint80',\n        name: 'roundId',\n        type: 'uint80',\n      },\n      {\n        internalType: 'int256',\n        name: 'answer',\n        type: 'int256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'startedAt',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'updatedAt',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint80',\n        name: 'answeredInRound',\n        type: 'uint80',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'latestRoundData',\n    outputs: [\n      {\n        internalType: 'uint80',\n        name: 'roundId',\n        type: 'uint80',\n      },\n      {\n        internalType: 'int256',\n        name: 'answer',\n        type: 'int256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'startedAt',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'updatedAt',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint80',\n        name: 'answeredInRound',\n        type: 'uint80',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'version',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","import { Injectable } from '@angular/core';\nimport { Contract } from 'ethers';\nimport { from, timer } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport {\n  contractChainlinkMainnet,\n  contractChainlinkTestnet,\n  generalConfigurations,\n} from 'src/app/configurations';\nimport { chainlinkV3ABI } from 'src/app/configurations/contracts/chainlink-aggregator-v3.abi';\nimport { PaymentFacadeService } from 'src/app/store/facades';\nimport { environment } from 'src/environments/environment';\n\nconst globalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrencyExchangeService {\n  constructor(protected paymentFacade: PaymentFacadeService) {}\n\n  getPrices() {\n    let processorLocked = false;\n    return timer(0, generalConfigurations.timeToUpdateEthUSDRate).pipe(\n      filter((i) => {\n        if (processorLocked === true) {\n          return false;\n        }\n        return true;\n      }),\n      switchMap((i) => {\n        processorLocked = true;\n        return from(this.chainlink.latestRoundData()).pipe(\n          map((normalizedPrices) => {\n            if (normalizedPrices === false || normalizedPrices === null) {\n              return false;\n            }\n            this.paymentFacade.setEthUsdRate(\n              ((normalizedPrices as any).answer.toNumber() / 10 ** 8).toString()\n            );\n            processorLocked = false;\n          })\n        );\n      })\n    );\n  }\n\n  get chainlinkAddress() {\n    if (environment.test === true) {\n      return contractChainlinkTestnet;\n    }\n    return contractChainlinkMainnet;\n  }\n\n  get chainlink() {\n    const contract = new Contract(\n      this.chainlinkAddress,\n      chainlinkV3ABI,\n      globalAny.canvasProvider\n    );\n    return contract;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MiscUtilsService } from '../misc-utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DownloadService {\n  constructor(protected mistUtils: MiscUtilsService) {}\n\n  download(meta: string, dataRaw: any, fileName = null) {\n    const data = new TextEncoder().encode(dataRaw);\n    const blob = new Blob(['\\uFEFF', data], {\n      type: meta,\n    });\n    let fileURL;\n    if (fileName === null) {\n      fileURL = URL.createObjectURL(blob);\n    } else {\n      fileURL = meta;\n    }\n    window.open(fileURL, '_target');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BigNumber, Contract } from 'ethers';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport {\n  ENSContracts,\n  ENSTokenNFTABI,\n  generalConfigurations,\n  marketplaceMainnet,\n  marketplaceTestnet,\n} from 'src/app/configurations';\nimport { ENSMarketplaceMainnetABI } from 'src/app/configurations/contracts/ens-marketplace-abi-mainnet.model';\nimport { ENSMarketplaceTestnetABI } from 'src/app/configurations/contracts/ens-marketplace-abi-testnet.model';\nimport { environment } from 'src/environments/environment';\nimport { ContractService } from '../contract';\nimport { EnsService } from '../ens/ens.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EnsMarketplaceService {\n  constructor(\n    protected contractService: ContractService,\n    protected ensService: EnsService\n  ) {}\n\n  checkApproval(tokenId: string, provider) {\n    const contract = this.getENSTokenContract(provider);\n    return from(contract.ownerOf(tokenId)).pipe(\n      switchMap((r) => {\n        if (r === null) {\n          throw null;\n        }\n        return contract.isApprovedForAll(r, this.marketplaceContractAddress);\n      }),\n      switchMap((r) => {\n        if (r === null) {\n          throw null;\n        }\n        return of(r);\n      }),\n      catchError((e) => {\n        return of(null);\n      })\n    );\n  }\n\n  transfer(domainNames: string[], to: string, payer: string, provider: any) {\n    const contract = this.getENSMarketplaceContract(provider);\n    const dataMethod = 'transferDomains';\n    const dataParams = [to, domainNames];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          this.marketplaceContractAddress,\n          this.marketplaceContractABI,\n          false\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = r as BigNumber;\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  approve(\n    operator: string,\n    payer: string,\n    approvalStatus: boolean,\n    provider: any\n  ) {\n    const contract = this.getENSTokenContract(provider);\n    const dataMethod = 'setApprovalForAll';\n    const dataParams = [operator, approvalStatus];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          ENSContracts.token,\n          ENSTokenNFTABI,\n          false\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = r as BigNumber;\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  renew(\n    domainNames: string[],\n    priceRanges: string[],\n    duration: BigNumber,\n    payer: string,\n    totalCost: string,\n    provider: any\n  ) {\n    const contract = this.getENSMarketplaceContract(provider);\n    const namesLengths = [];\n    for (const c of domainNames) {\n      namesLengths.push(this.ensService.getNameLength(c));\n    }\n    const dataMethod = 'renewDomains';\n    const dataParams = [domainNames, namesLengths, priceRanges, duration];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          this.marketplaceContractAddress,\n          this.marketplaceContractABI,\n          false,\n          totalCost\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = (r as BigNumber).add(generalConfigurations.gasLimitBuffer);\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getENSTokenContract(provider) {\n    const contract = new Contract(ENSContracts.token, ENSTokenNFTABI, provider);\n    return contract;\n  }\n\n  getENSMarketplaceContract(provider) {\n    const contract = new Contract(\n      this.marketplaceContractAddress,\n      this.marketplaceContractABI,\n      provider\n    );\n    return contract;\n  }\n\n  get marketplaceContractAddress() {\n    if (environment.test === true) {\n      return marketplaceTestnet;\n    }\n    return marketplaceMainnet;\n  }\n\n  get marketplaceContractABI() {\n    if (environment.test === true) {\n      return ENSMarketplaceTestnetABI;\n    }\n    return ENSMarketplaceMainnetABI;\n  }\n}\n","import { Injectable, Provider } from '@angular/core';\nimport request, { gql } from 'graphql-request';\nimport { Observable } from 'rxjs';\nimport { ens_normalize, ens_beautify } from '@adraffy/ens-normalize';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { invalidChars } from 'src/app/configurations';\n\nconst REGISTER_GAS = 175000;\nconst REGISTER_CONFIG_GAS = 300000;\nconst COMMIT_GAS = 25000;\nconst COMMIT_SINGLE_GAS = 55000;\nconst RENEW_GAS = 150000;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EnsService {\n  constructor(private http: HttpClient) {}\n\n  getDomainMetadata(domainHash: string) {\n    const url = environment.networks[environment.defaultChain].ensMetadataAPI;\n    return this.http.get(url + domainHash);\n  }\n\n  getDomainContentHash(provider: Provider, ethName: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .getResolver(ethName)\n        .then((resolver) => {\n          return resolver.getContentHash();\n        })\n        .then((r) => {\n          let web2Link = 'https://';\n          if (r.indexOf('ipfs:') > -1) {\n            web2Link += 'ipfs.io/ipfs/' + r.replace('ipfs://', '');\n          } else if (r.indexOf('ipns:') > -1) {\n            web2Link += 'gateway.ipfs.io/ipns/' + r.replace('ipns://', '');\n          }\n          observer.next(web2Link);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  findDomains(domains: string[]) {\n    const url = environment.networks[environment.defaultChain].ensGraphQLAPI;\n    return new Observable((observer) => {\n      const query = gql`\n        query ($domainNames: [String!]) {\n          registrations(first: 1000, where: { labelName_in: $domainNames }) {\n            id\n            labelName\n            expiryDate\n            registrationDate\n            domain {\n              id\n              createdAt\n              labelName\n              labelhash\n              events {\n                id\n                blockNumber\n                transactionID\n              }\n            }\n          }\n        }\n      `;\n      request(url, query, { domainNames: domains }).then((data) => {\n        observer.next(data);\n        observer.complete();\n      });\n    });\n  }\n\n  getDomain(domain: string) {\n    const url = environment.networks[environment.defaultChain].ensGraphQLAPI;\n    return new Observable((observer) => {\n      const query = gql`\n        query ($domainName: String!) {\n          registrations(first: 1, where: { labelName: $domainName }) {\n            id\n            labelName\n            expiryDate\n            registrationDate\n            registrant {\n              id\n            }\n            domain {\n              id\n              createdAt\n              labelhash\n            }\n            events {\n              blockNumber\n              transactionID\n            }\n          }\n        }\n      `;\n      request(url, query, { domainName: domain }).then((data) => {\n        observer.next(data);\n        observer.complete();\n      });\n    });\n  }\n\n  downloadDomainsListNamesOnly(domains: DomainMetadataModel[]) {\n    let finalForm = '';\n    finalForm += domains\n      .map((d) => {\n        return d.labelName;\n      })\n      .join('\\n');\n    return finalForm;\n  }\n\n  downloadDomainsListCSV(domains: DomainMetadataModel[]) {\n    let finalForm = '';\n    finalForm +=\n      Object.keys(domains[0])\n        .filter((k) => {\n          if (k === 'events') {\n            return false;\n          }\n          return true;\n        })\n        .join(',') + '\\n';\n    finalForm += domains\n      .map((d) => {\n        const k = Object.keys(d);\n        return k\n          .map((kk) => {\n            return d[kk];\n          })\n          .join(',');\n      })\n      .join('\\n');\n    return finalForm;\n  }\n\n  calculateExpiry(expiryDate: string) {\n    const eDate = parseInt(expiryDate, 10) * 1000;\n    const now = new Date().getTime();\n    const remainingDate = now - eDate;\n    return remainingDate;\n  }\n\n  calculateGracePeriodPercentage(expiryDate: number) {\n    const now = new Date().getTime();\n    const gracePeriod = 7889400000;\n    const timeUtilGraceEnds = expiryDate * 1000 + gracePeriod;\n    const gracePeriodExact = timeUtilGraceEnds - now;\n    const gInPercent = gracePeriod / 100;\n    return gracePeriodExact / gInPercent;\n  }\n\n  isDomainNameNotValid(\n    name: string,\n    prefixedOrSuffixed = false,\n    prefixedAndSuffixed = false,\n    minLengthOverride = 3,\n    skipNormalisation = false\n  ) {\n    if (skipNormalisation === true) {\n      return true;\n    }\n    let minLength = minLengthOverride;\n    if (prefixedOrSuffixed === true) {\n      minLength = 2;\n    }\n    if (prefixedAndSuffixed === true) {\n      minLength = 1;\n    }\n    try {\n      if (name === '' || this.getNameLength(name) < minLength) {\n        return false;\n      }\n      const invalidCharsForcedFilter = invalidChars.join('');\n      const invalidCharDetect = [...name].filter((c) => {\n        if (invalidCharsForcedFilter.includes(c) === true) {\n          return true;\n        }\n        return false;\n      });\n      if (invalidCharDetect.length > 0) {\n        throw false;\n      }\n      const normed = ens_normalize(name);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  performNormalisation(name: string) {\n    return ens_normalize(name);\n  }\n\n  prettify(name: string) {\n    return ens_beautify(name);\n  }\n\n  calculateDomainsPrice(\n    name: string,\n    ethToUsdRate: string,\n    durationInYears: number = 1\n  ) {\n    const ethUsdRate = parseInt(ethToUsdRate, 10);\n    let nameCost = 5;\n    const count = this.getNameLength(name);\n    switch (count) {\n      case 3:\n        {\n          nameCost = 640;\n        }\n        break;\n      case 4:\n        {\n          nameCost = 160;\n        }\n        break;\n    }\n    return parseFloat((nameCost / ethUsdRate).toFixed(4)) * durationInYears;\n  }\n\n  getNameLength(name: string) {\n    const count = [...ens_normalize(name)].length;\n    return count;\n  }\n\n  get commitSingleGasCost() {\n    return COMMIT_SINGLE_GAS;\n  }\n\n  get commitGasCost() {\n    return COMMIT_GAS;\n  }\n\n  get registerGasCost() {\n    return REGISTER_GAS;\n  }\n\n  get registerWithConfigGasCost() {\n    return REGISTER_CONFIG_GAS;\n  }\n\n  get renewGasCost() {\n    return RENEW_GAS;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FormValidationService {\n  constructor() {}\n\n  markFormGroupTouched(formGroup: FormGroup) {\n    (Object as any).values(formGroup.controls).forEach((control) => {\n      control.markAsTouched();\n\n      if (control.controls) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Resolve,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { routerPaths } from 'src/app/models/router-paths.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PathResolveService implements Resolve<string | null> {\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): string | null {\n    const typoPath = state.url.replace('/', '');\n    const threshold = this.getThreshold(typoPath);\n    const dictionary = Object.values(routerPaths).filter(\n      (path) => Math.abs(path.length - typoPath.length) < threshold\n    ) as string[];\n    if (!dictionary.length) {\n      return null;\n    }\n    this.sortByDistances(typoPath, dictionary);\n    return `/${dictionary[0]}`;\n  }\n\n  getThreshold(path: string): number {\n    if (path.length < 5) {\n      return 3;\n    }\n    return 5;\n  }\n\n  sortByDistances(typoPath: string, dictionary: string[]) {\n    const pathsDistance = {} as { [name: string]: number };\n    dictionary.sort((a, b) => {\n      if (!(a in pathsDistance)) {\n        pathsDistance[a] = this.levenshtein(a, typoPath);\n      }\n      if (!(b in pathsDistance)) {\n        pathsDistance[b] = this.levenshtein(b, typoPath);\n      }\n\n      return pathsDistance[a] - pathsDistance[b];\n    });\n  }\n\n  levenshtein(a: string, b: string): number {\n    if (a.length === 0) {\n      return b.length;\n    }\n    if (b.length === 0) {\n      return a.length;\n    }\n    const matrix = [];\n    for (let i = 0; i <= b.length; i++) {\n      matrix[i] = [i];\n    }\n    for (let j = 0; j <= a.length; j++) {\n      matrix[0][j] = j;\n    }\n    for (let i = 1; i <= b.length; i++) {\n      for (let j = 1; j <= a.length; j++) {\n        if (b.charAt(i - 1) === a.charAt(j - 1)) {\n          matrix[i][j] = matrix[i - 1][j - 1];\n        } else {\n          matrix[i][j] = Math.min(\n            matrix[i - 1][j - 1] + 1,\n            matrix[i][j - 1] + 1,\n            matrix[i - 1][j] + 1\n          );\n        }\n      }\n    }\n    return matrix[b.length][a.length];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport TrezorConnect from 'trezor-connect';\nimport { MiscUtilsService } from '../misc-utils';\nimport { PagesFacadeService } from '../../store/facades';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { BigNumber, utils } from 'ethers';\nimport { generalConfigurations } from 'src/app/configurations';\n\ninterface TrezorSignedTransactionModel {\n  id: number;\n  success: boolean;\n  payload: {\n    v: string;\n    r: string;\n    s: string;\n  };\n}\n\ninterface TrezorGetAccountInfoResultModel {\n  id: number;\n  success: boolean;\n  payload: {\n    availableBalance: string;\n    balance: string;\n    descriptor: string;\n    empty: boolean;\n    history: {\n      tokens: string[];\n      total: number;\n      transactions: any[];\n      unconfirmed: number;\n    };\n    misc: {\n      nonce: string;\n    };\n  };\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrezorService {\n  constructor(\n    public miscUtils: MiscUtilsService,\n    public pagesFacade: PagesFacadeService\n  ) {}\n\n  connect(time: number) {\n    return new Observable((observer) => {\n      TrezorConnect.init({\n        lazyLoad: false,\n        webusb: true,\n        popup: true,\n        manifest: generalConfigurations.trezorManifest,\n      })\n        .then((r) => {\n          return TrezorConnect.getAccountInfo({\n            path: \"m/44'/60'/0'/0/0\",\n            coin: 'eth',\n          });\n        })\n        .then((r) => {\n          const result = r as any as TrezorGetAccountInfoResultModel;\n          if (r === undefined) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(result.payload.descriptor);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n          return;\n        });\n    });\n  }\n\n  signPayment(payload: any) {\n    return new Observable((observer) => {\n      TrezorConnect.getAccountInfo({\n        path: \"m/44'/60'/0'/0/0\",\n        coin: 'eth',\n      })\n        .then((r) => {\n          const accountInfo = r as any as TrezorGetAccountInfoResultModel;\n          return TrezorConnect.ethereumSignTransaction({\n            path: \"m/44'/60'/0'/0/0\",\n            transaction: {\n              ...payload,\n              from: accountInfo.payload.descriptor,\n              nonce: BigNumber.from(payload.nonce).toHexString(),\n            },\n          });\n        })\n        .then((r) => {\n          const signed = r as any as TrezorSignedTransactionModel;\n          if (\n            signed === null ||\n            signed.success === false ||\n            signed === undefined\n          ) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(\n            utils.serializeTransaction(payload, {\n              v: BigNumber.from(signed.payload.v).toNumber(),\n              r: signed.payload.r,\n              s: signed.payload.s,\n            })\n          );\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getWeb3Provider() {\n    return new Observable((observer) => {\n      detectEthereumProvider()\n        .then((p) => {\n          observer.next(p);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(null);\n          observer.complete();\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { icons, imageToPreload } from 'src/app/configurations';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconRegistryService {\n  constructor() {}\n\n  injectCustomIcons() {\n    return icons;\n  }\n\n  perloadCustomIcons() {\n    const ic = this.injectCustomIcons();\n    for (const i of Object.keys(ic).map((ici) => ic[ici])) {\n      const ii = new Image();\n      ii.src = i;\n    }\n    const icc = imageToPreload;\n    for (const i of Object.keys(ic).map((ici) => ic[ici])) {\n      const ii = new Image();\n      ii.src = i;\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { MiscUtilsService } from \"../../misc-utils\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PaymentEffectsService {\n  constructor(protected miscUtils: MiscUtilsService) {}\n\n  recordLastConnectionAddress(connectionAddress: string) {\n    localStorage.setItem(\"ps-last-connection\", connectionAddress);\n  }\n\n  getLastConnectionAddress() {\n    const lConnectionAddres = localStorage.getItem(\"ps-last-connection\");\n    if (\n      lConnectionAddres === null ||\n      lConnectionAddres === \"\" ||\n      lConnectionAddres === undefined\n    ) {\n      return false;\n    }\n    return lConnectionAddres;\n  }\n}\n","import { Router } from '@angular/router';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { UserFacadeService } from '../../store/facades';\n\n@Injectable({ providedIn: 'root' })\nexport class Intercept implements HttpInterceptor {\n  constructor(router: Router, public userFacade: UserFacadeService) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(req);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MiscUtilsService } from '../misc-utils';\nimport TransportUSB from '@ledgerhq/hw-transport-webusb';\nimport LedgerEth from '@ledgerhq/hw-app-eth';\nimport { PagesFacadeService, UserFacadeService } from '../../store/facades';\nimport detectEthereumProvider from '@metamask/detect-provider';\n\ninterface LedgerSignResultModel {\n  v: number;\n  r: string;\n  s: string;\n}\n\ninterface LedgerGetAddressResultModel {\n  address: string;\n  chainCode: string;\n  publicKey: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LedgerService {\n  transport: any;\n  ledger: LedgerEth;\n\n  constructor(\n    public miscUtils: MiscUtilsService,\n    public pagesFacade: PagesFacadeService,\n    protected userFacadeService: UserFacadeService\n  ) {}\n\n  connect(time: number) {\n    return new Observable((observer) => {\n      this.ledger\n        .getAddress(\"m/44'/60'/0'/0/0\")\n        .then((r) => {\n          const result = r as any as LedgerGetAddressResultModel;\n          observer.next(result.address);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n          return;\n        });\n    });\n  }\n\n  createTransport() {\n    return new Observable((observer) => {\n      TransportUSB.create().then((r: any) => {\n        if (r === false) {\n          observer.next(false);\n          observer.complete();\n          return;\n        }\n        this.transport = r;\n        this.ledger = new LedgerEth(r);\n        observer.next(this.ledger);\n        observer.complete();\n        return;\n      });\n    });\n  }\n\n  signPayment(payload: string) {\n    return new Observable((observer) => {\n      this.ledger\n        .signTransaction(\"m/44'/60'/0'/0/0\", payload.substring(2))\n        .then((r) => {\n          if (r === null || r === undefined) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          const signed = r as any as LedgerSignResultModel;\n          observer.next(signed);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getWeb3Provider() {\n    return new Observable((observer) => {\n      detectEthereumProvider()\n        .then((p) => {\n          observer.next(p);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(null);\n          observer.complete();\n        });\n    });\n  }\n}\n","export const LNRABI = [\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'symbol',\n        type: 'bytes32',\n      },\n    ],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","import { Injectable } from '@angular/core';\nimport { Contract, ethers } from 'ethers';\nimport { forkJoin, from, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { LNRContracts } from 'src/app/configurations';\nimport { LNRABI } from 'src/app/configurations/contracts/lnr.abi';\nimport { payNoMarketAddress } from 'src/app/models';\nimport { DomainMetadataModel } from 'src/app/models/domains';\n\nconst gloablAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LnrService {\n  constructor() {}\n\n  findDomains(domains: string[]) {\n    const provider = gloablAny.canvasProvider;\n    const lnr = new Contract(LNRContracts.registrar, LNRABI, provider);\n    const nameSearch = domains.map((d) => {\n      const nameBytes = ethers.utils.formatBytes32String(d);\n      return from(lnr.owner(nameBytes)).pipe(\n        switchMap((r) => {\n          if (r === false || r === payNoMarketAddress) {\n            return of(false);\n          }\n          return of({\n            id: nameBytes,\n            labelName: d,\n            labelHash: nameBytes,\n            expiry: Number.MAX_SAFE_INTEGER.toString(),\n            isNotAvailable: r !== payNoMarketAddress,\n            gracePeriodPercent: 0,\n            registrationDate: null,\n            owner: r === payNoMarketAddress ? payNoMarketAddress : r,\n            createdAt: null,\n          } as DomainMetadataModel);\n        })\n      );\n    });\n    return forkJoin(nameSearch);\n  }\n}\n","import * as Ethers from 'ethers';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { MiscUtilsService } from '../misc-utils';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { PagesFacadeService, UserFacadeService } from '../../store/facades';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { UserModel } from 'src/app/models/states/user-interfaces';\n\ndeclare const ethereum;\n@Injectable({\n  providedIn: 'root',\n})\nexport class MetamaskService {\n  constructor(\n    public miscUtils: MiscUtilsService,\n    public userFacadeService: UserFacadeService,\n    public pagesFacade: PagesFacadeService\n  ) {}\n\n  connect(time: number) {\n    return this.getAccounts().pipe(\n      switchMap((a) => {\n        const accounts = a as any;\n        if (\n          accounts === undefined ||\n          accounts === null ||\n          accounts.length <= 0\n        ) {\n          return of(false);\n        }\n        return of(a[0]);\n      }),\n      catchError((e) => {\n        return of(false);\n      })\n    );\n  }\n\n  chainChangedDetectionDaemon() {\n    ethereum.on('chainChanged', (chainId) => {\n      this.pagesFacade.setNetworkChainCode(parseInt(chainId, 16));\n    });\n    ethereum.on('accountsChanged', (accounts) => {\n      this.userFacadeService.removeUser();\n    });\n  }\n\n  getChainId() {\n    return ethereum.networkVersion;\n  }\n\n  getAccounts() {\n    return new Observable((observer) => {\n      ethereum\n        .request({ method: 'eth_requestAccounts' })\n        .then((accounts) => {\n          if (\n            accounts === null ||\n            accounts.length <= 0 ||\n            accounts === undefined\n          ) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(\n            accounts.map((a) => {\n              return Ethers.utils.getAddress(a);\n            })\n          );\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  signPayment(payloadHash: any) {\n    return new Observable((observer) => {\n      detectEthereumProvider()\n        .then((p: any) => {\n          return p.request({\n            method: 'eth_sendTransaction',\n            params: payloadHash,\n          });\n        })\n        .then((tx) => {\n          if (tx === null || tx.length <= 0 || tx === undefined) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(tx);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getWeb3Provider() {\n    return new Observable((observer) => {\n      detectEthereumProvider()\n        .then((p) => {\n          observer.next(p);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(null);\n          observer.complete();\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ethers } from 'ethers';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MiscUtilsService {\n  constructor() {}\n\n  roundUp(num: number, roundTo: number) {\n    return Math.round(num / roundTo) * roundTo;\n  }\n\n  testJSON(json) {\n    const str = json.toString();\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  testUrl() {\n    const expression =\n      /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi;\n    const test = new RegExp(expression);\n    return test;\n  }\n\n  checksumEtheruemAddress(address: string) {\n    try {\n      return (\n        ethers.utils.getAddress(address).toLowerCase() === address.toLowerCase()\n      );\n    } catch (e) {\n      return false;\n    }\n  }\n\n  commafied(num: string) {\n    if (num.toString().indexOf('.') <= -1) {\n      return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    } else {\n      const parts = num.toString().split('.');\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n      return parts.join('.');\n    }\n  }\n\n  prependToArray(value: any, array: any[]) {\n    var newArray = array.slice();\n    newArray.unshift(value);\n    return newArray;\n  }\n\n  toHex(str: string) {\n    const rb = new TextEncoder().encode(str);\n    let r = '';\n    for (const b of rb) {\n      r += ('0' + b.toString(16)).slice(-2);\n    }\n    return r;\n  }\n\n  testNumeric() {\n    const reg = new RegExp(/^(0|[1-9]\\d*)(\\.\\d+)?$/);\n    return reg;\n  }\n\n  testAlphaNumeric() {\n    const reg = new RegExp('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$');\n    return reg;\n  }\n\n  testAlpha() {\n    const reg = new RegExp('^[A-Za-z]+$');\n    return reg;\n  }\n\n  testEmoji() {\n    const reg = new RegExp(/\\p{Extended_Pictographic}/u);\n    return reg;\n  }\n\n  testIntNumeric() {\n    const reg = new RegExp('^[0-9]+$');\n    return reg;\n  }\n\n  parseXml(xml) {\n    var dom = null;\n    try {\n      dom = new DOMParser().parseFromString(xml, 'text/xml');\n    } catch (e) {\n      dom = null;\n    }\n    return dom;\n  }\n}\n","export enum PaymentStoreErrorsEnum {\n  UNKOWN = \"UNKNOWN_PAYMENT\",\n  NO_NETWORK_CONNECTION = \"NO_NETWORK_CONNECTION\",\n  QRSCANNER_CAMERA_NO_PERMISSION = \"QRSCANNER_CAMERA_NO_PERMISSION\",\n  QRSCANNED_RESULT_ERROR = \"QRSCANNED_RESULT_ERROR\",\n  QRSCAN_CANCELLED = \"QRSCAN_CANCELLED\",\n  PIN_INVALID = \"PIN_INVALID\",\n  SIGNING_PAYMENT_ERROR = \"SIGNING_PAYMENT_ERROR\",\n  QRSCANNED_WALLET_ADDRESS_INVALID = \"QRSCANNED_WALLET_ADDRESS_INVALID\",\n  PAYMENT_RELAY_FAILED = \"PAYMENT_RELAY_FAILED\",\n  PAYMENT_FAILED_AMOUNT_ZERO = \"PAYMENT_FAILED_AMOUNT_ZERO\",\n  PAYMENT_FAILED_INSUFFICIENT_FUNDS = \"PAYMENT_FAILED_INSUFFICIENT_FUNDS\",\n  PAYMENT_FAILED_EXPIRED = \"PAYMENT_FAILED_EXPIRED\",\n  PAYMENT_FAILED_TOKEN_NOT_SUPPORTED = \"PAYMENT_FAILED_TOKEN_NOT_SUPPORTED\",\n  PAYMENT_FAILED_UNKNOWN = \"PAYMENT_FAILED_UNKNOWN\",\n  PAYMENT_FAILED_SIGNATURE_INVALID = \"PAYMENT_FAILED_SIGNATURE_INVALID\",\n  PAYMENT_FAILED_PAYEE_ADDRESS_INVALID = \"PAYMENT_FAILED_PAYEE_ADDRESS_INVALID\",\n  PAYMENT_FAILED_WITHDRAW_FAILURE = \"PAYMENT_FAILED_WITHDRAW_FAILURE\",\n  PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE = \"PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE\",\n  PAYMENT_FAILED_WALLET_RECOVERY_FAILURE = \"PAYMENT_FAILED_WALLET_RECOVERY_FAILURE\",\n  PAYMENT_FAILED_EXCHANGE_CURRENCIES_DUPLICATE = \"PAYMENT_FAILED_EXCHANGE_CURRENCIES_DUPLICATE\",\n  PAYMENT_FAILED_INSUFFICIENT_LIQUIDITY = \"PAYMENT_FAILED_INSUFFICIENT_LIQUIDITY\",\n  PAYMENT_FAILED_NONCE_COLLUSION = \"PAYMENT_FAILED_NONCE_COLLUSION\",\n  PAYMENT_FAILED_SERVER_BUSY = \"PAYMENT_FAILED_SERVER_BUSY\",\n  PAYMENT_FAILED_MARKET_CLOSED = \"PAYMENT_FAILED_MARKET_CLOSED\",\n  PAYMENT_FAILED_WALLET_ID_TAKEN = \"PAYMENT_FAILED_WALLET_ID_TAKEN\",\n  PAYMENT_FAILED_MARKET_NOT_SUPPORTED = \"PAYMENT_FAILED_MARKET_NOT_SUPPORTED\",\n  PAYMENT_FAILED_MULTISIG_QUORUM_FAILED = \"PAYMENT_FAILED_MULTISIG_QUORUM_FAILED\",\n  PAYMENT_FAILED_MULTISIG_STORAGE_FULL = \"PAYMENT_FAILED_MULTISIG_STORAGE_FULL\",\n  PAYMENT_FAILED_MULTISIG_NO_ENTRY = \"PAYMENT_FAILED_MULTISIG_NO_ENTRY\",\n  PAYMENT_HISTORY_REMOVAL_FAILED = \"PAYMENT_HISTORY_REMOVAL_FAILED\",\n  PAYMENT_FAILED_ALREADY_FULFILLED = \"PAYMENT_FAILED_ALREADY_FULFILLED\",\n}\n","import { Injectable } from \"@angular/core\";\nimport { PaymentStoreErrorsEnum } from \"../../models/error-enums\";\nimport { PaymentErrorCodes } from \"../../models/states/payment-interfaces\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PaymentErrorService {\n  constructor() {}\n\n  getPaymentErrorTranslatedTextKey(paymentError: PaymentStoreErrorsEnum) {\n    switch (paymentError) {\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_AMOUNT_ZERO:\n        {\n          return \"ERRORS.PAYMENT_FAILED_INSUFFICIENT_FUNDS\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_INSUFFICIENT_FUNDS:\n        {\n          return \"ERRORS.PAYMENT_FAILED_INSUFFICIENT_FUNDS\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_EXPIRED:\n        {\n          return \"ERRORS.PAYMENT_FAILED_EXPIRED\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_UNKNOWN:\n        {\n          return \"ERRORS.PAYMENT_FAILED_UNKNOWN\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_TOKEN_NOT_SUPPORTED:\n        {\n          return \"ERRORS.PAYMENT_FAILED_TOKEN_NOT_SUPPORTED\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE:\n        {\n          return \"ERRORS.PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_SIGNATURE_INVALID:\n        {\n          return \"ERRORS.PAYMENT_FAILED_SIGNATURE_INVALID\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_WITHDRAW_FAILURE:\n        {\n          return \"ERRORS.PAYMENT_FAILED_WITHDRAW_FAILURE\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_WALLET_ID_TAKEN:\n        {\n          return \"ERRORS.PAYMENT_FAILED_WALLET_ID_TAKEN\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_MULTISIG_QUORUM_FAILED:\n        {\n          return \"ERRORS.PAYMENT_FAILED_MULTISIG_QUORUM_FAILED\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_MULTISIG_STORAGE_FULL:\n        {\n          return \"ERRORS.PAYMENT_FAILED_MULTISIG_STORAGE_FULL\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_MULTISIG_NO_ENTRY:\n        {\n          return \"ERRORS.PAYMENT_FAILED_MULTISIG_NO_ENTRY\";\n        }\n        break;\n    }\n  }\n  getPaymentErrorEnumKey(errorCode: PaymentErrorCodes) {\n    switch (errorCode) {\n      case PaymentErrorCodes.AMOUNT_ZERO:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_AMOUNT_ZERO;\n        }\n        break;\n      case PaymentErrorCodes.INSUFFICIENT_FUNDS:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_INSUFFICIENT_FUNDS;\n        }\n        break;\n      case PaymentErrorCodes.PAYMENT_EXPIRED:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_EXPIRED;\n        }\n        break;\n      case PaymentErrorCodes.PAYMENT_FAILURE:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_UNKNOWN;\n        }\n        break;\n      case PaymentErrorCodes.TOKEN_NOT_SUPPORTED:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_TOKEN_NOT_SUPPORTED;\n        }\n        break;\n      case PaymentErrorCodes.SIGNATURE_INVALID:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE;\n        }\n        break;\n      case PaymentErrorCodes.MARKET_NOT_SUPPORTED:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_MARKET_NOT_SUPPORTED;\n        }\n        break;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PaymentModel } from 'src/app/models/states/payment-interfaces';\n\nconst globalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentStorageService {\n  constructor() {}\n\n  get networkName() {\n    return globalAny.networkName;\n  }\n\n  removePayments() {\n    localStorage.removeItem('canvas-payments-data');\n  }\n\n  savePayments(paymentData: PaymentModel[]) {\n    localStorage.setItem('canvas-payments-data', JSON.stringify(paymentData));\n  }\n\n  loadPayments() {\n    const l = localStorage.getItem('canvas-payments-data');\n    if (l === null || l === '[]' || l === '') {\n      return false;\n    }\n    return JSON.parse(l);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UserService } from '../user';\nimport { CurrencyService } from '../currency';\nimport { WalletService } from '../wallet';\nimport { PaymentModel } from 'src/app/models/states/payment-interfaces';\nimport { Observable } from 'rxjs';\nimport { BigNumber, ethers } from 'ethers';\nimport { Provider } from '@ethersproject/abstract-provider';\n\nconst globalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentService {\n  constructor(\n    protected userService: UserService,\n    protected currencyService: CurrencyService,\n    protected walletService: WalletService\n  ) {}\n\n  prepareTransaction(\n    chainId: number,\n    nonce: number,\n    toAddress: string,\n    gasLimit: string,\n    gasPrice: string,\n    payment: PaymentModel\n  ) {\n    const paymentLoad = {\n      chainId: chainId,\n      nonce: nonce,\n      to: toAddress,\n      gasPrice: gasPrice,\n      gas: gasLimit,\n      value: payment.paymentTotal,\n      data: payment.paymentAbstractBytesSlot,\n    };\n    return paymentLoad;\n  }\n\n  resolveAddressOfEth(provider: Provider, walletAddress: string) {\n    return new Observable((observer) => {\n      provider.resolveName(walletAddress).then((n) => {\n        observer.next(n);\n        observer.complete();\n      });\n    });\n  }\n\n  getWalletNonce(provider: Provider, walletAddress: string) {\n    return new Observable((observer) => {\n      provider.getTransactionCount(walletAddress).then((n) => {\n        observer.next(n);\n        observer.complete();\n      });\n    });\n  }\n\n  getGasPrice(provider: Provider) {\n    return new Observable((observer) => {\n      provider\n        .getFeeData()\n        .then((feeData) => {\n          observer.next(feeData);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gql, request } from 'graphql-request';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PoapService {\n  constructor() {}\n\n  getPoaps(walletAddress: string) {\n    const url = environment.networks[environment.defaultChain].poapGraphQLAPI;\n    return new Observable((observer) => {\n      const query = gql`\n        query ($id: String!) {\n          accounts(where: { id: $id }) {\n            id\n            tokens {\n              id\n              event {\n                id\n              }\n            }\n          }\n        }\n      `;\n      request(url, query, { id: walletAddress.toLowerCase() }).then((data) => {\n        observer.next(data);\n        observer.complete();\n      });\n    });\n  }\n\n  getPoapIds(poapResult: any) {\n    if ('accounts' in poapResult === false) {\n      return false;\n    }\n    if (poapResult.accounts.length <= 0) {\n      return false;\n    }\n    return poapResult.accounts[0].tokens.map((t) => {\n      return t.event.id;\n    });\n  }\n\n  getPoapTokens(poapResult: any) {\n    if ('accounts' in poapResult === false) {\n      return false;\n    }\n    if (poapResult.accounts.length <= 0) {\n      return false;\n    }\n    return poapResult.accounts[0].tokens;\n  }\n\n  getPoapTokensByPoapId(poapTokens: any, poapId) {\n    if (\n      poapTokens === false ||\n      poapTokens === undefined ||\n      poapTokens.length <= 0\n    ) {\n      return false;\n    }\n    return poapTokens\n      .filter((t) => {\n        return t.event.id === poapId;\n      })\n      .map((t) => {\n        return t.id;\n      });\n  }\n}\n","export const ENSBulkRegistrationContractMainnetABI = [\n  {\n    inputs: [],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'errorInfo',\n        type: 'bytes',\n      },\n    ],\n    name: 'error',\n    type: 'event',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'receive',\n    payable: true,\n  },\n  {\n    inputs: [],\n    name: 'recoverStuckETH',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'string',\n            name: 'name',\n            type: 'string',\n          },\n          {\n            internalType: 'address',\n            name: 'owner',\n            type: 'address',\n          },\n          {\n            internalType: 'uint256',\n            name: 'duration',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'secret',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'address',\n            name: 'resolver',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes[]',\n            name: 'data',\n            type: 'bytes[]',\n          },\n          {\n            internalType: 'bool',\n            name: 'reverseRecord',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint32',\n            name: 'fuses',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'wrapperExpiry',\n            type: 'uint64',\n          },\n        ],\n        internalType: 'struct ENSCommitment.Commitment[]',\n        name: 'commitments',\n        type: 'tuple[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bool',\n        name: 'withConfigs',\n        type: 'bool',\n      },\n    ],\n    name: 'createCommitmentsForRegistration',\n    outputs: [\n      {\n        internalType: 'bytes32[]',\n        name: '',\n        type: 'bytes32[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32[]',\n        name: 'commitments',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'requestRegistration',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'completeRegistration',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'completeRegistrationWithConfigs',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'getPriceRanges',\n    outputs: [\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n];\n","export const ENSBulkRegistrationContractTestnetABI = [\n  {\n    inputs: [],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'errorInfo',\n        type: 'bytes',\n      },\n    ],\n    name: 'error',\n    type: 'event',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'receive',\n    payable: true,\n  },\n  {\n    inputs: [],\n    name: 'recoverStuckETH',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'string',\n            name: 'name',\n            type: 'string',\n          },\n          {\n            internalType: 'address',\n            name: 'owner',\n            type: 'address',\n          },\n          {\n            internalType: 'uint256',\n            name: 'duration',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'secret',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'address',\n            name: 'resolver',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes[]',\n            name: 'data',\n            type: 'bytes[]',\n          },\n          {\n            internalType: 'bool',\n            name: 'reverseRecord',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint32',\n            name: 'fuses',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'wrapperExpiry',\n            type: 'uint64',\n          },\n        ],\n        internalType: 'struct ENSCommitment.Commitment[]',\n        name: 'commitments',\n        type: 'tuple[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bool',\n        name: 'withConfigs',\n        type: 'bool',\n      },\n    ],\n    name: 'createCommitmentsForRegistration',\n    outputs: [\n      {\n        internalType: 'bytes32[]',\n        name: '',\n        type: 'bytes32[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32[]',\n        name: 'commitments',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'requestRegistration',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'completeRegistration',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'completeRegistrationWithConfigs',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'getPriceRanges',\n    outputs: [\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n];\n","import { ens_normalize, ens_tokenize } from '@adraffy/ens-normalize';\nimport { Injectable } from '@angular/core';\nimport { BigNumber, Contract, ethers } from 'ethers';\nimport { Observable, of } from 'rxjs';\nimport {\n  bulkRegistrationMainnet,\n  bulkRegistrationTestnet,\n  generalConfigurations,\n} from 'src/app/configurations';\nimport { ENSBulkRegistrationContractMainnetABI } from 'src/app/configurations/contracts/ens-bulk-registration-mainnet.abi';\nimport { ENSBulkRegistrationContractTestnetABI } from 'src/app/configurations/contracts/ens-bulk-registration-testnet.abi';\nimport { payNoMarketAddress } from 'src/app/models';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport {\n  ENSRegistrationCommitmentModel,\n  ENSRegistrationCommmitmentRequestResultModel,\n} from 'src/app/models/states/ens-registration-interfaces';\nimport { environment } from 'src/environments/environment';\nimport { ContractService } from '../contract';\nimport { EnsService } from '../ens';\nimport { MiscUtilsService } from '../misc-utils';\nimport { PaymentService } from '../payment';\n\nconst gloalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegistrationFacilityService {\n  constructor(\n    protected miscUtilsService: MiscUtilsService,\n    protected paymentService: PaymentService,\n    protected ensService: EnsService,\n    protected contractService: ContractService\n  ) {}\n\n  registrationDomainsToCommitmentPacket(\n    owner: string,\n    duration: number,\n    secret: string,\n    resolver: string,\n    commitments: DomainMetadataModel[]\n  ) {\n    let compiled = [];\n    for (const c of commitments) {\n      const nc = {\n        name: c.labelName,\n        owner: owner,\n        duration: BigNumber.from(duration),\n        secret: secret,\n        resolver: resolver,\n        data: [],\n        reverseRecord: resolver !== payNoMarketAddress ? true : false,\n        fuses: 0,\n        wrapperExpiry: 0,\n        metadata: c,\n      } as ENSRegistrationCommitmentModel;\n      compiled.push(nc);\n    }\n    return compiled;\n  }\n\n  commitmentPacketToRegistrationDomains(\n    commitments: ENSRegistrationCommitmentModel[]\n  ) {\n    let decompiled = [];\n    for (const c of commitments) {\n      const nc = c.metadata as DomainMetadataModel;\n      decompiled.push(nc);\n    }\n    return decompiled;\n  }\n\n  createRegistrationCommitmentPacket(\n    commitments: ENSRegistrationCommitmentModel[],\n    payer: string,\n    provider\n  ) {\n    const contract = this.getEnsBulkRegistrationContract(provider);\n    const comitmentsPrepared = [];\n    for (const c of commitments) {\n      const nCP = [\n        c.name,\n        c.owner,\n        c.duration,\n        c.secret,\n        c.resolver,\n        c.data,\n        c.reverseRecord,\n        c.fuses,\n        c.wrapperExpiry,\n      ] as any;\n      nCP.name = c.name;\n      nCP.owner = c.owner;\n      nCP.duration = c.duration;\n      nCP.secret = c.secret;\n      nCP.resolver = c.resolver;\n      nCP.data = c.data;\n      nCP.reverseRecord = c.reverseRecord;\n      nCP.fuses = c.fuses;\n      nCP.wrapperExpiry = c.wrapperExpiry;\n      comitmentsPrepared.push(nCP);\n    }\n    const isResolverSet = comitmentsPrepared[0].resolver !== payNoMarketAddress;\n    const duration = comitmentsPrepared[0].duration;\n    let commitmentResult, gasLimit;\n    return new Observable((observer) => {\n      contract\n        .createCommitmentsForRegistration(\n          comitmentsPrepared,\n          duration,\n          isResolverSet\n        )\n        .then((r) => {\n          commitmentResult = r;\n          return this.contractService\n            .getGasLimitEstimation(\n              provider,\n              'requestRegistration',\n              [commitmentResult[0]],\n              payer,\n              this.bulkRegistrationContractAddress,\n              this.BulkRegistrationContractABI\n            )\n            .toPromise()\n            .catch((e) => {\n              return null;\n            });\n        })\n        .then((r) => {\n          if (\n            r === false ||\n            r === null ||\n            commitmentResult === false ||\n            commitmentResult === null\n          ) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = r as BigNumber;\n          observer.next([\n            {\n              commitments: commitmentResult[0],\n              priceRanges: commitmentResult[1].map((pr) =>\n                pr.mul(generalConfigurations.maxTotalCostBuffer).div(100)\n              ),\n            } as ENSRegistrationCommmitmentRequestResultModel,\n            gasLimit,\n          ]);\n          observer.complete();\n          return;\n        });\n    });\n  }\n\n  createRegistrationRequestPaymentPacket(\n    commitmentsPrepared: string[],\n    provider\n  ) {\n    const contract = this.getEnsBulkRegistrationContract(provider);\n    const dataInput = contract.interface.encodeFunctionData(\n      'requestRegistration',\n      [commitmentsPrepared]\n    );\n    return dataInput;\n  }\n\n  decodeRegistrationPacket(abstractData: string, value: BigNumber) {\n    const contract = this.getEnsBulkRegistrationContract();\n    const dataInput = contract.interface.parseTransaction({\n      data: abstractData,\n      value,\n    });\n    return dataInput;\n  }\n\n  completeRegistration(\n    commitments: ENSRegistrationCommitmentModel[],\n    payer: string,\n    priceRanges: string[],\n    totalCost: string,\n    provider\n  ) {\n    const contract = this.getEnsBulkRegistrationContract(provider);\n    const names = [];\n    const namesLengths = [];\n    const secret = commitments[0].secret;\n    const resolver = commitments[0].resolver;\n    const owner = commitments[0].owner;\n    const duration = commitments[0].duration;\n    for (const c of commitments) {\n      names.push(c.name);\n      namesLengths.push(this.ensService.getNameLength(c.name));\n    }\n    const dataMethod =\n      commitments[0].resolver === payNoMarketAddress\n        ? 'completeRegistration'\n        : 'completeRegistrationWithConfigs';\n    const dataParams =\n      commitments[0].resolver === payNoMarketAddress\n        ? [names, namesLengths, priceRanges, owner, duration, secret]\n        : [names, namesLengths, priceRanges, duration, secret, resolver, owner];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    if (names.length === 1) {\n      return of([\n        dataInput,\n        ethers.BigNumber.from(\n          commitments[0].resolver === payNoMarketAddress ? '300000' : '350000'\n        ),\n      ]);\n    }\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          this.bulkRegistrationContractAddress,\n          this.BulkRegistrationContractABI,\n          false,\n          totalCost\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = (r as BigNumber).add(generalConfigurations.gasLimitBuffer);\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getEnsBulkRegistrationContract(provider = null) {\n    const c = new Contract(\n      this.bulkRegistrationContractAddress,\n      this.BulkRegistrationContractABI,\n      provider\n    );\n    return c;\n  }\n\n  get BulkRegistrationContractABI() {\n    if (environment.test === true) {\n      return ENSBulkRegistrationContractTestnetABI;\n    }\n    return ENSBulkRegistrationContractMainnetABI;\n  }\n\n  get bulkRegistrationContractAddress() {\n    if (environment.test === true) {\n      return bulkRegistrationTestnet;\n    }\n    return bulkRegistrationMainnet;\n  }\n}\n","export const EnsTestnetABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'NewOwner',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n    ],\n    name: 'NewResolver',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'NewTTL',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setRecord',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setSubnodeRecord',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'setSubnodeOwner',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n    ],\n    name: 'setResolver',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'setOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setTTL',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'ttl',\n    outputs: [\n      {\n        internalType: 'uint64',\n        name: '',\n        type: 'uint64',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'recordExists',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","export const EnsABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'NewOwner',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n    ],\n    name: 'NewResolver',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'NewTTL',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setRecord',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setSubnodeRecord',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'setSubnodeOwner',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n    ],\n    name: 'setResolver',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'setOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setTTL',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'ttl',\n    outputs: [\n      {\n        internalType: 'uint64',\n        name: '',\n        type: 'uint64',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'recordExists',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","export const EnsRegistrarControllerTestnetABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'cost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'expires',\n        type: 'uint256',\n      },\n    ],\n    name: 'NameRegistered',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'cost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'expires',\n        type: 'uint256',\n      },\n    ],\n    name: 'NameRenewed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oracle',\n        type: 'address',\n      },\n    ],\n    name: 'NewPriceOracle',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'rentPrice',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'valid',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'available',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'makeCommitment',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'makeCommitmentWithConfig',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'commitment',\n        type: 'bytes32',\n      },\n    ],\n    name: 'commit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'register',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'registerWithConfig',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'renew',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n];\n","export const EnsRegistrarControllerABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'cost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'expires',\n        type: 'uint256',\n      },\n    ],\n    name: 'NameRegistered',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'cost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'expires',\n        type: 'uint256',\n      },\n    ],\n    name: 'NameRenewed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oracle',\n        type: 'address',\n      },\n    ],\n    name: 'NewPriceOracle',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'rentPrice',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'valid',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'available',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'makeCommitment',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'makeCommitmentWithConfig',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'commitment',\n        type: 'bytes32',\n      },\n    ],\n    name: 'commit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'register',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'registerWithConfig',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'renew',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n];\n","import { Injectable } from '@angular/core';\nimport { Contract, ethers } from 'ethers';\nimport { ENSContracts } from 'src/app/configurations';\nimport { EnsTestnetABI } from 'src/app/configurations/contracts/ens-abi-testnet.model';\nimport { EnsABI } from 'src/app/configurations/contracts/ens-abi.model';\nimport { EnsRegistrarControllerTestnetABI } from 'src/app/configurations/contracts/ens-registrar-controller-abi-testnet.model';\nimport { EnsRegistrarControllerABI } from 'src/app/configurations/contracts/ens-registrar-controller-abi.model';\nimport { payNoMarketAddress } from 'src/app/models';\nimport { ENSEventModel, EnsEventsEnum } from 'src/app/models/ens';\nimport { environment } from 'src/environments/environment';\n\nexport const registrationTopic =\n  '0xca6abbe9d7f11422cb6ca7629fbf6fe9efb1c621f71ce8f02b9f2a230097404f';\nexport const nameRenewedTopicHash =\n  '0x3da24c024582931cfaf8267d8ed24d13a82a8068d5bd337d30ec45cea4e506ae';\nexport const martketSaleTopics = {\n  SEAPORT: '0xc4109843e0b7d514e4c093114b863f8e7d8d9a458c372cd51bfe526b588006c9',\n  RARIBLE: '0x9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f31',\n  X2Y2: '0xe2c49856b032c255ae7e325d18109bc4e22a2804e2e49a017ec0f59f19cd447b',\n  LOOKSRARE:\n    '0x95fb6205e23ff6bda16a2d1dba56b9ad7c783f67c96fa149785052f47696f2be',\n};\nexport enum SortableMarkets {\n  SEAPORT = 'SEAPORT',\n  RARIBLE = 'RARIBLE',\n  X2Y2 = 'X2Y2',\n  LOOKSRARE = 'LOOKSrare',\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegistrationDataService {\n  constructor() {}\n\n  resolevTxType(relatedNameLabelHash: string, owner: string, tx: any) {\n    const marketTopics = Object.values(martketSaleTopics);\n    const markets = Object.keys(martketSaleTopics);\n    let qualifiedTx = tx.logs.filter((e) => {\n      if (marketTopics.filter((t) => e.topics.includes(t)).length > 0) {\n        return true;\n      }\n      if (\n        e.topics.includes(owner) ||\n        e.topics.includes(relatedNameLabelHash) ||\n        e.topics.includes(ENSContracts.registrarController)\n      ) {\n        return true;\n      }\n      return false;\n    });\n    let resolvedEventType: ENSEventModel[] = [];\n    const labelHashInHex =\n      ethers.BigNumber.from(relatedNameLabelHash).toHexString();\n    const paymentNoAddressBytes =\n      ethers.BigNumber.from(payNoMarketAddress).toHexString();\n    for (const e of qualifiedTx) {\n      const topicNormalised = e.topics.map((x) => {\n        return ethers.BigNumber.from(x).toHexString();\n      });\n      if (marketTopics.includes(topicNormalised[0])) {\n        const whichMarket = markets[marketTopics.indexOf(topicNormalised[0])];\n        const marketBuyer = this.getMarketBuyer(\n          SortableMarkets[whichMarket],\n          e,\n          topicNormalised,\n          tx\n        );\n        const marketSeller = this.getMarketSeller(\n          SortableMarkets[whichMarket],\n          e,\n          topicNormalised,\n          tx\n        );\n        resolvedEventType.push({\n          type: EnsEventsEnum.SALE,\n          from: marketSeller.toLowerCase(),\n          to: marketBuyer.toLowerCase(),\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      } else if (\n        (topicNormalised[1] ===\n          ENSContracts.registrarController.toLowerCase() &&\n          topicNormalised[2] !== paymentNoAddressBytes) ||\n        (topicNormalised[0] === registrationTopic &&\n          topicNormalised[1] === labelHashInHex &&\n          topicNormalised[2] === owner)\n      ) {\n        const registrant = topicNormalised[2];\n        resolvedEventType.push({\n          type: EnsEventsEnum.REGISTRATION,\n          from: ENSContracts.registrarController.toLowerCase(),\n          to: registrant.toLowerCase(),\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      } else if (\n        (topicNormalised[1] === paymentNoAddressBytes &&\n          topicNormalised[2] ===\n            ENSContracts.registrarController.toLowerCase()) ||\n        (topicNormalised[1] === paymentNoAddressBytes &&\n          topicNormalised[2] === owner)\n      ) {\n        resolvedEventType.push({\n          type: EnsEventsEnum.MINT,\n          from: null,\n          to: ENSContracts.registrarController.toLowerCase(),\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      } else if (topicNormalised[2] === paymentNoAddressBytes) {\n        resolvedEventType.push({\n          type: EnsEventsEnum.BURN,\n          from: topicNormalised[1],\n          to: null,\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      } else if (\n        topicNormalised[1] !== ENSContracts.registrarController.toLowerCase() &&\n        topicNormalised[1] !== paymentNoAddressBytes &&\n        topicNormalised[2] !== ENSContracts.registrarController.toLowerCase() &&\n        topicNormalised[2] !== paymentNoAddressBytes &&\n        topicNormalised[1].length === 42 &&\n        topicNormalised[2].length === 42\n      ) {\n        resolvedEventType.push({\n          type: EnsEventsEnum.TRANSFER,\n          from: topicNormalised[1].toLowerCase(),\n          to: topicNormalised[2].toLowerCase(),\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      }\n    }\n    const uniqueSet = new Set();\n    let filteredEvents = resolvedEventType;\n    if (resolvedEventType.map((re) => re.type).includes(EnsEventsEnum.SALE)) {\n      filteredEvents = resolvedEventType.filter((r) => {\n        if (r.type === EnsEventsEnum.SALE) {\n          return true;\n        }\n        return false;\n      });\n    }\n    return filteredEvents.filter((r) => {\n      const isDuplicate = uniqueSet.has(r.type + r.txHash);\n      uniqueSet.add(r.type + r.txHash);\n      if (isDuplicate === false) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  txValueToEther(value: string) {\n    return parseFloat(\n      ethers.utils.formatEther(ethers.BigNumber.from(value).toString())\n    ).toFixed(5);\n  }\n\n  getMarketBuyer(\n    market: SortableMarkets,\n    eventWholeData: any,\n    event: any,\n    tx: any\n  ) {\n    switch (market) {\n      case SortableMarkets.SEAPORT:\n        {\n          return event[2];\n        }\n        break;\n      case SortableMarkets.LOOKSRARE:\n        {\n          return tx.from;\n        }\n        break;\n      case SortableMarkets.RARIBLE:\n        {\n          return tx.from;\n        }\n        break;\n      case SortableMarkets.X2Y2:\n        {\n          return tx.from;\n        }\n        break;\n    }\n  }\n\n  getMarketSeller(\n    market: SortableMarkets,\n    eventWholeData: any,\n    event: any,\n    tx: any\n  ) {\n    switch (market) {\n      case SortableMarkets.SEAPORT:\n        {\n          return event[1];\n        }\n        break;\n      case SortableMarkets.LOOKSRARE:\n        {\n          return event[2];\n        }\n        break;\n      case SortableMarkets.RARIBLE:\n        {\n          return event[1];\n        }\n        break;\n      case SortableMarkets.X2Y2:\n        {\n          const data = eventWholeData.data.substring(2).match(/.{1,64}/g);\n          return ethers.BigNumber.from('0x' + data[2]).toHexString();\n        }\n        break;\n    }\n  }\n\n  getENSContract(provider) {\n    const contract = new Contract(\n      ENSContracts.registrar,\n      this.ensContractABI,\n      provider\n    );\n    return contract;\n  }\n\n  getENSRegistrarControllerContract(provider) {\n    const contract = new Contract(\n      ENSContracts.registrarController,\n      this.ensRegistrarControllerContractABI,\n      provider\n    );\n    return contract;\n  }\n\n  get ensRegistrarControllerContractABI() {\n    if (environment.test === true) {\n      return EnsRegistrarControllerTestnetABI;\n    }\n    return EnsRegistrarControllerABI;\n  }\n\n  get ensContractABI() {\n    if (environment.test === true) {\n      return EnsTestnetABI;\n    }\n    return EnsABI;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DomainMetadataModel } from 'src/app/models/domains';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegistrationServiceService {\n  constructor(protected snackBar: MatSnackBar) {}\n\n  countRegistrations() {\n    const rs = this.loadRegistrationsAndFeed();\n    return rs.length;\n  }\n\n  loadRegistrations() {\n    return localStorage.getItem('canvas-registrations');\n  }\n\n  loadRegistrationsAndFeed() {\n    const sRegistrations = this.loadRegistrations();\n    if (\n      sRegistrations !== null &&\n      sRegistrations !== 'null' &&\n      sRegistrations !== '' &&\n      sRegistrations !== '[]'\n    ) {\n      return JSON.parse(sRegistrations);\n    }\n    return [];\n  }\n\n  saveAllRegistrations(domainsData: DomainMetadataModel[]) {\n    const registrationsRaw = this.loadRegistrationsAndFeed().reduce(\n      (accumulator, value) => {\n        return { ...accumulator, [value.labelName]: value };\n      },\n      {}\n    );\n    const bKeys = Object.keys(registrationsRaw);\n    let registrations = [...new Set(bKeys)].map((k) => registrationsRaw[k]);\n    registrations = registrations.concat(domainsData);\n    localStorage.setItem('canvas-registrations', JSON.stringify(registrations));\n    return registrations;\n  }\n\n  saveRegistrations(domainData: DomainMetadataModel) {\n    const registrationsRaw = this.loadRegistrationsAndFeed().reduce(\n      (accumulator, value) => {\n        return { ...accumulator, [value.labelName]: value };\n      },\n      {}\n    );\n    const bKeys = Object.keys(registrationsRaw);\n    const registrations = [...new Set(bKeys)].map((k) => registrationsRaw[k]);\n    registrations.push(domainData);\n    localStorage.setItem('canvas-registrations', JSON.stringify(registrations));\n    return registrations;\n  }\n\n  removeRegistration(registrations: DomainMetadataModel[], domainName: string) {\n    const registrationsUpdated = [];\n    registrations.filter((d) => {\n      if (d.labelName !== domainName) {\n        registrationsUpdated.push(d);\n      }\n    });\n    localStorage.setItem(\n      'canvas-registrations',\n      JSON.stringify(registrationsUpdated)\n    );\n    return registrationsUpdated;\n  }\n\n  removeAllRegistrations() {\n    return localStorage.setItem('canvas-registrations', '');\n  }\n\n  isDomainOnRegistrationList(\n    registrations: DomainMetadataModel[],\n    domainName: string\n  ) {\n    for (const d of registrations) {\n      if (d.labelName === domainName) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from './translation.service';\n\n@Pipe({\n  name: 'translate',\n})\nexport class TranslationPipe implements PipeTransform {\n  constructor(public translationService: TranslationService) {}\n  transform(value: any): any {\n    if (!value || value === undefined || value.length <= 0) {\n      return null;\n    }\n    const language = this.translationService.getLanguage();\n    const translations = this.translationService.getTranslation(language);\n    const keysSplit = value.split('.');\n    if (value.indexOf('.') <= -1 && value in translations.default) {\n      return translations.default[value];\n    }\n    let currentKey;\n    for (const key of keysSplit) {\n      if (!currentKey) {\n        if (key in translations.default === false) {\n          return value;\n        }\n        currentKey = translations.default[key];\n      } else {\n        if (key in currentKey === false) {\n          return value;\n        }\n        currentKey = currentKey[key];\n      }\n    }\n    return currentKey;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { generalConfigurations, validTranslations } from '../../configurations';\nimport { ValidLangEnum } from '../../models';\n\ndeclare const navigator: any;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TranslationService {\n  getTranslation(lang: ValidLangEnum) {\n    if (\n      lang in validTranslations === false ||\n      validTranslations[lang] === undefined\n    ) {\n      return validTranslations.en;\n    }\n    return validTranslations[lang];\n  }\n\n  getLanguage() {\n    const savedLanguage = this.loadLanguage();\n    if (\n      savedLanguage !== null &&\n      savedLanguage !== '' &&\n      savedLanguage !== undefined &&\n      savedLanguage in validTranslations === true\n    ) {\n      return savedLanguage;\n    } else if (navigator.language) {\n      return navigator.language.split('-')[0];\n    } else {\n      return generalConfigurations.defaultLanguage;\n    }\n  }\n\n  getLocale() {\n    return navigator.language.length <= 2 ? 'en-US' : navigator.language;\n  }\n\n  getCacheableLanguagekeys(key: string) {\n    const translation = this.getTranslation(this.getLanguage());\n    return translation.default[key];\n  }\n\n  getText(key: string) {\n    const translation = this.getTranslation(this.getLanguage());\n    return translation.default[key];\n  }\n\n  loadLanguage() {\n    return localStorage.getItem('canvas-language');\n  }\n\n  saveLanguage(language: string) {\n    localStorage.setItem('canvas-language', language);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet';\nimport { UserFacadeService } from '../../store/facades';\nimport { Provider } from '@ethersproject/abstract-provider';\nimport { Observable } from 'rxjs';\nimport { request, gql } from 'graphql-request';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(\n    public userFacade: UserFacadeService,\n    public walletService: WalletService\n  ) {}\n\n  getUserDomains(walletAddress: string) {\n    const url = environment.networks[environment.defaultChain].ensGraphQLAPI;\n    return new Observable((observer) => {\n      const query = gql`\n        { \n          registrations(first: 1000, where: { registrant: \"${walletAddress}\" }) {\n            expiryDate\n            registrationDate\n            domain{\n              id\n              createdAt\n              labelName\n              labelhash\n              events{\n                id\n                blockNumber\n                transactionID\n              }\n            }\n          }\n        }\n      `;\n      request(url, query).then((data) => {\n        observer.next(data);\n        observer.complete();\n      });\n    });\n  }\n\n  getEthAddress(provider: Provider, ethName: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .resolveName(ethName)\n        .then((r) => {\n          observer.next(r);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getEthName(provider: Provider, walletAddress: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .lookupAddress(walletAddress)\n        .then((r) => {\n          observer.next(r);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getUserText(provider: Provider, ethName: string, text: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .getResolver(ethName)\n        .then((resolver) => {\n          return resolver.getText(text);\n        })\n        .then((r) => {\n          observer.next(r);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getUserContentHash(provider: Provider, ethName: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .getResolver(ethName)\n        .then((resolver) => {\n          return resolver.getContentHash();\n        })\n        .then((r) => {\n          let web2Link = 'https://';\n          if (r.indexOf('ipfs:') > -1) {\n            web2Link += 'dweb.link/ipfs/' + r.replace('ipfs://', '');\n          } else if (r.indexOf('ipns:') > -1) {\n            web2Link += 'dweb.link/ipns/' + r.replace('ipns://', '');\n          }\n          observer.next(web2Link);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { providers } from 'ethers';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\nimport { ValidRPCProvidersEnum } from 'src/app/models/rpc/valid-rpc-providers.enum';\nimport { environment } from '../../../environments/environment';\nimport { UserModel } from '../../models/states/user-interfaces';\nimport { MetamaskService } from '../metamask';\n\ndeclare const localStorage;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserSessionService {\n  constructor(public metamaskService: MetamaskService) {}\n\n  quitUserSession() {\n    localStorage.removeItem('canvas-user-session');\n    localStorage.removeItem('walletconnect');\n    localStorage.removeItem('WALLETCONNECT_DEEPLINK_CHOICE');\n  }\n\n  saveUserSession(userData: UserModel) {\n    localStorage.setItem('canvas-user-session', JSON.stringify(userData));\n  }\n\n  loadUserSession() {\n    return localStorage.getItem('canvas-user-session');\n  }\n\n  getUserSessionProvider(\n    chainId: number,\n    providerData: RPCProviderModel = null\n  ) {\n    let newProvider;\n    if (providerData === null) {\n      newProvider = this.createAlchemyFrontDefaultProvider(chainId);\n    } else if (providerData.type === ValidRPCProvidersEnum.ALCHEMY) {\n      newProvider = this.createAlchemyFrontProvider(\n        chainId,\n        providerData.secret\n      );\n    } else if (providerData.type === ValidRPCProvidersEnum.INFURA) {\n      newProvider = this.createInfuraFrontProvider(\n        chainId,\n        providerData.id,\n        providerData.secret\n      );\n    } else if (providerData.type === ValidRPCProvidersEnum.CUSTOM) {\n      newProvider = this.createJSONFrontProvider(chainId, providerData.url);\n    }\n    return newProvider;\n  }\n\n  getDefaultChainId() {\n    return environment.networks[environment.defaultChain].chainId;\n  }\n\n  createAlchemyFrontDefaultProvider(chain: number) {\n    const providerKeys = JSON.parse(\n      environment.networks[environment.defaultChain].providerKey\n    );\n    const providerKeyPicked = Math.floor(Math.random() * providerKeys.length);\n    return new providers.AlchemyWebSocketProvider(\n      chain,\n      providerKeys[providerKeyPicked]\n    );\n  }\n\n  createAlchemyFrontProvider(chain: number, secret: string) {\n    return new providers.AlchemyWebSocketProvider(chain, secret);\n  }\n\n  createInfuraFrontProvider(chain: number, id: string, secret: string) {\n    return new providers.InfuraProvider(chain, {\n      projectId: id,\n      projectSecret: secret,\n    });\n  }\n\n  createJSONFrontProvider(chain: number, url: string) {\n    return new providers.JsonRpcProvider(url, chain);\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { PagesFacadeService, UserFacadeService } from '../../store/facades';\nimport { MiscUtilsService } from '../misc-utils';\nimport { UserRegistrationModel } from 'src/app/models/states/user-interfaces';\nimport { WalletTypesEnum } from 'src/app/models/states/wallet-interfaces';\nimport WalletConnect from '@walletconnect/client';\nimport QRCodeModal from '@walletconnect/qrcode-modal';\nimport { PagesEnum } from 'src/app/models/states/pages-interfaces';\nimport { UserStoreErrorsEnum } from 'src/app/models/error-enums';\nimport { generalConfigurations } from 'src/app/configurations';\n\nconst globalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WalletConnectService {\n  constructor(\n    public miscUtils: MiscUtilsService,\n    public userFacadeService: UserFacadeService,\n    public pagesFacade: PagesFacadeService,\n    public userFacade: UserFacadeService,\n    protected ngZone: NgZone\n  ) {\n    const dateNow = new Date().getTime();\n    if (globalAny.walletConnect === undefined) {\n      const connector = new WalletConnect({\n        bridge: 'https://bridge.walletconnect.org',\n        qrcodeModal: QRCodeModal,\n        qrcodeModalOptions: {\n          mobileLinks: generalConfigurations.wallectConnectSupportedWallets,\n          desktopLinks: [],\n        },\n        clientMeta: generalConfigurations.appMeta,\n      });\n      connector.on('connect', (error, payload) => {\n        if (error) {\n          throw error;\n        }\n        const { accounts, chainId } = payload.params[0];\n        const currentChainId = globalAny.chainId;\n        if (currentChainId !== chainId) {\n          this.userFacadeService.removeUser();\n          const wc = globalAny.walletConnect as WalletConnect;\n          wc.killSession();\n          this.userFacade.setErrorState(UserStoreErrorsEnum.CONNECT_ERROR);\n          this.pagesFacade.setNetworkChainCode(parseInt(chainId, 16));\n          return;\n        }\n        this.connect(dateNow, accounts[0]);\n      });\n      connector.on('session_update', (error, payload) => {\n        if (error) {\n          throw error;\n        }\n        const { accounts, chainId } = payload.params[0];\n        const currentChainId = globalAny.chainId;\n        const currentAccount = globalAny.chainAccount;\n        if (\n          currentChainId !== chainId ||\n          currentAccount.walletAddress.toLowerCase() !==\n            accounts[0].toLowerCase()\n        ) {\n          this.userFacadeService.removeUser();\n          const wc = globalAny.walletConnect as WalletConnect;\n          wc.killSession();\n          this.pagesFacade.setNetworkChainCode(parseInt(chainId, 16));\n          this.userFacadeService.removeUser();\n          this.pagesFacade.gotoPageRoute('home', PagesEnum.HOME);\n          return;\n        }\n      });\n      connector.on('disconnect', (error, payload) => {\n        if (error) {\n          throw error;\n        }\n      });\n      globalAny.walletConnect = connector;\n    }\n  }\n\n  createSession() {\n    globalAny.walletConnect.createSession();\n  }\n\n  connect(time: number, account: string) {\n    this.userFacade.registerUser({\n      walletType: WalletTypesEnum.WALLET_CONNECT,\n      address: account,\n    } as UserRegistrationModel);\n  }\n\n  getChainId() {\n    return globalAny.chainId;\n  }\n\n  signPayment(payloadHash: any) {\n    return new Observable((observer) => {\n      globalAny.walletConnect\n        .sendTransaction(payloadHash)\n        .then((tx) => {\n          if (tx === null || tx.length <= 0 || tx === undefined) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(tx);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Wallet, utils } from 'ethers';\nimport { UserFacadeService } from '../../store/facades';\nimport { NonceTypesEnum } from '../../models/states/wallet-interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WalletService {\n  constructor(public userFacade: UserFacadeService, public http: HttpClient) {}\n\n  produceNonce(type: NonceTypesEnum = NonceTypesEnum.TOKEN): string {\n    const nonceLength = type === NonceTypesEnum.TOKEN ? 32 : 15;\n    const charLibrary =\n      '0123456789' +\n      (type === NonceTypesEnum.TOKEN\n        ? 'ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'\n        : '');\n    let nonceString = '';\n    for (let i = 0; i < nonceLength; i++) {\n      const rnum = Math.floor(Math.random() * charLibrary.length);\n      nonceString += charLibrary.substring(rnum, rnum + 1);\n    }\n    return nonceString;\n  }\n\n  checksumEtheruemAddress(address: string) {\n    try {\n      utils.getAddress(address);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  validateWalletAddress(address: string) {\n    if (this.checksumEtheruemAddress(address) === false) {\n      return false;\n    }\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n      return false;\n    } else if (\n      /^(0x)?[0-9a-f]{40}$/.test(address) ||\n      /^(0x)?[0-9A-F]{40}$/.test(address)\n    ) {\n      return true;\n    } else {\n      return true;\n    }\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { CategoriesRootModel, CategoryModel } from 'src/app/models/category';\nimport { CategoriesStoreErrorsEnum } from 'src/app/models/error-enums';\nexport const InitEffectsCategory = '[CategoryState] Init effects category.';\nexport const SetCategoriesMetadata = '[CategoryState] Set category metadata.';\nexport const SetCategoriesRootVolumeData =\n  '[CategoryState] Set category root volume data.';\nexport const AddOneCategory = '[CategoryState] Add category.';\nexport const UpdateCategory = '[CategoryState] Update category.';\nexport const UpsertOneCategory = '[CategoryState] Upsert one category.';\nexport const UpsertManyCategory = '[CategoryState] Upsert many category.';\nexport const GetOneCategory = '[CategoryState] Get one category.';\nexport const GetAllCategory = '[CategoryState] Get all category.';\nexport const RemoveOneCategory = '[CategoryState] Remove one category.';\nexport const RemoveManyCategory = '[CategoryState] Remove many category.';\nexport const RemoveAllCategory = '[CategoryState] Remove all category.';\nexport const SetCategoryError = '[CategoryState] Category error set.';\n\nexport class CategoryEffectsInit implements Action {\n  readonly type = InitEffectsCategory;\n  constructor() {}\n}\n\nexport class CategoryMetadataSet implements Action {\n  readonly type = SetCategoriesMetadata;\n  constructor(public payload: CategoriesRootModel) {}\n}\n\nexport class CategoryRootVolumeDataSet implements Action {\n  readonly type = SetCategoriesRootVolumeData;\n  constructor(public payload: CategoriesRootModel) {}\n}\n\nexport class CategoryErrorSet implements Action {\n  readonly type = SetCategoryError;\n  constructor(public payload: CategoriesStoreErrorsEnum) {}\n}\n\nexport class CategoryAddOne implements Action {\n  readonly type = AddOneCategory;\n  constructor(public payload: CategoryModel, public toSave = true) {}\n}\n\nexport class CategoryUpsertOne implements Action {\n  readonly type = UpsertOneCategory;\n  constructor(public payload: CategoryModel, public toSave = true) {}\n}\n\nexport class CategoryUpsertMany implements Action {\n  readonly type = UpsertManyCategory;\n  constructor(public payload: CategoryModel[], public toSave = true) {}\n}\n\nexport class CategoryGetOne implements Action {\n  readonly type = GetOneCategory;\n  constructor(public payload: string) {}\n}\n\nexport class CategoryGetAll implements Action {\n  readonly type = GetAllCategory;\n  constructor(public payload: string) {}\n}\n\nexport class CategoryRemoveOne implements Action {\n  readonly type = RemoveOneCategory;\n  constructor(public payload: string, public toSave = true) {}\n}\n\nexport class CategoryRemoveMany implements Action {\n  readonly type = RemoveManyCategory;\n  constructor(public payload: string[], public toSave = true) {}\n}\n\nexport class CategoryRemoveAll implements Action {\n  readonly type = RemoveAllCategory;\n  constructor(public toSave = true) {}\n}\n\nexport class CategoryUpdate implements Action {\n  readonly type = UpdateCategory;\n  constructor(public payload: CategoryModel, public toSave = true) {}\n}\n\nexport type CategoryActions =\n  | CategoryRootVolumeDataSet\n  | CategoryMetadataSet\n  | CategoryAddOne\n  | CategoryRemoveOne\n  | CategoryRemoveMany\n  | CategoryGetAll\n  | CategoryGetOne\n  | CategoryUpsertOne\n  | CategoryUpsertMany\n  | CategoryErrorSet\n  | CategoryRemoveAll\n  | CategoryUpdate;\n","import { Action } from '@ngrx/store';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSBookmarkStoreErrorsEnum } from '../../models/error-enums';\nexport const InitEffectsENSBookmark =\n  '[ENSBookmarkState] Init effects bookmark.';\nexport const AddOneENSBookmark = '[ENSBookmarkState] Add bookmark.';\nexport const UpdateENSBookmark = '[ENSBookmarkState] Update bookmark.';\nexport const UpsertOneENSBookmark = '[ENSBookmarkState] Upsert one bookmark.';\nexport const UpsertManyENSBookmark = '[ENSBookmarkState] Upsert many bookmark.';\nexport const GetOneENSBookmark = '[ENSBookmarkState] Get one bookmark.';\nexport const GetAllENSBookmark = '[ENSBookmarkState] Get all bookmark.';\nexport const RemoveOneENSBookmark = '[ENSBookmarkState] Remove one bookmark.';\nexport const RemoveManyENSBookmark = '[ENSBookmarkState] Remove many bookmark.';\nexport const RemoveAllENSBookmark = '[ENSBookmarkState] Remove all bookmark.';\nexport const SetENSBookmarkError = '[ENSBookmarkState] ENSBookmark error set.';\n\nexport class ENSBookmarkEffectsInit implements Action {\n  readonly type = InitEffectsENSBookmark;\n  constructor() {}\n}\n\nexport class ENSBookmarkErrorSet implements Action {\n  readonly type = SetENSBookmarkError;\n  constructor(public payload: ENSBookmarkStoreErrorsEnum) {}\n}\n\nexport class ENSBookmarkAddOne implements Action {\n  readonly type = AddOneENSBookmark;\n  constructor(public payload: DomainMetadataModel, public toSave = true) {}\n}\n\nexport class ENSBookmarkUpsertOne implements Action {\n  readonly type = UpsertOneENSBookmark;\n  constructor(public payload: DomainMetadataModel, public toSave = true) {}\n}\n\nexport class ENSBookmarkUpsertMany implements Action {\n  readonly type = UpsertManyENSBookmark;\n  constructor(public payload: DomainMetadataModel[], public toSave = true) {}\n}\n\nexport class ENSBookmarkGetOne implements Action {\n  readonly type = GetOneENSBookmark;\n  constructor(public payload: string) {}\n}\n\nexport class ENSBookmarkGetAll implements Action {\n  readonly type = GetAllENSBookmark;\n  constructor(public payload: string) {}\n}\n\nexport class ENSBookmarkRemoveOne implements Action {\n  readonly type = RemoveOneENSBookmark;\n  constructor(public payload: string, public toSave = true) {}\n}\n\nexport class ENSBookmarkRemoveMany implements Action {\n  readonly type = RemoveManyENSBookmark;\n  constructor(public payload: string[], public toSave = true) {}\n}\n\nexport class ENSBookmarkRemoveAll implements Action {\n  readonly type = RemoveAllENSBookmark;\n  constructor(public toSave = true) {}\n}\n\nexport class ENSBookmarkUpdate implements Action {\n  readonly type = UpdateENSBookmark;\n  constructor(public payload: DomainMetadataModel, public toSave = true) {}\n}\n\nexport type ENSBookmarkActions =\n  | ENSBookmarkAddOne\n  | ENSBookmarkRemoveOne\n  | ENSBookmarkRemoveMany\n  | ENSBookmarkGetAll\n  | ENSBookmarkGetOne\n  | ENSBookmarkUpsertOne\n  | ENSBookmarkUpsertMany\n  | ENSBookmarkErrorSet\n  | ENSBookmarkRemoveAll\n  | ENSBookmarkUpdate;\n","import { Action } from '@ngrx/store';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSRegistrationStoreErrorsEnum } from '../../models/error-enums';\nexport const InitEffectsENSRegistration =\n  '[CategoryState] Init effects registration.';\nexport const AddOneENSRegistration = '[ENSRegistrationState] Add registration.';\nexport const UpdateENSRegistration =\n  '[ENSRegistrationState] Update registration.';\nexport const UpsertOneENSRegistration =\n  '[ENSRegistrationState] Upsert one registration.';\nexport const UpsertManyENSRegistration =\n  '[ENSRegistrationState] Upsert many registration.';\nexport const GetOneENSRegistration =\n  '[ENSRegistrationState] Get one registration.';\nexport const GetAllENSRegistration =\n  '[ENSRegistrationState] Get all registration.';\nexport const RemoveOneENSRegistration =\n  '[ENSRegistrationState] Remove one registration.';\nexport const RemoveManyENSRegistration =\n  '[ENSRegistrationState] Remove many registration.';\nexport const RemoveAllENSRegistration =\n  '[ENSRegistrationState] Remove all registration.';\nexport const SetENSRegistrationError =\n  '[ENSRegistrationState] ENSRegistration error set.';\n\nexport class ENSRegistrationEffectsInit implements Action {\n  readonly type = InitEffectsENSRegistration;\n  constructor() {}\n}\n\nexport class ENSRegistrationErrorSet implements Action {\n  readonly type = SetENSRegistrationError;\n  constructor(public payload: ENSRegistrationStoreErrorsEnum) {}\n}\n\nexport class ENSRegistrationAddOne implements Action {\n  readonly type = AddOneENSRegistration;\n  constructor(public payload: DomainMetadataModel, public toSave = true) {}\n}\n\nexport class ENSRegistrationUpsertOne implements Action {\n  readonly type = UpsertOneENSRegistration;\n  constructor(public payload: DomainMetadataModel, public toSave = true) {}\n}\n\nexport class ENSRegistrationUpsertMany implements Action {\n  readonly type = UpsertManyENSRegistration;\n  constructor(public payload: DomainMetadataModel[], public toSave = true) {}\n}\n\nexport class ENSRegistrationGetOne implements Action {\n  readonly type = GetOneENSRegistration;\n  constructor(public payload: string) {}\n}\n\nexport class ENSRegistrationGetAll implements Action {\n  readonly type = GetAllENSRegistration;\n  constructor(public payload: string) {}\n}\n\nexport class ENSRegistrationRemoveOne implements Action {\n  readonly type = RemoveOneENSRegistration;\n  constructor(public payload: string, public toSave = true) {}\n}\n\nexport class ENSRegistrationRemoveMany implements Action {\n  readonly type = RemoveManyENSRegistration;\n  constructor(public payload: string[], public toSave = true) {}\n}\n\nexport class ENSRegistrationRemoveAll implements Action {\n  readonly type = RemoveAllENSRegistration;\n  constructor() {}\n}\n\nexport class ENSRegistrationUpdate implements Action {\n  readonly type = UpdateENSRegistration;\n  constructor(public payload: DomainMetadataModel, public toSave = true) {}\n}\n\nexport type ENSRegistrationActions =\n  | ENSRegistrationEffectsInit\n  | ENSRegistrationAddOne\n  | ENSRegistrationRemoveOne\n  | ENSRegistrationRemoveMany\n  | ENSRegistrationGetAll\n  | ENSRegistrationGetOne\n  | ENSRegistrationUpsertOne\n  | ENSRegistrationUpsertMany\n  | ENSRegistrationErrorSet\n  | ENSRegistrationRemoveAll\n  | ENSRegistrationUpdate;\n","import { Action } from '@ngrx/store';\nimport { NavigatorButtonsStateModel } from '../../models/states/navigator-interfaces';\n\nexport const SetNavigatorButtonsState =\n  '[NavigatorButtonsState] New state set.';\nexport const GetNavigatorButtonsState =\n  '[NavigatorButtonsState] Latest state retrieved.';\n\nexport class NavigatorButtonsStateSet implements Action {\n  readonly type = SetNavigatorButtonsState;\n  constructor(public payload: NavigatorButtonsStateModel) {}\n}\n\nexport class NavigatorButtonsStateGet implements Action {\n  readonly type = GetNavigatorButtonsState;\n  constructor() {}\n}\n\nexport type NavigatorButtonActions =\n  | NavigatorButtonsStateSet\n  | NavigatorButtonsStateGet;\n","import { Action } from '@ngrx/store';\nimport { NavigatorStateModel } from '../../models/states/navigator-interfaces';\n\nexport const SetNavigatorState = '[NavigatorState] New state set.';\nexport const SetNavigatorStateDisabledButtons =\n  '[NavigatorState] Disabled buttons set.';\nexport const GetNavigatorState = '[NavigatorState] Latest state retrieved.';\n\nexport class NavigatorStateSet implements Action {\n  readonly type = SetNavigatorState;\n  constructor(public payload: NavigatorStateModel) {}\n}\n\nexport class NavigatorStateGet implements Action {\n  readonly type = GetNavigatorState;\n  constructor() {}\n}\n\nexport type NavigatorActions = NavigatorStateSet | NavigatorStateGet;\n","import { Action } from '@ngrx/store';\nimport { IpfsErrorsEnum } from 'src/app/models/error-enums';\nimport { IpfsStatesEnum } from 'src/app/models/ipfs';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\nimport {\n  GotoPageRouteActionPayloadModel,\n  PagesStateModel,\n} from '../../models/states/pages-interfaces';\n\nexport const InitEffectsPages = '[PagesState] Init effects pages.';\nexport const ShowLoadingProgressBarOnLoad = '[PagesState] Spinner dialog set.';\nexport const HideLoadingProgressBarOnLoadFinished =\n  '[PagesState] Spinner dialog unset.';\nexport const SetPagesCriticalError = '[PagesState] critical error set.';\nexport const SetPagesPageSlide = '[PagesState] New page slide set.';\nexport const SetPagesState = '[PagesState] New state set.';\nexport const SetPageIpfsErrors = '[PagesState] ipfs error state set.';\nexport const SetPageIpfsState = '[PagesState] ipfs state set.';\nexport const SetPageChainCode = '[PagesState] chain code set.';\nexport const SetPagesNewPageState = '[PagesState] New state set.';\nexport const SetPagesNetworkState = '[PagesState] New network state set.';\nexport const SetPagesVisibility = '[PagesState] visibility state set.';\nexport const SetRPCProvider = '[PagesState] rpc provider set.';\nexport const SetPagesNetworkStateOffline =\n  '[PagesState] Offline network state procedure invoke.';\nexport const GetPagesState = '[PagesState] Latest state retrieved.';\nexport const GotoPageRoute = '[PagesState] Going to page route.';\n\nexport class PagesEffectsInit implements Action {\n  readonly type = InitEffectsPages;\n  constructor() {}\n}\nexport class PagesSetRPCProvider implements Action {\n  readonly type = SetRPCProvider;\n  constructor(public payload: RPCProviderModel) {}\n}\n\nexport class PagesSetVisibility implements Action {\n  readonly type = SetPagesVisibility;\n  constructor(public payload: boolean) {}\n}\n\nexport class PagesSetCriticalError implements Action {\n  readonly type = SetPagesCriticalError;\n  constructor(public payload: boolean, public redirect = true) {}\n}\n\nexport class PagesSetIpfsError implements Action {\n  readonly type = SetPageIpfsErrors;\n  constructor(public payload: IpfsErrorsEnum) {}\n}\n\nexport class PagesSetIpfsState implements Action {\n  readonly type = SetPageIpfsState;\n  constructor(public payload: IpfsStatesEnum) {}\n}\n\nexport class PagesShowLoadingProgressBarOnLoad implements Action {\n  readonly type = ShowLoadingProgressBarOnLoad;\n  constructor() {}\n}\n\nexport class PagesHideLoadingProgressBarOnLoadFinished implements Action {\n  readonly type = HideLoadingProgressBarOnLoadFinished;\n  constructor() {}\n}\n\nexport class PagesSetChainCode implements Action {\n  readonly type = SetPageChainCode;\n  constructor(public payload: number, public firstTimeSet = false) {}\n}\n\nexport class PagesSetPageSlide implements Action {\n  readonly type = SetPagesPageSlide;\n  constructor(public payload: number) {}\n}\n\nexport class PagesStateSet implements Action {\n  readonly type = SetPagesState;\n  constructor(public payload: PagesStateModel) {}\n}\n\nexport class PagesNewPageStateSet implements Action {\n  readonly type = SetPagesNewPageState;\n  constructor(public payload: PagesStateModel) {}\n}\n\nexport class PagesNetworkStateSet implements Action {\n  readonly type = SetPagesNetworkState;\n  constructor(public payload: PagesStateModel) {}\n}\n\nexport class PagesNetworkOfflineStateInvoke implements Action {\n  readonly type = SetPagesNetworkStateOffline;\n  constructor() {}\n}\n\nexport class PagesStateGet implements Action {\n  readonly type = GetPagesState;\n  constructor() {}\n}\n\nexport class PageGotoRoute implements Action {\n  readonly type = GotoPageRoute;\n  constructor(public payload: GotoPageRouteActionPayloadModel) {}\n}\n\nexport type PagesActions =\n  | PagesEffectsInit\n  | PagesSetRPCProvider\n  | PagesSetChainCode\n  | PagesSetIpfsError\n  | PagesSetIpfsState\n  | PagesSetPageSlide\n  | PagesHideLoadingProgressBarOnLoadFinished\n  | PagesShowLoadingProgressBarOnLoad\n  | PagesStateSet\n  | PagesStateGet\n  | PagesNewPageStateSet\n  | PagesNetworkOfflineStateInvoke\n  | PageGotoRoute\n  | PagesNetworkStateSet\n  | PagesSetCriticalError;\n","import { Action } from '@ngrx/store';\nimport { PaymentStoreErrorsEnum } from '../../models/error-enums';\nimport { PaymentModel } from '../../models/states/payment-interfaces/payment.model';\n\nexport const InitEffectsPayments = '[PaymentState] Init effects payments.';\nexport const PaymentCheckFulfilled =\n  '[PaymentState] Payment checking status if fulfilled.';\nexport const PaymentTriggerStatusChecking =\n  '[PaymentState] Payment checking status triggered.';\nexport const CancelledPayment = '[PaymentState] payment cancelled.';\nexport const AddOnePayment = '[PaymentState] Add payment.';\nexport const UpdatePayment = '[PaymentState] Update payment.';\nexport const UpsertOnePayment = '[PaymentState] Upsert one payment.';\nexport const UpsertManyPayment = '[PaymentState] Upsert many payment.';\nexport const GetOnePayment = '[PaymentState] Get one payment.';\nexport const GetAllPayment = '[PaymentState] Get all payment.';\nexport const SetEthUSDRates = '[PaymentState] ETHUSD rate set.';\nexport const RemoveOnePayment = '[PaymentState] Remove one payment.';\nexport const RemoveManyPayment = '[PaymentState] Remove many payment.';\nexport const RemoveAllPayment = '[PaymentState] Remove all payment.';\nexport const ArchiveAllPayment = '[PaymentState] Archive all payment.';\nexport const SetPaymentError = '[PaymentState] Payment error set.';\n\nexport class PaymentsEffectsInit implements Action {\n  readonly type = InitEffectsPayments;\n  constructor() {}\n}\nexport class PaymentCancelled implements Action {\n  readonly type = CancelledPayment;\n  constructor() {}\n}\n\nexport class PaymentArchiveAll implements Action {\n  readonly type = ArchiveAllPayment;\n  constructor() {}\n}\n\nexport class PaymentETHUSDRatesSet implements Action {\n  readonly type = SetEthUSDRates;\n  constructor(public payload: string) {}\n}\n\nexport class PaymentErrorSet implements Action {\n  readonly type = SetPaymentError;\n  constructor(public payload: PaymentStoreErrorsEnum) {}\n}\n\nexport class PaymentAddOne implements Action {\n  readonly type = AddOnePayment;\n  constructor(public payload: PaymentModel) {}\n}\n\nexport class PaymentUpsertOne implements Action {\n  readonly type = UpsertOnePayment;\n  constructor(public payload: PaymentModel) {}\n}\n\nexport class PaymentUpsertMany implements Action {\n  readonly type = UpsertManyPayment;\n  constructor(public payload: PaymentModel[]) {}\n}\n\nexport class PaymentGetOne implements Action {\n  readonly type = GetOnePayment;\n  constructor(public payload: string) {}\n}\n\nexport class PaymentGetAll implements Action {\n  readonly type = GetAllPayment;\n  constructor(public payload: string) {}\n}\n\nexport class PaymentRemoveOne implements Action {\n  readonly type = RemoveOnePayment;\n  constructor(public payload: string) {}\n}\n\nexport class PaymentRemoveMany implements Action {\n  readonly type = RemoveManyPayment;\n  constructor(public payload: string[]) {}\n}\n\nexport class PaymentRemoveAll implements Action {\n  readonly type = RemoveAllPayment;\n  constructor() {}\n}\n\nexport class CheckPaymentFulfilled implements Action {\n  readonly type = PaymentCheckFulfilled;\n  constructor(public payload: PaymentModel) {}\n}\n\nexport class PaymentUpdate implements Action {\n  readonly type = UpdatePayment;\n  constructor(public payload: PaymentModel) {}\n}\n\nexport type PaymentActions =\n  | PaymentsEffectsInit\n  | PaymentCancelled\n  | PaymentAddOne\n  | PaymentRemoveOne\n  | PaymentRemoveMany\n  | PaymentGetAll\n  | PaymentGetOne\n  | PaymentUpsertOne\n  | PaymentUpsertMany\n  | PaymentErrorSet\n  | PaymentRemoveAll\n  | PaymentETHUSDRatesSet\n  | CheckPaymentFulfilled\n  | PaymentUpdate\n  | PaymentArchiveAll;\n","import { Action } from '@ngrx/store';\nimport { UserStoreErrorsEnum } from '../../models/error-enums';\nimport {\n  UserModel,\n  UserRegistrationModel,\n} from '../../models/states/user-interfaces';\n\nexport const InitEffectsUserState = '[UserState] Init effects users.';\nexport const SetUserPoaps = '[UserState] New poaps state set.';\nexport const SetUserState = '[UserState] New state set.';\nexport const SetUserError = '[UserState] An error has occured.';\nexport const GetUserState = '[UserState] Latest state retrieved.';\nexport const RemoveUserError = '[UserState] Error removed.';\nexport const RemoveUserState =\n  '[UserState] Latest state replaced (with Empty).';\nexport const RemoveUser = '[UserState] Latest user replaced (with Empty).';\nexport const AddUser = '[UserState] New user added.';\nexport const UpdateUser = '[UserState] User updated added.';\nexport const RegisterUser = '[UserState] New user registration.';\n\nexport class UserEffectsInit implements Action {\n  readonly type = InitEffectsUserState;\n  constructor() {}\n}\n\nexport class UserErrorSet implements Action {\n  readonly type = SetUserError;\n  constructor(public payload: UserStoreErrorsEnum) {}\n}\n\nexport class UserPoapsSet implements Action {\n  readonly type = SetUserPoaps;\n  constructor(\n    public payload: {\n      poapsResolved: boolean;\n      poaps: string[];\n      poapTokens: any[];\n    }\n  ) {}\n}\n\nexport class UserUpdate implements Action {\n  readonly type = UpdateUser;\n  constructor(public payload: UserModel) {}\n}\n\nexport class UserStateSet implements Action {\n  readonly type = SetUserState;\n  constructor(public payload: UserModel) {}\n}\n\nexport class UserStateGet implements Action {\n  readonly type = GetUserState;\n  constructor(public payload: number) {}\n}\n\nexport class UserStateRemove implements Action {\n  readonly type = RemoveUserState;\n  constructor() {}\n}\n\nexport class UserErrorRemove implements Action {\n  readonly type = RemoveUserError;\n  constructor() {}\n}\n\nexport class UserRemove implements Action {\n  readonly type = RemoveUser;\n  constructor() {}\n}\n\nexport class UserRegister implements Action {\n  readonly type = RegisterUser;\n  constructor(public payload: UserRegistrationModel) {}\n}\n\nexport class UserAdd implements Action {\n  readonly type = AddUser;\n  constructor(public payload: UserModel) {}\n}\n\nexport type UserActions =\n  | UserPoapsSet\n  | UserEffectsInit\n  | UserStateSet\n  | UserUpdate\n  | UserErrorSet\n  | UserStateGet\n  | UserStateRemove\n  | UserErrorRemove\n  | UserRemove\n  | UserRegister\n  | UserAdd;\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { getCurrentUserState, getCurrentUser } from '../selectors';\nimport {\n  UserStateSet,\n  UserStateRemove,\n  UserAdd,\n  UserErrorRemove,\n  UserErrorSet,\n  UserUpdate,\n  UserRemove,\n  UserRegister,\n  UserEffectsInit,\n} from '../actions';\nimport {\n  UserModel,\n  UserRegistrationModel,\n  UserStateModel,\n} from '../../models/states/user-interfaces';\nimport { UserStoreErrorsEnum } from '../../models/error-enums';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserFacadeService {\n  userState$: Observable<UserStateModel>;\n  user$: Observable<UserModel>;\n\n  constructor(public store: Store<UserStateModel>) {\n    this.userState$ = this.store.pipe(select(getCurrentUserState));\n    this.user$ = this.store.pipe(select(getCurrentUser));\n  }\n\n  startEffects() {\n    this.store.dispatch(new UserEffectsInit());\n  }\n\n  registerUser(userData: UserRegistrationModel) {\n    this.store.dispatch(new UserRegister(userData));\n  }\n\n  newUserState(userState: UserModel) {\n    this.store.dispatch(new UserStateSet(userState));\n  }\n\n  removeUserState() {\n    this.store.dispatch(new UserStateRemove());\n  }\n\n  removeUser() {\n    this.store.dispatch(new UserRemove());\n  }\n\n  removeUserStateError() {\n    this.store.dispatch(new UserErrorRemove());\n  }\n\n  setErrorState(error: UserStoreErrorsEnum) {\n    this.store.dispatch(new UserErrorSet(error));\n  }\n\n  addUser(userAddData: UserModel) {\n    this.store.dispatch(new UserAdd(userAddData));\n  }\n\n  updateUser(userData: UserModel) {\n    this.store.dispatch(new UserUpdate(userData));\n  }\n}\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport {\n  PaymentModel,\n  PaymentStateModel,\n} from '../../models/states/payment-interfaces';\nimport {\n  getEthUsdPrice,\n  getPayments,\n  getPaymentState,\n  getPaymentStateError,\n  getPaymentStateLoading,\n  getPendingPayments,\n  selectPayment,\n} from '../selectors';\nimport {\n  PaymentErrorSet,\n  PaymentUpdate,\n  PaymentUpsertOne,\n  PaymentRemoveOne,\n  PaymentRemoveMany,\n  PaymentAddOne,\n  ArchiveAllPayment,\n  PaymentArchiveAll,\n  PaymentETHUSDRatesSet,\n  PaymentRemoveAll,\n  PaymentsEffectsInit,\n} from '../actions';\nimport { PaymentStoreErrorsEnum } from '../../models/error-enums';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentFacadeService {\n  paymentState$: Observable<PaymentStateModel>;\n  pendingPayments$: Observable<PaymentModel[]>;\n  approvablePayments$: Observable<PaymentModel[]>;\n  paymentsStored$: Observable<PaymentModel[]>;\n  paymentsStoreError$: Observable<PaymentStoreErrorsEnum>;\n  paymentsStoreLoading$: Observable<boolean>;\n  ethUsdPrice$: Observable<string>;\n\n  constructor(protected store: Store<PaymentModel>) {\n    this.paymentState$ = this.store.pipe(select(getPaymentState));\n    this.pendingPayments$ = this.store.pipe(select(getPendingPayments));\n    this.paymentsStoreError$ = this.store.pipe(select(getPaymentStateError));\n    this.paymentsStoreLoading$ = this.store.pipe(\n      select(getPaymentStateLoading)\n    );\n    this.ethUsdPrice$ = this.store.pipe(select(getEthUsdPrice));\n  }\n\n  startEffects() {\n    this.store.dispatch(new PaymentsEffectsInit());\n  }\n\n  setEthUsdRate(usdRate: string) {\n    this.store.dispatch(new PaymentETHUSDRatesSet(usdRate as string));\n  }\n\n  createPayment(payment: PaymentModel) {\n    this.store.dispatch(new PaymentAddOne(payment));\n  }\n\n  removeAllPayment() {\n    this.store.dispatch(new PaymentRemoveAll());\n  }\n\n  removePayment(payment: PaymentModel) {\n    this.store.dispatch(new PaymentRemoveOne(payment.paymentSerial));\n  }\n\n  removePayments(payments: PaymentModel[]) {\n    this.store.dispatch(\n      new PaymentRemoveMany(payments.map((n) => n.paymentSerial))\n    );\n  }\n\n  archiveAllPayment() {\n    this.store.dispatch(new PaymentArchiveAll());\n  }\n\n  upsertPayment(payment: PaymentModel) {\n    this.store.dispatch(new PaymentUpsertOne(payment));\n  }\n\n  updatePayment(payment: PaymentModel) {\n    this.store.dispatch(new PaymentUpdate(payment));\n  }\n\n  getPayment(paymentId: number) {\n    return this.store.pipe(select(selectPayment(paymentId)));\n  }\n\n  getPayments() {\n    return this.store.pipe(select(getPayments));\n  }\n\n  removePaymentStateError() {\n    this.store.dispatch(new PaymentErrorSet(undefined));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSBookmarkStateModel } from 'src/app/models/states/ens-bookmark-interfaces';\nimport {\n  ENSBookmarkAddOne,\n  ENSBookmarkEffectsInit,\n  ENSBookmarkErrorSet,\n  ENSBookmarkRemoveAll,\n  ENSBookmarkRemoveMany,\n  ENSBookmarkRemoveOne,\n  ENSBookmarkUpdate,\n  ENSBookmarkUpsertMany,\n  ENSBookmarkUpsertOne,\n} from '../actions';\nimport {\n  getENSBookmarks,\n  getENSBookmarkState,\n  selectENSBookmark,\n} from '../selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ENSBookmarkFacadeService {\n  getENSBookmarkState$: Observable<ENSBookmarkStateModel>;\n\n  constructor(public store: Store<ENSBookmarkStateModel>) {\n    this.getENSBookmarkState$ = this.store.pipe(select(getENSBookmarkState));\n  }\n\n  startEffects() {\n    this.store.dispatch(new ENSBookmarkEffectsInit());\n  }\n\n  addBookmark(bookmark: DomainMetadataModel) {\n    this.store.dispatch(new ENSBookmarkAddOne(bookmark));\n  }\n\n  removeBookmark(bookmark: DomainMetadataModel) {\n    this.store.dispatch(new ENSBookmarkRemoveOne(bookmark.id));\n  }\n\n  removeAllBookmarks() {\n    this.store.dispatch(new ENSBookmarkRemoveAll());\n  }\n\n  removeBookmarks(bookmark: DomainMetadataModel[]) {\n    this.store.dispatch(new ENSBookmarkRemoveMany(bookmark.map((n) => n.id)));\n  }\n\n  upsertBookmark(bookmark: DomainMetadataModel) {\n    this.store.dispatch(new ENSBookmarkUpsertOne(bookmark));\n  }\n\n  upsertAllBookmark(bookmarks: DomainMetadataModel[]) {\n    this.store.dispatch(new ENSBookmarkUpsertMany(bookmarks));\n  }\n\n  updateBookmark(bookmark: DomainMetadataModel) {\n    this.store.dispatch(new ENSBookmarkUpdate(bookmark));\n  }\n\n  getBookmark(bookmarkId: number) {\n    return this.store.pipe(select(selectENSBookmark(bookmarkId)));\n  }\n\n  getBookmarks() {\n    return this.store.pipe(select(getENSBookmarks));\n  }\n\n  removeBookmarkStateError() {\n    this.store.dispatch(new ENSBookmarkErrorSet(undefined));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSRegistrationStateModel } from 'src/app/models/states/ens-registration-interfaces';\nimport {\n  ENSRegistrationAddOne,\n  ENSRegistrationEffectsInit,\n  ENSRegistrationErrorSet,\n  ENSRegistrationRemoveAll,\n  ENSRegistrationRemoveMany,\n  ENSRegistrationRemoveOne,\n  ENSRegistrationUpdate,\n  ENSRegistrationUpsertMany,\n  ENSRegistrationUpsertOne,\n} from '../actions';\nimport {\n  getENSRegistrations,\n  getENSRegistrationState,\n  selectENSRegistration,\n} from '../selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ENSRegistrationFacadeService {\n  getENSRegistrationState$: Observable<ENSRegistrationStateModel>;\n\n  constructor(public store: Store<ENSRegistrationStateModel>) {\n    this.getENSRegistrationState$ = this.store.pipe(\n      select(getENSRegistrationState)\n    );\n  }\n\n  startEffects() {\n    this.store.dispatch(new ENSRegistrationEffectsInit());\n  }\n\n  addRegistration(registration: DomainMetadataModel) {\n    this.store.dispatch(new ENSRegistrationAddOne(registration));\n  }\n\n  removeRegistration(registration: DomainMetadataModel) {\n    this.store.dispatch(new ENSRegistrationRemoveOne(registration.id));\n  }\n\n  removeRegistrations(registration: DomainMetadataModel[]) {\n    this.store.dispatch(\n      new ENSRegistrationRemoveMany(registration.map((n) => n.id))\n    );\n  }\n\n  removeAllRegistrations() {\n    this.store.dispatch(new ENSRegistrationRemoveAll());\n  }\n\n  upsertRegistration(registration: DomainMetadataModel) {\n    this.store.dispatch(new ENSRegistrationUpsertOne(registration));\n  }\n\n  upsertAllRegistration(registrations: DomainMetadataModel[]) {\n    this.store.dispatch(new ENSRegistrationUpsertMany(registrations));\n  }\n\n  updateRegistration(registration: DomainMetadataModel) {\n    this.store.dispatch(new ENSRegistrationUpdate(registration));\n  }\n\n  getRegistration(registrationId: number) {\n    return this.store.pipe(select(selectENSRegistration(registrationId)));\n  }\n\n  getRegistrations() {\n    return this.store.pipe(select(getENSRegistrations));\n  }\n\n  removeRegistrationStateError() {\n    this.store.dispatch(new ENSRegistrationErrorSet(undefined));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { CategoryModel } from 'src/app/models/category';\nimport { CategoriesStateModel } from 'src/app/models/states/categories-interfaces';\nimport {\n  CategoryAddOne,\n  CategoryEffectsInit,\n  CategoryErrorSet,\n  CategoryRemoveAll,\n  CategoryRemoveMany,\n  CategoryRemoveOne,\n  CategoryUpdate,\n  CategoryUpsertMany,\n  CategoryUpsertOne,\n} from '../actions';\nimport { getCategorys, getCategoryState, selectCategory } from '../selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryFacadeService {\n  getCategoryState$: Observable<CategoriesStateModel>;\n\n  constructor(public store: Store<CategoriesStateModel>) {\n    this.getCategoryState$ = this.store.pipe(select(getCategoryState));\n  }\n\n  startEffects() {\n    this.store.dispatch(new CategoryEffectsInit());\n  }\n\n  addBookmark(category: CategoryModel) {\n    this.store.dispatch(new CategoryAddOne(category));\n  }\n\n  removeBookmark(category: CategoryModel) {\n    this.store.dispatch(new CategoryRemoveOne(category.id));\n  }\n\n  removeAllBookmarks() {\n    this.store.dispatch(new CategoryRemoveAll());\n  }\n\n  removeBookmarks(categories: CategoryModel[]) {\n    this.store.dispatch(new CategoryRemoveMany(categories.map((n) => n.id)));\n  }\n\n  upsertBookmark(category: CategoryModel) {\n    this.store.dispatch(new CategoryUpsertOne(category));\n  }\n\n  upsertAllBookmark(categories: CategoryModel[]) {\n    this.store.dispatch(new CategoryUpsertMany(categories));\n  }\n\n  updateBookmark(category: CategoryModel) {\n    this.store.dispatch(new CategoryUpdate(category));\n  }\n\n  getBookmark(bookmarkId: number) {\n    return this.store.pipe(select(selectCategory(bookmarkId)));\n  }\n\n  getBookmarks() {\n    return this.store.pipe(select(getCategorys));\n  }\n\n  removeBookmarkStateError() {\n    this.store.dispatch(new CategoryErrorSet(undefined));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { NavigatorButtonsStateModel } from '../../models/states/navigator-interfaces';\nimport { NavigatorButtonsStateSet } from '../actions';\nimport { initialNavigatorButtonsState } from '../reducers';\nimport { getCurrentNavigatorButtonsState } from '../selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigatorButtonsFacadeService {\n  disabledButtonnavigatorState$: Observable<NavigatorButtonsStateModel>;\n\n  constructor(public store: Store<NavigatorButtonsStateModel>) {\n    this.disabledButtonnavigatorState$ = this.store.pipe(\n      select(getCurrentNavigatorButtonsState)\n    );\n  }\n\n  newNavigatorButtonsState(navigatorState: NavigatorButtonsStateModel) {\n    setTimeout(() => {\n      this.store.dispatch(new NavigatorButtonsStateSet(navigatorState));\n    }, 100);\n  }\n\n  resetNavigatorButtonState() {\n    setTimeout(() => {\n      this.store.dispatch(\n        new NavigatorButtonsStateSet(initialNavigatorButtonsState)\n      );\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { NavigatorStateModel } from '../../models/states/navigator-interfaces';\nimport { NavigatorStateSet } from '../actions';\nimport { initialNavigatorState } from '../reducers';\nimport { getCurrentNavigatorState } from '../selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigatorFacadeService {\n  navigatorState$: Observable<NavigatorStateModel>;\n\n  constructor(public store: Store<NavigatorStateModel>) {\n    this.navigatorState$ = this.store.pipe(select(getCurrentNavigatorState));\n  }\n\n  newNavigatorState(navigatorState: NavigatorStateModel) {\n    setTimeout(() => {\n      this.store.dispatch(new NavigatorStateSet(navigatorState));\n    });\n  }\n\n  resetNavigatorState() {\n    setTimeout(() => {\n      this.store.dispatch(new NavigatorStateSet(initialNavigatorState));\n    });\n  }\n}\n","import { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { NavigatorFacadeService } from './navigator.facades';\nimport { NavigatorButtonsFacadeService } from './navigator-buttons.facades';\nimport {\n  getCriticalErrorState,\n  getCurrentErrorCode,\n  getCurrentPageLoadState,\n  getCurrentPagesState,\n  getCurrentPageVisibility,\n  getIpfsError,\n  getIpfsState,\n} from '../selectors';\nimport {\n  PageGotoRoute,\n  PagesNetworkOfflineStateInvoke,\n  PagesNetworkStateSet,\n  PagesNewPageStateSet,\n  PagesShowLoadingProgressBarOnLoad,\n  PagesHideLoadingProgressBarOnLoadFinished,\n  PagesSetPageSlide,\n  PagesSetChainCode,\n  PagesSetIpfsError,\n  PagesSetIpfsState,\n  PagesSetCriticalError,\n  PagesSetRPCProvider,\n  PagesEffectsInit,\n} from '../actions';\nimport {\n  GotoPageRouteActionPayloadModel,\n  PagesEnum,\n  PagesStateModel,\n} from '../../models/states/pages-interfaces';\nimport { MatDialog } from '@angular/material/dialog';\nimport { environment } from '../../../environments/environment';\nimport { IpfsErrorsEnum } from 'src/app/models/error-enums';\nimport { IpfsStatesEnum } from 'src/app/models/ipfs';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\nimport { GenericDialogComponent } from 'src/app/widgets/generic-dialog';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PagesFacadeService {\n  pagesState$: Observable<PagesStateModel>;\n  pagesIpfsState$: Observable<IpfsStatesEnum>;\n  pagesIpfsError$: Observable<IpfsErrorsEnum>;\n  pageErrorCode$: Observable<string>;\n  pageLoadingState$: Observable<boolean>;\n  pageCritiaclError$: Observable<boolean>;\n  pageVisibility$: Observable<boolean>;\n\n  constructor(\n    public router: Router,\n    public store: Store<PagesStateModel>,\n    public navigatorFacade: NavigatorFacadeService,\n    public navigatorButtonFacade: NavigatorButtonsFacadeService,\n    public dialog: MatDialog,\n    public ngZone: NgZone\n  ) {\n    this.pagesState$ = this.store.pipe(select(getCurrentPagesState));\n    this.pageErrorCode$ = this.store.pipe(select(getCurrentErrorCode));\n    this.pagesIpfsState$ = this.store.pipe(select(getIpfsState));\n    this.pagesIpfsError$ = this.store.pipe(select(getIpfsError));\n    this.pageLoadingState$ = this.store.pipe(select(getCurrentPageLoadState));\n    this.pageCritiaclError$ = this.store.pipe(select(getCriticalErrorState));\n    this.pageVisibility$ = this.store.pipe(select(getCurrentPageVisibility));\n  }\n\n  startEffects() {\n    this.store.dispatch(new PagesEffectsInit());\n  }\n\n  showLoadingProgressBar() {\n    document.getElementById('app-splash-container').style.display = 'flex';\n    this.store.dispatch(new PagesShowLoadingProgressBarOnLoad());\n  }\n\n  showNotEnabledToolDialog() {\n    this.dialog.open(GenericDialogComponent, {\n      data: {\n        titleText: 'HEADER.FEATURE_DISABLED',\n        subText: 'LABELS.FEATURE_DISABLED',\n      },\n      panelClass: 'cos-generic-dialog',\n    });\n  }\n\n  setPageCriticalError(errorOccured: boolean, redirect = true) {\n    this.store.dispatch(new PagesSetCriticalError(errorOccured, redirect));\n  }\n\n  setRpcProvider(providerData: RPCProviderModel) {\n    this.store.dispatch(new PagesSetRPCProvider(providerData));\n  }\n\n  setIpfsError(error: IpfsErrorsEnum) {\n    this.store.dispatch(new PagesSetIpfsError(error));\n  }\n\n  setIpfsState(state: IpfsStatesEnum) {\n    this.store.dispatch(new PagesSetIpfsState(state));\n  }\n\n  hideLoadingProgressBar() {\n    document.getElementById('app-splash-container').style.display = 'none';\n    this.store.dispatch(new PagesHideLoadingProgressBarOnLoadFinished());\n  }\n\n  newPagesState(pagesState: PagesStateModel) {\n    this.store.dispatch(new PagesNewPageStateSet(pagesState));\n    this.navigatorFacade.resetNavigatorState();\n  }\n\n  newNetworkState(networkState: PagesStateModel) {\n    this.store.dispatch(new PagesNetworkStateSet(networkState));\n  }\n\n  setNetworkChainCode(chainCode: number, firstTimeSet = false) {\n    this.store.dispatch(new PagesSetChainCode(chainCode, firstTimeSet));\n  }\n\n  setChainCodeByNetworkName(networkName: string, firstTimeSet = false) {\n    const networkData = environment.networks[networkName];\n    const chainCode = networkData.chainId;\n    this.store.dispatch(new PagesSetChainCode(chainCode, firstTimeSet));\n  }\n\n  triggerNetworkOfflineDialog() {\n    this.store.dispatch(new PagesNetworkOfflineStateInvoke());\n  }\n\n  setPageSlide(pageSlide: number) {\n    this.store.dispatch(new PagesSetPageSlide(pageSlide));\n  }\n\n  gotoPageRoute(pageRoute: string, toPageId: PagesEnum) {\n    this.store.dispatch(\n      new PageGotoRoute({\n        route: pageRoute,\n        pageId: toPageId,\n      } as GotoPageRouteActionPayloadModel)\n    );\n    this.navigatorFacade.resetNavigatorState();\n    this.navigatorButtonFacade.resetNavigatorButtonState();\n  }\n}\n","import { NavigatorButtonsStateModel } from \"../../models/states/navigator-interfaces\";\nimport { GetNavigatorButtonsState, SetNavigatorButtonsState } from \"../actions\";\n\nexport const initialNavigatorButtonsState: NavigatorButtonsStateModel = {\n  disabledButtons: undefined,\n};\n\nexport function NavigatorButtonsReducers(\n  state: NavigatorButtonsStateModel = initialNavigatorButtonsState,\n  action: any\n) {\n  switch (action.type) {\n    case SetNavigatorButtonsState: {\n      return action.payload;\n    }\n\n    case GetNavigatorButtonsState: {\n      return state;\n    }\n\n    default:\n      return state;\n  }\n}\n","import { NavigatorStateModel } from \"../../models/states/navigator-interfaces\";\nimport { GetNavigatorState, SetNavigatorState } from \"../actions\";\n\nexport const initialNavigatorState: NavigatorStateModel = {\n  navigatorActiveButtonId: undefined,\n  navigatorData: undefined,\n};\n\nexport function NavigatorReducers(\n  state: NavigatorStateModel = initialNavigatorState,\n  action: any\n) {\n  switch (action.type) {\n    case SetNavigatorState: {\n      return action.payload;\n    }\n\n    case GetNavigatorState: {\n      return state;\n    }\n\n    default:\n      return state;\n  }\n}\n","export enum IpfsStatesEnum {\n  IPFS_READY = 'IPFS.READY',\n  IPFS_INITIALISING = 'IPFS.INITIALISING',\n  IPFS_FINDING = 'IPFS.FINDING_PEERS',\n  IPFS_FAILED = 'IPFS.FAILED',\n  IPFS_PUBLISHING = 'IPFS.PUBLISHING',\n}\n","import { IpfsStatesEnum } from 'src/app/models/ipfs';\nimport { generalConfigurations } from '../../configurations';\nimport { PagesStateModel } from '../../models/states/pages-interfaces';\nimport {\n  GetPagesState,\n  GotoPageRoute,\n  HideLoadingProgressBarOnLoadFinished,\n  SetPageChainCode,\n  SetPageIpfsErrors,\n  SetPageIpfsState,\n  SetPagesCriticalError,\n  SetPagesNewPageState,\n  SetPagesPageSlide,\n  SetPagesState,\n  SetPagesVisibility,\n  SetRPCProvider,\n  ShowLoadingProgressBarOnLoad,\n} from '../actions';\n\nconst initialPagesState: PagesStateModel = {\n  optionalProvider: undefined,\n  pageVisibility: true,\n  criticalErrorOccured: false,\n  currentPageId: generalConfigurations.defaultPage,\n  currentPageSlide: 0,\n  errorCode: undefined,\n  ipfsError: undefined,\n  ipfsReady: IpfsStatesEnum.IPFS_INITIALISING,\n  networkStatus: undefined,\n  networkChainCode: undefined,\n  isPageLoading: false,\n};\n\nexport function PagesReducers(\n  state: PagesStateModel = initialPagesState,\n  action: any\n) {\n  switch (action.type) {\n    case SetPagesState: {\n      const newState = {\n        ...state,\n        currentPageId:\n          'currentPageId' in action.payload\n            ? action.payload.currentPageId\n            : state.currentPageId,\n        networkStatus:\n          'networkStatus' in action.payload\n            ? action.payload.networkStatus\n            : state.networkStatus,\n        networkChainCode:\n          'networkChainCode' in action.payload\n            ? action.payload.networkChainCode\n            : state.networkChainCode,\n        currentPageSlide: state.currentPageSlide,\n        errorCode:\n          'errorCode' in action.payload ? action.payload.errorCode : undefined,\n      };\n      return newState;\n    }\n\n    case SetRPCProvider: {\n      const newState = {\n        ...state,\n        optionalProvider: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPagesVisibility: {\n      const newState = {\n        ...state,\n        pageVisibility: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPagesCriticalError: {\n      const newState = {\n        ...state,\n        criticalErrorOccured: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPageIpfsErrors: {\n      const newState = {\n        ...state,\n        ipfsError: action.payload,\n        ipfsReady: IpfsStatesEnum.IPFS_FAILED,\n      };\n      return newState;\n    }\n\n    case SetPageIpfsState: {\n      const newState = {\n        ...state,\n        ipfsReady: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPagesPageSlide: {\n      const newState = {\n        ...state,\n        currentPageSlide: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPagesNewPageState: {\n      const newState = {\n        ...state,\n        pageId: action.payload.currentPageId,\n        currentPageSlide: state.currentPageSlide,\n      };\n      return newState;\n    }\n\n    case SetPagesPageSlide: {\n      const newState = {\n        ...state,\n        currentPageSlide: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPageChainCode: {\n      const newState = {\n        ...state,\n        networkChainCode: action.payload,\n      };\n      return newState;\n    }\n\n    case ShowLoadingProgressBarOnLoad: {\n      const newState = {\n        ...state,\n        isPageLoading: true,\n      };\n      return newState;\n    }\n\n    case HideLoadingProgressBarOnLoadFinished: {\n      const newState = {\n        ...state,\n        isPageLoading: false,\n      };\n      return newState;\n    }\n\n    case GetPagesState: {\n      return state;\n    }\n\n    case GotoPageRoute: {\n      return {\n        ...state,\n        currentPageId: action.payload.pageId,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { UserModel, UserStateModel } from '../../models/states/user-interfaces';\nimport {\n  AddUser,\n  GetUserState,\n  RegisterUser,\n  RemoveUser,\n  RemoveUserError,\n  RemoveUserState,\n  SetUserError,\n  SetUserPoaps,\n  SetUserState,\n  UpdateUser,\n} from '../actions';\n\nconst initialUserState: UserStateModel = {\n  error: undefined,\n  loading: false,\n  success: undefined,\n  user: {} as UserModel,\n};\n\nexport function UserReducers(\n  state: UserStateModel = initialUserState,\n  action: any\n) {\n  switch (action.type) {\n    case SetUserError: {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    }\n\n    case SetUserPoaps: {\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          poapsResolved: action.payload.poapsResolved,\n          poaps: action.payload.poaps,\n          poapTokens: action.payload.poapTokens,\n        },\n        loading: false,\n      };\n    }\n\n    case SetUserState: {\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    }\n\n    case AddUser: {\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    }\n\n    case UpdateUser: {\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    }\n\n    case GetUserState: {\n      const newState = {\n        ...state,\n      };\n      return newState;\n    }\n\n    case RemoveUserError: {\n      return {\n        ...state,\n        loading: false,\n        error: undefined,\n      };\n    }\n\n    case RegisterUser: {\n      return {\n        ...state,\n        loading: true,\n        error: undefined,\n      };\n    }\n\n    case RemoveUser: {\n      return {\n        ...state,\n        user: {},\n      };\n    }\n\n    case RemoveUserState: {\n      return initialUserState;\n    }\n\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport {\n  PaymentModel,\n  PaymentStateModel,\n} from '../../models/states/payment-interfaces';\nimport {\n  UpsertOnePayment,\n  UpsertManyPayment,\n  RemoveOnePayment,\n  RemoveManyPayment,\n  RemoveAllPayment,\n  SetPaymentError,\n  UpdatePayment,\n  AddOnePayment,\n  SetEthUSDRates,\n  ArchiveAllPayment,\n  CancelledPayment,\n} from '../actions';\n\nexport function selectPaymentId(payment: PaymentModel): string {\n  return payment.id;\n}\n\nexport const adapter: EntityAdapter<PaymentModel> =\n  createEntityAdapter<PaymentModel>({\n    selectId: selectPaymentId,\n  });\n\nexport const initialPaymentState: PaymentStateModel = adapter.getInitialState({\n  error: undefined,\n  loading: false,\n  ethUsdPrice: '0.00',\n  paymentCancelled: false,\n});\n\nexport function PaymentReducers(\n  state: PaymentStateModel = initialPaymentState,\n  action: any\n) {\n  switch (action.type) {\n    case UpsertOnePayment:\n    case UpdatePayment: {\n      const stateChange = adapter.upsertOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case SetEthUSDRates: {\n      return {\n        ...state,\n        ethUsdPrice: action.payload,\n      };\n    }\n\n    case AddOnePayment: {\n      const stateChange = adapter.addOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: true,\n        paymentCancelled: false,\n      };\n    }\n\n    case UpsertManyPayment: {\n      const stateChange = adapter.upsertMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case RemoveOnePayment: {\n      const stateChange = adapter.removeOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case RemoveManyPayment: {\n      const stateChange = adapter.removeMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case RemoveAllPayment: {\n      const stateChange = adapter.removeAll(state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case ArchiveAllPayment: {\n      const payments = state.entities;\n      const updatedPayments = [];\n      for (const p of Object.keys(payments)) {\n        updatedPayments.push({ ...payments[p], archived: true });\n      }\n      const stateChange = adapter.upsertMany(updatedPayments, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case SetPaymentError: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case UpdatePayment: {\n      return {\n        ...state,\n        error: undefined,\n        loading: true,\n        paymentCancelled: false,\n      };\n    }\n\n    case CancelledPayment: {\n      return {\n        ...state,\n        error: undefined,\n        loading: false,\n        paymentCancelled: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSRegistrationStateModel } from '../../models/states/ens-registration-interfaces';\nimport {\n  UpsertOneENSRegistration,\n  UpsertManyENSRegistration,\n  RemoveOneENSRegistration,\n  RemoveManyENSRegistration,\n  RemoveAllENSRegistration,\n  SetENSRegistrationError,\n  UpdateENSRegistration,\n  AddOneENSRegistration,\n} from '../actions';\n\nexport function selectENSRegistrationId(\n  registration: DomainMetadataModel\n): string {\n  return registration.id;\n}\n\nexport const ensRegistrationAdapter: EntityAdapter<DomainMetadataModel> =\n  createEntityAdapter<DomainMetadataModel>({\n    selectId: selectENSRegistrationId,\n  });\n\nexport const initialENSRegistrationState: ENSRegistrationStateModel =\n  ensRegistrationAdapter.getInitialState({\n    error: undefined,\n    loading: false,\n  });\n\nexport function ENSRegistrationReducers(\n  state: ENSRegistrationStateModel = initialENSRegistrationState,\n  action: any\n) {\n  switch (action.type) {\n    case UpsertOneENSRegistration:\n    case UpdateENSRegistration: {\n      const stateChange = ensRegistrationAdapter.upsertOne(\n        action.payload,\n        state\n      );\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case AddOneENSRegistration: {\n      const stateChange = ensRegistrationAdapter.addOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    case UpsertManyENSRegistration: {\n      const stateChange = ensRegistrationAdapter.upsertMany(\n        action.payload,\n        state\n      );\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveOneENSRegistration: {\n      const stateChange = ensRegistrationAdapter.removeOne(\n        action.payload,\n        state\n      );\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveManyENSRegistration: {\n      const stateChange = ensRegistrationAdapter.removeMany(\n        action.payload,\n        state\n      );\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveAllENSRegistration: {\n      const stateChange = ensRegistrationAdapter.removeAll(state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case SetENSRegistrationError: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    }\n\n    case UpdateENSRegistration: {\n      return {\n        ...state,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSBookmarkStateModel } from '../../models/states/ens-bookmark-interfaces';\nimport {\n  UpsertOneENSBookmark,\n  UpsertManyENSBookmark,\n  RemoveOneENSBookmark,\n  RemoveManyENSBookmark,\n  RemoveAllENSBookmark,\n  SetENSBookmarkError,\n  UpdateENSBookmark,\n  AddOneENSBookmark,\n} from '../actions';\n\nexport function selectENSBookmarkId(bookmark: DomainMetadataModel): string {\n  return bookmark.id;\n}\n\nexport const ensBookmarkAdapter: EntityAdapter<DomainMetadataModel> =\n  createEntityAdapter<DomainMetadataModel>({\n    selectId: selectENSBookmarkId,\n  });\n\nexport const initialENSBookmarkState: ENSBookmarkStateModel =\n  ensBookmarkAdapter.getInitialState({\n    error: undefined,\n    loading: false,\n  });\n\nexport function ENSBookmarkReducers(\n  state: ENSBookmarkStateModel = initialENSBookmarkState,\n  action: any\n) {\n  switch (action.type) {\n    case UpsertOneENSBookmark:\n    case UpdateENSBookmark: {\n      const stateChange = ensBookmarkAdapter.upsertOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case AddOneENSBookmark: {\n      const stateChange = ensBookmarkAdapter.addOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    case UpsertManyENSBookmark: {\n      const stateChange = ensBookmarkAdapter.upsertMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveOneENSBookmark: {\n      const stateChange = ensBookmarkAdapter.removeOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveManyENSBookmark: {\n      const stateChange = ensBookmarkAdapter.removeMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveAllENSBookmark: {\n      const stateChange = ensBookmarkAdapter.removeAll(state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case SetENSBookmarkError: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    }\n\n    case UpdateENSBookmark: {\n      return {\n        ...state,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { CategoryModel } from 'src/app/models/category';\nimport { CategoriesStateModel } from 'src/app/models/states/categories-interfaces';\nimport {\n  UpsertOneCategory,\n  UpsertManyCategory,\n  RemoveOneCategory,\n  RemoveManyCategory,\n  RemoveAllCategory,\n  SetCategoryError,\n  UpdateCategory,\n  AddOneCategory,\n  SetCategoriesMetadata,\n  SetCategoriesRootVolumeData,\n} from '../actions';\n\nexport function selectCategoryId(category: CategoryModel): string {\n  return category.id;\n}\n\nexport const CategoryAdapter: EntityAdapter<CategoryModel> =\n  createEntityAdapter<CategoryModel>({\n    selectId: selectCategoryId,\n  });\n\nexport const initialCategoryState: CategoriesStateModel =\n  CategoryAdapter.getInitialState({\n    categoriesMetadata: undefined,\n    categoriesRootVolumeData: undefined,\n    error: undefined,\n    loading: false,\n  });\n\nexport function CategoryReducers(\n  state: CategoriesStateModel = initialCategoryState,\n  action: any\n) {\n  switch (action.type) {\n    case SetCategoriesRootVolumeData: {\n      return {\n        ...state,\n        categoriesRootVolumeData: action.payload,\n        loading: false,\n      };\n    }\n\n    case SetCategoriesMetadata: {\n      return {\n        ...state,\n        categoriesMetadata: action.payload,\n        loading: false,\n      };\n    }\n\n    case UpsertOneCategory:\n    case UpdateCategory: {\n      const stateChange = CategoryAdapter.upsertOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case AddOneCategory: {\n      const stateChange = CategoryAdapter.addOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    case UpsertManyCategory: {\n      const stateChange = CategoryAdapter.upsertMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveOneCategory: {\n      const stateChange = CategoryAdapter.removeOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveManyCategory: {\n      const stateChange = CategoryAdapter.removeMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveAllCategory: {\n      const stateChange = CategoryAdapter.removeAll(state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case SetCategoryError: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    }\n\n    case UpdateCategory: {\n      return {\n        ...state,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { NavigatorButtonsStateModel } from \"../../models/states/navigator-interfaces\";\n\nexport const getNavigatorButtonsState =\n  createFeatureSelector<NavigatorButtonsStateModel>(\"NavigatorButtonsState\");\n\nexport const getCurrentNavigatorButtonsState = createSelector(\n  getNavigatorButtonsState,\n  (state: NavigatorButtonsStateModel) => state\n);\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { NavigatorStateModel } from \"../../models/states/navigator-interfaces\";\n\nexport const getNavigatorState =\n  createFeatureSelector<NavigatorStateModel>(\"NavigatorState\");\n\nexport const getCurrentNavigatorState = createSelector(\n  getNavigatorState,\n  (state: NavigatorStateModel) => state\n);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { PagesStateModel } from '../../models/states/pages-interfaces';\n\nexport const getPagesState =\n  createFeatureSelector<PagesStateModel>('PagesState');\n\nexport const getCurrentPagesState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state\n);\n\nexport const getCurrentNetworkState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.networkStatus\n);\n\nexport const getCurrentPageVisibility = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.pageVisibility\n);\n\nexport const getCurrentNetworkChainId = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.networkChainCode\n);\n\nexport const getCurrentPageLoadState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.isPageLoading\n);\n\nexport const getCriticalErrorState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.criticalErrorOccured\n);\n\nexport const getIpfsState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.ipfsReady\n);\n\nexport const getIpfsError = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.ipfsError\n);\n\nexport const getCurrentErrorCode = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => {\n    if ('errorCode' in state === false) {\n      return undefined;\n    }\n    if (state.errorCode === undefined) {\n      return undefined;\n    }\n    return state.errorCode;\n  }\n);\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { UserStateModel } from \"../../models/states/user-interfaces\";\n\nexport const getUserState = createFeatureSelector<UserStateModel>(\"UserState\");\nexport const getUser = createSelector(getUserState, (state) => state);\nexport const getCurrentUserState = createSelector(\n  getUserState,\n  (state: UserStateModel) => state\n);\nexport const getCurrentUser = createSelector(\n  getUser,\n  (state: UserStateModel) => state.user\n);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport {\n  PaymentModel,\n  PaymentStateModel,\n} from '../../models/states/payment-interfaces';\n\nexport const getPaymentStateFull =\n  createFeatureSelector<PaymentStateModel>('PaymentState');\n\nexport const getPaymentState = createSelector(\n  getPaymentStateFull,\n  (state) => state\n);\n\nexport const getEthUsdPrice = createSelector(\n  getPaymentStateFull,\n  (state) => state.ethUsdPrice\n);\n\nexport const getPayments = createSelector(getPaymentStateFull, (state) =>\n  Object.values(state.entities)\n);\n\nexport const getPaymentIds = createSelector(\n  getPaymentStateFull,\n  (state) => state.ids\n);\n\nexport const selectPayment = (id: number) =>\n  createSelector(getPaymentStateFull, (state) => {\n    if ((state.ids as number[]).indexOf(id) <= -1) {\n      return undefined;\n    }\n    return state.entities[id] as PaymentModel;\n  });\n\nexport const getPaymentStateError = createSelector(\n  getPaymentStateFull,\n  (state) => state.error\n);\n\nexport const getPaymentStateLoading = createSelector(\n  getPaymentStateFull,\n  (state) => state.loading\n);\n\nexport const getPendingPayments = createSelector(\n  getPaymentStateFull,\n  (state) => {\n    const pendingPs: PaymentModel[] = [];\n    const ps = Object.values(state.entities) as PaymentModel[];\n    for (const p of ps) {\n      if (p.paymentStatus === false) {\n        pendingPs.push(p);\n      }\n    }\n    if (pendingPs.length <= 0) {\n      return null;\n    }\n    return pendingPs;\n  }\n);\n\nexport const getArchivedPayments = createSelector(\n  getPaymentStateFull,\n  (state) => {\n    const archivedPs: PaymentModel[] = [];\n    const ps = Object.values(state.entities) as PaymentModel[];\n    for (const p of ps) {\n      if (p.archived === true) {\n        archivedPs.push(p);\n      }\n    }\n    if (archivedPs.length <= 0) {\n      return null;\n    }\n    return archivedPs;\n  }\n);\n\nexport const isPaymentDuplicate = (id: string) =>\n  createSelector(getPaymentStateFull, (state) => {\n    if (Object.keys(state.entities).indexOf(id) > -1) {\n      return state.entities[id] as PaymentModel;\n    }\n    return false;\n  });\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSRegistrationStateModel } from '../../models/states/ens-registration-interfaces';\n\nexport const getENSRegistrationStateFull =\n  createFeatureSelector<ENSRegistrationStateModel>('ENSRegistrationState');\n\nexport const getENSRegistrationState = createSelector(\n  getENSRegistrationStateFull,\n  (state) => state\n);\n\nexport const getENSRegistrations = createSelector(\n  getENSRegistrationStateFull,\n  (state) => Object.values(state.entities)\n);\n\nexport const getENSRegistrationIds = createSelector(\n  getENSRegistrationStateFull,\n  (state) => state.ids\n);\n\nexport const selectENSRegistration = (id: number) =>\n  createSelector(getENSRegistrationStateFull, (state) => {\n    if ((state.ids as number[]).indexOf(id) <= -1) {\n      return undefined;\n    }\n    return state.entities[id] as DomainMetadataModel;\n  });\n\nexport const getENSRegistrationStateError = createSelector(\n  getENSRegistrationStateFull,\n  (state) => state.error\n);\n\nexport const getENSRegistrationStateLoading = createSelector(\n  getENSRegistrationStateFull,\n  (state) => state.loading\n);\n\nexport const isENSRegistrationDuplicate = (id: string) =>\n  createSelector(getENSRegistrationStateFull, (state) => {\n    if (Object.keys(state.entities).indexOf(id) > -1) {\n      return state.entities[id] as DomainMetadataModel;\n    }\n    return false;\n  });\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSBookmarkStateModel } from '../../models/states/ens-bookmark-interfaces';\n\nexport const getENSBookmarkStateFull =\n  createFeatureSelector<ENSBookmarkStateModel>('ENSBookmarkState');\n\nexport const getENSBookmarkState = createSelector(\n  getENSBookmarkStateFull,\n  (state) => state\n);\n\nexport const getENSBookmarks = createSelector(\n  getENSBookmarkStateFull,\n  (state) => Object.values(state.entities)\n);\n\nexport const getENSBookmarkIds = createSelector(\n  getENSBookmarkStateFull,\n  (state) => state.ids\n);\n\nexport const selectENSBookmark = (id: number) =>\n  createSelector(getENSBookmarkStateFull, (state) => {\n    if ((state.ids as number[]).indexOf(id) <= -1) {\n      return undefined;\n    }\n    return state.entities[id] as DomainMetadataModel;\n  });\n\nexport const getENSBookmarkStateError = createSelector(\n  getENSBookmarkStateFull,\n  (state) => state.error\n);\n\nexport const getENSBookmarkStateLoading = createSelector(\n  getENSBookmarkStateFull,\n  (state) => state.loading\n);\n\nexport const isENSBookmarkDuplicate = (id: string) =>\n  createSelector(getENSBookmarkStateFull, (state) => {\n    if (Object.keys(state.entities).indexOf(id) > -1) {\n      return state.entities[id] as DomainMetadataModel;\n    }\n    return false;\n  });\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { CategoriesStateModel } from 'src/app/models/states/categories-interfaces';\n\nexport const getCategoryStateFull =\n  createFeatureSelector<CategoriesStateModel>('CategoriesState');\n\nexport const getCategoryState = createSelector(\n  getCategoryStateFull,\n  (state) => state\n);\n\nexport const getCategorys = createSelector(getCategoryStateFull, (state) =>\n  Object.values(state.entities)\n);\n\nexport const getCategoryIds = createSelector(\n  getCategoryStateFull,\n  (state) => state.ids\n);\n\nexport const selectCategory = (id: number) =>\n  createSelector(getCategoryStateFull, (state) => {\n    if ((state.ids as number[]).indexOf(id) <= -1) {\n      return undefined;\n    }\n    return state.entities[id] as DomainMetadataModel;\n  });\n\nexport const getCategoryStateError = createSelector(\n  getCategoryStateFull,\n  (state) => state.error\n);\n\nexport const getCategoryStateLoading = createSelector(\n  getCategoryStateFull,\n  (state) => state.loading\n);\n\nexport const isCategoryDuplicate = (id: string) =>\n  createSelector(getCategoryStateFull, (state) => {\n    if (Object.keys(state.entities).indexOf(id) > -1) {\n      return state.entities[id] as DomainMetadataModel;\n    }\n    return false;\n  });\n","<div mat-dialog-content>\n  <ng-container *ngIf=\"data.showSpinner === true\">\n    <app-icon\n      *ngIf=\"data.customIcon !== undefined && data.lightColour === true\"\n      [iconSize]=\"data.spinnerSize\"\n      class=\"cos-padding-3\"\n    >\n      <ng-container\n        *ngIf=\"\n          data.customIcon !== undefined &&\n          data.customIcon === '' &&\n          data.matIcon !== undefined &&\n          data.matIcon === ''\n        \"\n      >\n        lspin\n      </ng-container>\n      <ng-container\n        *ngIf=\"data.customIcon !== undefined && data.customIcon !== ''\"\n      >\n        {{ data.customIcon }}\n      </ng-container>\n    </app-icon>\n    <ng-container *ngIf=\"data.matIcon !== undefined && data.matIcon !== ''\">\n      <div\n        fxLayoutAlign=\"center center\"\n        fxFlexAlign=\"center\"\n        class=\"cos-fluid-width cos-fluid-height cos-padding-4\"\n      >\n        <mat-icon color=\"primary\" class=\"cos-large-icon\">\n          {{ data.matIcon }}\n        </mat-icon>\n      </div>\n    </ng-container>\n    <app-icon\n      *ngIf=\"data.customIcon !== undefined && data.lightColour === false\"\n      [iconSize]=\"data.spinnerSize\"\n      class=\"cos-padding-3\"\n    >\n      <ng-container *ngIf=\"data.customIcon === ''\"> spin </ng-container>\n      <ng-container *ngIf=\"data.customIcon !== ''\">\n        {{ data.customIcon }}\n      </ng-container>\n    </app-icon>\n  </ng-container>\n  <div\n    [ngClass]=\"textAlign\"\n    *ngIf=\"data.titleText !== undefined && data.titleText !== ''\"\n    class=\"cos-margin-1 cos-no-margin-top cos-no-margin-left cos-no-margin-right cos-body-0\"\n  >\n    <b>\n      {{ data.titleText | translate }}\n    </b>\n  </div>\n  <div\n    *ngIf=\"data.titleText === undefined || data.titleText === ''\"\n    [ngClass]=\"textAlign\"\n    class=\"cos-margin-1 cos-no-margin-top cos-no-margin-left cos-no-margin-right\"\n  >\n    {{ data.message | translate }}\n  </div>\n  <div\n    [ngClass]=\"textAlign\"\n    *ngIf=\"data.subText !== ''\"\n    class=\"cos-margin-4 cos-no-margin-top cos-no-margin-left cos-no-margin-right\"\n  >\n    {{ data.subText | translate }}\n  </div>\n</div>\n<div\n  mat-dialog-actions\n  [fxLayoutAlign]=\"data.textAlign === 'center' ? 'center center' : 'end center'\"\n>\n  <ng-container *ngIf=\"data.showYesNo !== undefined && data.showYesNo === true\">\n    <div fxFlex fxLayout=\"row\">\n      <button\n        (click)=\"yesNoPressed(false)\"\n        fxFlex\n        mat-button\n        class=\"cos-body-4\"\n      >\n        <b>\n          {{ \"BUTTON.CANCEL\" | translate }}\n        </b>\n      </button>\n      <button (click)=\"yesNoPressed(true)\" fxFlex mat-button class=\"cos-body-4\">\n        <b>\n          {{ \"BUTTON.PROCEED\" | translate }}\n        </b>\n      </button>\n    </div>\n  </ng-container>\n  <ng-container\n    *ngIf=\"\n      data.showYesNo === undefined ||\n      (data.showYesNo !== undefined && data.showYesNo === false)\n    \"\n  >\n    <button fxFlex (click)=\"goToLink()\" mat-button class=\"cos-body-4\">\n      <b>\n        {{\n          (data.buttonTitle !== undefined && data.buttonTitle !== \"\"\n            ? data.buttonTitle\n            : \"BUTTON.CLOSE\"\n          ) | translate\n        }}\n      </b>\n    </button>\n  </ng-container>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { PagesEnum } from 'src/app/models/states/pages-interfaces';\nimport { PagesFacadeService } from 'src/app/store/facades';\n\n@Component({\n  selector: 'app-generic-dialog',\n  templateUrl: './generic-dialog.component.html',\n  styleUrls: ['./generic-dialog.component.scss'],\n})\nexport class GenericDialogComponent implements OnInit {\n  overlaysCountOnInit = 0;\n  closedByButton = false;\n  yesNoButton: Subject<boolean> = new Subject();\n\n  constructor(\n    protected router: Router,\n    protected pagesFacadeService: PagesFacadeService,\n    public genericDialogRef: MatDialogRef<GenericDialogComponent>,\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      message: string;\n      showYesNo?: boolean;\n      showSpinner?: boolean;\n      lightColour?: boolean;\n      spinnerSize?: number;\n      customIcon?: string;\n      matIcon?: string;\n      subText?: string;\n      titleText?: string;\n      textAlign?: string;\n      buttonTitle?: string;\n      buttonLink?: string;\n      buttonLinkPageRef?: PagesEnum;\n      goToOnExit?: string;\n      goToOnExitPage?: PagesEnum;\n    }\n  ) {}\n\n  ngOnInit() {\n    this.genericDialogRef.backdropClick().subscribe(() => {\n      if (this.closedByButton === true) {\n        return;\n      }\n      this.closeDialog();\n    });\n    const overlays = document.getElementsByClassName(\n      'cdk-overlay-dark-backdrop'\n    );\n    const wrappers = document.getElementsByClassName(\n      'cdk-global-overlay-wrapper'\n    );\n    this.overlaysCountOnInit = overlays.length;\n    if (overlays.length > 1) {\n      for (let i = 1; i < overlays.length; i++) {\n        overlays[i].remove();\n      }\n      const attr = document.createAttribute('style');\n      attr.value = 'z-index: 1001 !important;';\n      overlays[0].attributes.setNamedItem(attr);\n      const existingAttr =\n        wrappers[wrappers.length - 1].attributes.getNamedItem('style');\n      const newAttr = document.createAttribute('style');\n      newAttr.value = existingAttr.value + ' z-index: 1001 !important;';\n      wrappers[wrappers.length - 1].attributes.setNamedItem(newAttr);\n      return;\n    }\n  }\n\n  closeDialog() {\n    const overlays = document.getElementsByClassName(\n      'cdk-overlay-dark-backdrop'\n    );\n    const wrappers = document.getElementsByClassName(\n      'cdk-global-overlay-wrapper'\n    );\n    if (this.overlaysCountOnInit > 1) {\n      const attr = document.createAttribute('style');\n      attr.value = 'z-index: 1000 !important;';\n      overlays[0].attributes.setNamedItem(attr);\n      const existingAttr =\n        wrappers[wrappers.length - 1].attributes.getNamedItem('style');\n      const newAttr = document.createAttribute('style');\n      newAttr.value = existingAttr.value + ' z-index: 1001 !important;';\n      wrappers[wrappers.length - 1].attributes.setNamedItem(newAttr);\n      this.genericDialogRef.close();\n      return;\n    }\n    if (this.closedByButton === false && this.data.goToOnExit !== undefined) {\n      this.pagesFacadeService.gotoPageRoute(\n        this.data.goToOnExit,\n        this.data.goToOnExitPage\n      );\n    }\n  }\n\n  yesNoPressed(type: boolean) {\n    this.yesNoButton.next(type);\n    this.yesNoButton.complete();\n  }\n\n  goToLink() {\n    this.closedByButton = true;\n    if (this.data.buttonLink !== undefined) {\n      this.pagesFacadeService.gotoPageRoute(\n        this.data.buttonLink,\n        this.data.buttonLinkPageRef\n      );\n    }\n    this.genericDialogRef.close();\n  }\n\n  get textAlign() {\n    if (this.data.textAlign === '') {\n      return '';\n    } else if (this.data.textAlign === 'right') {\n      return 'cos-right-text';\n    } else if (this.data.textAlign === 'center') {\n      return 'cos-center-text';\n    }\n  }\n}\n","import {\n  AfterViewChecked,\n  Component,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport { from, interval, of, Subject } from 'rxjs';\nimport { map, switchMap, takeUntil } from 'rxjs/operators';\nimport { infiniteLoopedIcons } from 'src/app/configurations';\nimport { NonceTypesEnum } from 'src/app/models/states/wallet-interfaces';\nimport { IconRegistryService, WalletService } from 'src/app/services';\n\ndeclare const APNG: any;\n\n@Component({\n  selector: 'app-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent implements OnDestroy, AfterViewChecked {\n  @Input() iconSize = 24;\n  @ViewChild('icon', { static: false }) icon: any;\n  isVisible = false;\n  setIcon;\n  iconsRegistry;\n  iconAnimation;\n  checkIconSubscription;\n  iconId;\n\n  constructor(\n    public iconRegistryService: IconRegistryService,\n    public walletService: WalletService\n  ) {\n    this.iconsRegistry = this.iconRegistryService.injectCustomIcons();\n    this.iconId = walletService.produceNonce(NonceTypesEnum.SERIAL);\n    const stopCheck: Subject<boolean> = new Subject<boolean>();\n    this.checkIconSubscription = interval(1)\n      .pipe(\n        takeUntil(stopCheck),\n        switchMap((i) => {\n          if (this.icon === undefined) {\n            return of(false);\n          }\n          if (\n            'nativeElement' in this.icon === false ||\n            this.icon.nativeElement.innerText === ''\n          ) {\n            return of(false);\n          }\n          this.setIcon = this.icon.nativeElement.innerText.replaceAll(' ', '');\n          const canvas = document.getElementById(\n            'canvas-icon-' + this.setIcon + this.iconId\n          ) as HTMLCanvasElement;\n          if (canvas === null) {\n            return of(false);\n          }\n          return from(\n            APNG.parseURL('../../../' + this.iconsRegistry[this.setIcon])\n          );\n        }),\n        map((apng: any) => {\n          if (apng === false) {\n            return;\n          }\n          const canvas = document.getElementById(\n            'canvas-icon-' + this.setIcon + this.iconId\n          ) as HTMLCanvasElement;\n          canvas.width = apng.width;\n          canvas.height = apng.height;\n          this.iconAnimation = apng;\n          this.iconAnimation.addContext(canvas.getContext('2d'));\n          this.playIcon();\n          stopCheck.next(false);\n          stopCheck.complete();\n          return;\n        })\n      )\n      .subscribe();\n  }\n\n  playIcon() {\n    this.iconAnimation.play();\n    if (infiniteLoopedIcons.indexOf(this.setIcon) > -1) {\n      return;\n    }\n    setTimeout(() => {\n      this.iconAnimation.rewind();\n    }, this.iconAnimation.frames.length * 25);\n    return;\n  }\n\n  ngAfterViewChecked() {\n    if (this.iconAnimation === undefined && this.icon !== undefined) {\n      return;\n    }\n\n    if (\n      this.isVisible == false &&\n      this.icon.nativeElement.offsetParent != null\n    ) {\n      this.isVisible = true;\n      this.playIcon();\n    } else if (\n      this.isVisible == true &&\n      this.icon.nativeElement.offsetParent == null\n    ) {\n      this.isVisible = false;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.checkIconSubscription) {\n      this.checkIconSubscription.unsubscribe();\n      this.checkIconSubscription = undefined;\n    }\n  }\n}\n","<div #icon style=\"overflow: hidden; width: 0; height: 0\">\n  <ng-content></ng-content>\n</div>\n<div\n  id=\"canvas-icon-container\"\n  class=\"co-icon\"\n  [style.height]=\"iconSize + 'px'\"\n  [style.width]=\"iconSize + 'px'\"\n>\n  <canvas\n    id=\"{{ 'canvas-icon-' + setIcon + iconId }}\"\n    [style.height]=\"iconSize + 'px'\"\n    [style.width]=\"iconSize + 'px'\"\n  >\n  </canvas>\n</div>\n","import { Subject } from \"rxjs\";\n\nexport class BootController {\n  private static instance: BootController;\n  private _reboot: Subject<boolean> = new Subject();\n  private reboot$ = this._reboot.asObservable();\n\n  static getbootControl() {\n    if (!BootController.instance) {\n      BootController.instance = new BootController();\n    }\n    return BootController.instance;\n  }\n\n  public watchReboot() {\n    return this.reboot$;\n  }\n\n  public restart() {\n    this._reboot.next(true);\n  }\n}\n","export const environment = { production: true, development: false, deployed: true, test: false, local: false, chrome: false, defaultChain: 'homestead', baseUrl: 'https://predomain.eth.limo', validChainIds: { '5': 'goerli', '1': 'homestead', }, networks: { goerli: { networkId: 'goerli', networkName: 'Goerli Testnet', chainId: 5, providerKey: '[ \"8R44ckgzRQzE9kFCtp7QtGQHU6JcAbdy\", \"r82XAy-r3Q6quUsMViJzfGF5CcnKfKWz\", \"MzyOIUDKmR27GrfIFOLe0MKDHSRWvS4x\", \"tNtGnCC2yhXCcYeSQtNArj9RiITWp8aB\", \"RBfJZTGtvAKmZtzgxJsZX9N4UqkfN6Yc\", \"quPdmnozs0xsQsV-z7joxh28JZ1ZNZUj\", \"cDE_nnY3Cmulv6bcBHpUYoPZNl7gO-gt\", \"axpK6yj_VfQ8D7aP3F1l5js9X_fMg3Iw\", \"gn1-taCzEPP-L6zxsjLDT19lgFELique\", \"SbakDEKRcQwdl5JC-nJigVXLlnupyrTa\" ]', ensApp: 'https://app.ens.domains', ensMetadataAPI: 'https://metadata.ens.domains/goerli/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/', ensGraphQLAPI: 'https://api.thegraph.com/subgraphs/name/ensdomains/ensgoerli', poapGraphQLAPI: 'https://api.thegraph.com/subgraphs/name/poap-xyz/poap-xdai', }, homestead: { networkId: 'homestead', networkName: 'Mainnet', chainId: 1, providerKey: '[ \"8R44ckgzRQzE9kFCtp7QtGQHU6JcAbdy\", \"r82XAy-r3Q6quUsMViJzfGF5CcnKfKWz\", \"MzyOIUDKmR27GrfIFOLe0MKDHSRWvS4x\", \"tNtGnCC2yhXCcYeSQtNArj9RiITWp8aB\", \"RBfJZTGtvAKmZtzgxJsZX9N4UqkfN6Yc\", \"quPdmnozs0xsQsV-z7joxh28JZ1ZNZUj\", \"cDE_nnY3Cmulv6bcBHpUYoPZNl7gO-gt\", \"axpK6yj_VfQ8D7aP3F1l5js9X_fMg3Iw\", \"gn1-taCzEPP-L6zxsjLDT19lgFELique\", \"SbakDEKRcQwdl5JC-nJigVXLlnupyrTa\" ]', ensApp: 'https://app.ens.domains', ensMetadataAPI: 'https://metadata.ens.domains/mainnet/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/', ensGraphQLAPI: 'https://api.thegraph.com/subgraphs/name/ensdomains/ens', poapGraphQLAPI: 'https://api.thegraph.com/subgraphs/name/poap-xyz/poap-xdai', }, }, };\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PathResolveService } from './services';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'bootstrap',\n    pathMatch: 'full',\n  },\n  {\n    path: 'bootstrap',\n    loadChildren: () =>\n      import('./modules/bootstrap.module').then((m) => m.BootstrapModule),\n  },\n  {\n    path: 'home',\n    loadChildren: () =>\n      import('./modules/home.module').then((m) => m.HomeModule),\n  },\n  {\n    path: 'canvas',\n    loadChildren: () =>\n      import('./modules/canvas.module').then((m) => m.CanvasModule),\n  },\n  {\n    path: 'domain/:domain',\n    loadChildren: () =>\n      import('./modules/domain.module').then((m) => m.DomainModule),\n  },\n  {\n    path: 'profile/:user',\n    loadChildren: () =>\n      import('./modules/profile.module').then((m) => m.ProfileModule),\n  },\n  {\n    path: 'manage',\n    loadChildren: () =>\n      import('./modules/manage.module').then((m) => m.ManageModule),\n  },\n  {\n    path: 'checkout',\n    loadChildren: () =>\n      import('./modules/checkout.module').then((m) => m.CheckoutModule),\n  },\n  {\n    path: 'category/:category',\n    loadChildren: () =>\n      import('./modules/category.module').then((m) => m.CategoryModule),\n  },\n  {\n    path: 'checkout/:serial',\n    loadChildren: () =>\n      import('./modules/checkout.module').then((m) => m.CheckoutModule),\n  },\n  {\n    path: '**',\n    resolve: {\n      path: PathResolveService,\n    },\n    loadChildren: () =>\n      import('./modules/not-found.module').then((m) => m.NotFoundModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","export enum NetworkStatusEnum {\n\tOFFLINE,\n\tONLINE,\n}\n","<div\n  *ngIf=\"(pageLoadingState | async) === true\"\n  class=\"co-progress-bar cos-fluid-width cos-pos-fixed cos-pos-top-reset\"\n>\n  <mat-progress-bar\n    class=\"cos-main-progress-bar\"\n    mode=\"indeterminate\"\n    [value]=\"0\"\n  ></mat-progress-bar>\n</div>\n<div [style.height]=\"getHeight()\">\n  <router-outlet> </router-outlet>\n</div>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  HostListener,\n  AfterViewInit,\n  OnDestroy,\n  HostBinding,\n  OnChanges,\n  DoCheck,\n} from '@angular/core';\nimport { MatTab } from '@angular/material/tabs';\nimport { Router } from '@angular/router';\nimport { PagesFacadeService } from './store/facades/pages.facades';\nimport { NetworkStatusEnum } from './models/states/pages-interfaces/network-status.enum';\nimport { IconRegistryService, UserSessionService } from './services';\nimport { of } from 'rxjs';\n\nconst globalAny: any = global;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, DoCheck, AfterViewInit {\n  @HostBinding('class') className = '';\n  @ViewChild('navigation', { static: true }) navigation: MatTab;\n  lightMode = false;\n\n  @HostListener('window:online', ['$event'])\n  onNetworkOnline(target) {\n    this.pagesFacade.newNetworkState({\n      networkStatus: NetworkStatusEnum.ONLINE,\n    });\n  }\n\n  @HostListener('window:offline', ['$event'])\n  onNetworkOffline(target) {\n    this.pagesFacade.newNetworkState({\n      networkStatus: NetworkStatusEnum.OFFLINE,\n    });\n  }\n\n  constructor(\n    protected router: Router,\n    protected userSessionService: UserSessionService,\n    protected iconsRegistryService: IconRegistryService,\n    protected pagesFacade: PagesFacadeService\n  ) {\n    this.pagesFacade.startEffects();\n  }\n\n  ngOnInit() {\n    const cId = this.userSessionService.getDefaultChainId();\n    this.pagesFacade.setNetworkChainCode(cId, false);\n  }\n\n  ngDoCheck(): void {\n    const cdk = document.getElementsByClassName('cdk-overlay-container');\n    if (cdk.length > 0 && this.lightMode === true) {\n      cdk[0].classList.add('light-mode');\n    }\n  }\n\n  ngAfterViewInit() {\n    if (navigator.onLine === true) {\n      this.pagesFacade.newNetworkState({\n        networkStatus: NetworkStatusEnum.ONLINE,\n      });\n    } else {\n      this.pagesFacade.newNetworkState({\n        networkStatus: NetworkStatusEnum.OFFLINE,\n      });\n    }\n  }\n\n  getHeight() {\n    return window.innerHeight + 'px';\n  }\n\n  get pageLoadingState() {\n    if (this.pagesFacade === undefined) {\n      return of(true);\n    }\n    return this.pagesFacade.pageLoadingState$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { NavigatorStateModel } from '../../models/states/navigator-interfaces';\n\n@Injectable()\nexport class NavigatorEffects {\n  constructor(\n    private actions$: Actions,\n    public store: Store<NavigatorStateModel>\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RpcService {\n  constructor() {}\n\n  loadRpc() {\n    return localStorage.getItem('canvas-rpc');\n  }\n\n  saveRpc(rpcData: RPCProviderModel) {\n    localStorage.setItem('canvas-rpc', JSON.stringify(rpcData));\n  }\n\n  removeRPC() {\n    localStorage.removeItem('canvas-rpc');\n  }\n}\n","import { of } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\nimport { Injectable, NgZone } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  Router,\n  ActivatedRoute,\n  NavigationStart,\n  NavigationEnd,\n  NavigationError,\n} from '@angular/router';\nimport {\n  GotoPageRoute,\n  InitEffectsCategory,\n  InitEffectsENSBookmark,\n  InitEffectsENSRegistration,\n  InitEffectsPages,\n  InitEffectsPayments,\n  InitEffectsUserState,\n  PageGotoRoute,\n  PagesEffectsInit,\n  PagesNetworkOfflineStateInvoke,\n  PagesNetworkStateSet,\n  PagesSetChainCode,\n  PagesSetCriticalError,\n  PagesSetRPCProvider,\n  PagesSetVisibility,\n  SetPageChainCode,\n  SetPagesCriticalError,\n  SetPagesNetworkState,\n  SetPagesNetworkStateOffline,\n  SetRPCProvider,\n  UserRemove,\n} from '../actions';\nimport { getCurrentPagesState, getCurrentUser } from '../selectors';\nimport {\n  NetworkStatusEnum,\n  PagesStateModel,\n} from '../../models/states/pages-interfaces';\nimport { BootController } from '../../../boot-control';\nimport {\n  CategoryFacadeService,\n  ENSBookmarkFacadeService,\n  ENSRegistrationFacadeService,\n  PagesFacadeService,\n  PaymentFacadeService,\n  UserFacadeService,\n} from '../facades';\nimport { GenericDialogComponent } from '../../widgets/generic-dialog';\nimport { environment } from '../../../environments/environment';\nimport { UserService, UserSessionService } from '../../services';\nimport {\n  catchError,\n  delay,\n  filter,\n  map,\n  switchMap,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\nimport { RpcService } from 'src/app/services/rpc';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class PagesEffects {\n  constructor(\n    protected actions$: Actions,\n    protected route: Router,\n    protected activatedRoute: ActivatedRoute,\n    protected store: Store<PagesStateModel>,\n    protected userSessionService: UserSessionService,\n    protected pagesFacade: PagesFacadeService,\n    protected paymentFacade: PaymentFacadeService,\n    protected ensBookmarksFacade: ENSBookmarkFacadeService,\n    protected ensRegistrationFacade: ENSRegistrationFacadeService,\n    protected categoriesFacade: CategoryFacadeService,\n    protected userFacade: UserFacadeService,\n    protected userService: UserService,\n    protected rpcService: RpcService,\n    public dialog: MatDialog,\n    public ngZone: NgZone\n  ) {\n    document.addEventListener(\n      'visibilitychange',\n      () => {\n        if (document.hidden) {\n          this.store.dispatch(new PagesSetVisibility(false));\n        } else {\n          this.store.dispatch(new PagesSetVisibility(true));\n        }\n      },\n      false\n    );\n  }\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesEffectsInit>(InitEffectsPages),\n        switchMap((p) => {\n          return this.route.events.pipe(\n            takeUntil(\n              this.ngZone.runOutsideAngular(() => {\n                return BootController.getbootControl().watchReboot();\n              })\n            )\n          );\n        }),\n        map((e: any) => {\n          if (e instanceof NavigationStart) {\n            if ((e as NavigationStart).url !== '/') {\n              this.pagesFacade.showLoadingProgressBar();\n            }\n          }\n          if (e instanceof NavigationEnd) {\n            setTimeout(() => {\n              this.pagesFacade.hideLoadingProgressBar();\n            }, 1500);\n          }\n          if (e instanceof NavigationError) {\n            setTimeout(() => {\n              this.pagesFacade.hideLoadingProgressBar();\n            }, 1500);\n          }\n          const chainId =\n            environment.networks[environment.defaultChain].chainId;\n          if (chainId !== globalAny.chainId) {\n            this.assessProviderChanges(chainId);\n          }\n        })\n      ),\n    { dispatch: false }\n  );\n\n  provideRPCSet$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesSetRPCProvider>(SetRPCProvider),\n        map((action) => {\n          const chainId =\n            environment.networks[environment.defaultChain].chainId;\n          if (action.payload === undefined) {\n            this.createProvider(chainId);\n            this.rpcService.removeRPC();\n            return;\n          }\n          this.createProvider(chainId, action.payload);\n          this.rpcService.saveRpc(action.payload);\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  networkStatus$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesNetworkStateSet>(SetPagesNetworkState),\n        map((networkState) => {\n          if (\n            networkState.payload.networkStatus === NetworkStatusEnum.OFFLINE\n          ) {\n            this.store.dispatch(new PagesNetworkOfflineStateInvoke());\n          }\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  networkStatusOffline$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesNetworkOfflineStateInvoke>(SetPagesNetworkStateOffline),\n        withLatestFrom(this.store.pipe(select(getCurrentPagesState)) as any),\n        map((networkAndPageState) => {\n          const [network, pageState] = networkAndPageState;\n          if (this.dialog.openDialogs.length > 0) {\n            return;\n          }\n          return;\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  networkChangedId$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesSetChainCode>(SetPageChainCode),\n        withLatestFrom(\n          this.store.pipe(select(getCurrentPagesState)),\n          this.store.pipe(select(getCurrentUser))\n        ),\n        delay(250),\n        map((networkAndPageState) => {\n          const [action, pageState, userData] = networkAndPageState;\n          if (\n            action.payload === undefined ||\n            action.payload in environment.validChainIds === false ||\n            action.payload !==\n              environment.networks[environment.defaultChain].chainId\n          ) {\n            this.ngZone.run(() => {\n              const dialogRef = this.dialog.open(GenericDialogComponent, {\n                data: {\n                  message: 'GENERIC.NETWORK_CHANGED_INCOMPATIBLE',\n                },\n                panelClass: 'cos-generic-dialog',\n              });\n            });\n            this.store.dispatch(new UserRemove());\n            return;\n          }\n          this.assessProviderChanges(action.payload);\n          return;\n        })\n      ),\n    { dispatch: false }\n  );\n\n  pageCriticalError$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesSetCriticalError>(SetPagesCriticalError),\n        filter((action) => action.redirect === true),\n        map((action) => {\n          this.route.navigateByUrl('not-found');\n          return;\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  gotoPageRoute$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PageGotoRoute>(GotoPageRoute),\n        map((route) => {\n          if (route.payload.route !== 'not-found') {\n            this.pagesFacade.setPageCriticalError(false, false);\n          }\n          this.route.navigateByUrl(route.payload.route);\n          return;\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  createProvider(chainId: number, providerData: RPCProviderModel = null) {\n    const newProvider = this.userSessionService.getUserSessionProvider(\n      chainId,\n      providerData\n    );\n    globalAny.chainId = chainId;\n    globalAny.canvasProvider = newProvider;\n    this.initiateOtherEffects();\n  }\n\n  assessProviderChanges(chainId: number) {\n    const providerData = this.rpcService.loadRpc();\n    if (\n      (providerData === null || providerData === undefined) &&\n      globalAny.canvasProvider === undefined\n    ) {\n      this.createProvider(chainId);\n    } else {\n      this.store.dispatch(new PagesSetRPCProvider(JSON.parse(providerData)));\n    }\n  }\n\n  initiateOtherEffects() {\n    this.paymentFacade.startEffects();\n    this.ensBookmarksFacade.startEffects();\n    this.ensRegistrationFacade.startEffects();\n    this.categoriesFacade.startEffects();\n    this.userFacade.startEffects();\n    globalAny.canvasEffectsInitialised = {\n      [InitEffectsPages]: false,\n      [InitEffectsPayments]: false,\n      [InitEffectsUserState]: false,\n      [InitEffectsENSBookmark]: false,\n      [InitEffectsENSRegistration]: false,\n      [InitEffectsCategory]: false,\n    };\n  }\n}\n","import { of } from 'rxjs';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport {\n  map,\n  switchMap,\n  catchError,\n  delay,\n  timeout,\n  filter,\n} from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Router } from '@angular/router';\nimport {\n  TranslationService,\n  TrezorService,\n  UserService,\n  UserSessionService,\n} from '../../services';\nimport {\n  InitEffectsUserState,\n  RegisterUser,\n  RemoveUser,\n  UserAdd,\n  UserEffectsInit,\n  UserErrorSet,\n  UserPoapsSet,\n  UserRegister,\n  UserRemove,\n} from '../actions';\nimport { UserModel } from '../../models/states/user-interfaces';\nimport { UserStoreErrorsEnum } from '../../models/error-enums';\nimport { MatDialog } from '@angular/material/dialog';\nimport { WalletTypesEnum } from '../../models/states/wallet-interfaces';\nimport { MetamaskService } from '../../services/metamask/metamask.service';\nimport { LedgerService } from '../../services/ledger/ledger.service';\nimport { GenericDialogComponent } from '../../widgets/generic-dialog';\nimport { PoapService } from 'src/app/services/poap';\nimport { generalConfigurations } from 'src/app/configurations';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class UserEffects {\n  constructor(\n    private actions$: Actions,\n    public route: Router,\n    public userService: UserService,\n    public translationService: TranslationService,\n    public userSessionService: UserSessionService,\n    public metamaskService: MetamaskService,\n    public trezorService: TrezorService,\n    public ledgerService: LedgerService,\n    public poapService: PoapService,\n    public store: Store<UserModel>,\n    public ngZone: NgZone,\n    public dialog: MatDialog\n  ) {}\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<UserEffectsInit>(InitEffectsUserState),\n        filter((r) => {\n          if (\n            globalAny.canvasEffectsInitialised[InitEffectsUserState] === true\n          ) {\n            return false;\n          }\n          return true;\n        }),\n        switchMap((r) => {\n          const timeNow = new Date().getTime();\n          const userSessionStored = this.userSessionService.loadUserSession();\n          if (userSessionStored === undefined || userSessionStored === null) {\n            return of(false);\n          }\n          const userData = JSON.parse(userSessionStored) as UserModel;\n          const defaultChainId = this.userSessionService.getDefaultChainId();\n          if (userData.connectType === WalletTypesEnum.METAMASK) {\n            this.metamaskService.chainChangedDetectionDaemon();\n          }\n          if (\n            userData.connectType === WalletTypesEnum.METAMASK &&\n            this.metamaskService.getChainId() != defaultChainId\n          ) {\n            const dialogRef = this.dialog.open(GenericDialogComponent, {\n              data: {\n                message: 'GENERIC.NETWORK_CHANGED_INCOMPATIBLE',\n              },\n              panelClass: 'cos-generic-dialog',\n            });\n            this.store.dispatch(new UserRemove());\n            return of(false);\n          }\n          const userDataParsed = JSON.parse(userSessionStored as string);\n          this.store.dispatch(new UserAdd(userDataParsed));\n          globalAny.canvasEffectsInitialised[InitEffectsUserState] = true;\n          if (generalConfigurations.enablePoapResolution === false) {\n            return of(false);\n          }\n          return this.poapService.getPoaps(userDataParsed.walletAddress);\n        }),\n        map((r) => {\n          if (r === false) {\n            this.store.dispatch(\n              new UserPoapsSet({\n                poapsResolved: true,\n                poaps: [],\n                poapTokens: [],\n              })\n            );\n            return;\n          }\n          const userPoaps = this.poapService.getPoapIds(r);\n          const userPoapTokens = this.poapService.getPoapTokens(r);\n          if (userPoaps === false) {\n            this.store.dispatch(\n              new UserPoapsSet({\n                poapsResolved: true,\n                poaps: [],\n                poapTokens: [],\n              })\n            );\n            return;\n          }\n          this.store.dispatch(\n            new UserPoapsSet({\n              poapsResolved: true,\n              poaps: userPoaps,\n              poapTokens: userPoapTokens,\n            })\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n\n  userRemove$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<UserRemove>(RemoveUser),\n        map((action) => {\n          this.userSessionService.quitUserSession();\n        })\n      ),\n    { dispatch: false }\n  );\n\n  userRegister$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<UserRegister>(RegisterUser),\n        delay(1000),\n        switchMap((action) => {\n          const timeNow = new Date().getTime();\n          const defaultChainId = this.userSessionService.getDefaultChainId();\n          if (\n            action.payload.walletType === WalletTypesEnum.METAMASK &&\n            this.metamaskService.getChainId() != defaultChainId\n          ) {\n            this.store.dispatch(new UserRemove());\n            return of(false);\n          }\n          switch (action.payload.walletType) {\n            case WalletTypesEnum.WALLET_CONNECT:\n              {\n                return of([\n                  timeNow,\n                  action.payload.address,\n                  action.payload.walletType,\n                ]);\n              }\n              break;\n            case WalletTypesEnum.METAMASK:\n              {\n                return this.metamaskService.connect(timeNow).pipe(\n                  switchMap((r: any) => {\n                    if (r === false) {\n                      return of(false);\n                    }\n                    return of([timeNow, r, action.payload.walletType]);\n                  })\n                );\n              }\n              break;\n            case WalletTypesEnum.TREZOR:\n              {\n                return this.trezorService.connect(timeNow).pipe(\n                  switchMap((r: any) => {\n                    if (r === false) {\n                      return of(false);\n                    }\n                    return of([timeNow, r, action.payload.walletType]);\n                  })\n                );\n              }\n              break;\n            case WalletTypesEnum.LEDGER:\n              {\n                return this.ledgerService.createTransport().pipe(\n                  timeout(5000),\n                  delay(500),\n                  switchMap((t) => {\n                    if (t === false) {\n                      return of(UserStoreErrorsEnum.LEDGER_NO_DEVICE_SELECTED);\n                    }\n                    return this.ledgerService.connect(timeNow);\n                  }),\n                  switchMap((r: any) => {\n                    if (r === false) {\n                      return of(UserStoreErrorsEnum.LEDGER_NO_DEVICE_SELECTED);\n                    }\n                    return of([timeNow, r, action.payload.walletType]);\n                  }),\n                  catchError((e) => {\n                    return of(UserStoreErrorsEnum.LEDGER_NO_DEVICE_SELECTED);\n                  })\n                );\n              }\n              break;\n          }\n        }),\n        map((r: any) => {\n          if (r === UserStoreErrorsEnum.LEDGER_NO_DEVICE_SELECTED) {\n            this.store.dispatch(new UserErrorSet(r));\n            return;\n          }\n          if (r === false) {\n            this.store.dispatch(\n              new UserErrorSet(UserStoreErrorsEnum.CONNECT_ERROR)\n            );\n            return;\n          }\n          const [timestamp, address, walletType] = r;\n          const userSession = {\n            connectSignature: undefined,\n            timestamp: timestamp,\n            walletAddress: address,\n            originalConnectAddress: address,\n            deviceLanguage: navigator.language || 'en-US',\n            connectType: walletType,\n          } as UserModel;\n          globalAny.chainAccount = userSession;\n          this.store.dispatch(new UserAdd(userSession));\n          if (walletType === WalletTypesEnum.METAMASK) {\n            this.metamaskService.chainChangedDetectionDaemon();\n          }\n          this.userSessionService.saveUserSession(userSession);\n          return;\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport * as ethers from 'ethers';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  CurrencyExchangeService,\n  CurrencyService,\n  LedgerService,\n  MiscUtilsService,\n  PaymentEffectsService,\n  PaymentErrorService,\n  PaymentService,\n  PaymentStorageService,\n  TranslationService,\n  TrezorService,\n  UserService,\n  WalletService,\n} from '../../services';\nimport {\n  PaymentErrorCodes,\n  PaymentModel,\n  PaymentStateModel,\n  PaymentTypesEnum,\n} from '../../models/states/payment-interfaces';\nimport { PagesFacadeService, UserFacadeService } from '../facades';\nimport { MetamaskService } from '../../services/metamask';\nimport {\n  AddOnePayment,\n  ArchiveAllPayment,\n  CheckPaymentFulfilled,\n  InitEffectsPayments,\n  PaymentAddOne,\n  PaymentArchiveAll,\n  PaymentCancelled,\n  PaymentCheckFulfilled,\n  PaymentRemoveAll,\n  PaymentRemoveOne,\n  PaymentsEffectsInit,\n  PaymentUpsertMany,\n  PaymentUpsertOne,\n  RemoveAllPayment,\n  UpsertOnePayment,\n} from '../actions';\nimport {\n  catchError,\n  filter,\n  map,\n  mergeMap,\n  switchMap,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { from, interval, of, Subject } from 'rxjs';\nimport {\n  getCurrentNetworkChainId,\n  getCurrentUser,\n  getPayments,\n} from '../selectors';\nimport { WalletTypesEnum } from 'src/app/models/states/wallet-interfaces';\nimport { BigNumber, utils } from 'ethers';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { generalConfigurations } from 'src/app/configurations';\nimport { WalletConnectService } from 'src/app/services/wallet-connect';\nimport { getTransactionByNonce } from 'find-replacement-tx';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class PaymentEffects {\n  staticPaymentTranslatedTexts;\n  staticGenericTranslatedTexts;\n  constructor(\n    private actions$: Actions,\n    protected paymentService: PaymentService,\n    protected walletService: WalletService,\n    protected userService: UserService,\n    protected pagesFacade: PagesFacadeService,\n    protected paymentErrorService: PaymentErrorService,\n    protected userFacadeService: UserFacadeService,\n    protected store: Store<PaymentStateModel>,\n    protected translationService: TranslationService,\n    protected currencyService: CurrencyService,\n    protected currencyExchangeService: CurrencyExchangeService,\n    protected metamaskService: MetamaskService,\n    protected walletConnectService: WalletConnectService,\n    protected trezorService: TrezorService,\n    protected paymentStorageService: PaymentStorageService,\n    protected ledgerService: LedgerService,\n    protected miscUtils: MiscUtilsService,\n    protected snackBar: MatSnackBar,\n    protected paymentEffectsService: PaymentEffectsService,\n    protected ngZone: NgZone\n  ) {\n    this.staticPaymentTranslatedTexts =\n      this.translationService.getCacheableLanguagekeys('PAYMENT');\n    this.staticGenericTranslatedTexts =\n      this.translationService.getCacheableLanguagekeys('GENERIC');\n  }\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PaymentsEffectsInit>(InitEffectsPayments),\n        filter((r) => {\n          if (\n            globalAny.canvasEffectsInitialised[InitEffectsPayments] === true\n          ) {\n            return false;\n          }\n          return true;\n        }),\n        switchMap((r) => {\n          const payments = this.paymentStorageService.loadPayments();\n          if (payments !== false) {\n            this.store.dispatch(\n              new PaymentUpsertMany(payments as any as PaymentModel[])\n            );\n          }\n          if (payments === false || payments === null || payments.length <= 0) {\n            return this.currencyExchangeService.getPrices();\n          }\n          for (const p of payments) {\n            if (\n              p.paymentHash !== null &&\n              p.paymentHash !== '' &&\n              p.paymentStatus === false\n            ) {\n              this.store.dispatch(new CheckPaymentFulfilled(p));\n            }\n          }\n          globalAny.canvasEffectsInitialised[InitEffectsPayments] = true;\n          return this.currencyExchangeService.getPrices();\n        })\n      ),\n    { dispatch: false }\n  );\n\n  addPayment$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PaymentAddOne>(AddOnePayment),\n        withLatestFrom(\n          this.store.pipe(select(getPayments)),\n          this.store.pipe(select(getCurrentUser)),\n          this.store.pipe(select(getCurrentNetworkChainId))\n        ),\n        switchMap(([action, payments, user, chainId]: any[]) => {\n          const provider = globalAny.canvasProvider;\n          return this.paymentService.getGasPrice(provider).pipe(\n            switchMap((gasPrice) => {\n              return of([action, user, provider, chainId, gasPrice]);\n            })\n          );\n        }),\n        switchMap(([action, user, provider, chainId, gasPrice]: any[]) => {\n          return this.paymentService\n            .getWalletNonce(provider, user.walletAddress)\n            .pipe(\n              switchMap((nonce) => {\n                return of([action, user, provider, chainId, gasPrice, nonce]);\n              })\n            );\n        }),\n        switchMap(\n          ([action, user, provider, chainId, gasPrice, nonce]: any[]) => {\n            const preparedTx = this.paymentService.prepareTransaction(\n              chainId,\n              nonce,\n              action.payload.paymentMarketAddress,\n              action.payload.paymentGasLimit,\n              gasPrice.gasPrice,\n              action.payload\n            );\n            this.snackBar.open(\n              this.staticGenericTranslatedTexts.PENDING_TRANSACTION_CERATED,\n              'close',\n              {\n                horizontalPosition: 'center',\n                verticalPosition: 'bottom',\n                duration: 5000,\n              }\n            );\n            if (user.connectType === WalletTypesEnum.LEDGER) {\n              const txToFilter = {\n                ...preparedTx,\n                gasLimit: preparedTx.gas,\n                value:\n                  preparedTx.value === '0'\n                    ? '0x0'\n                    : ethers.BigNumber.from(preparedTx.value).toHexString(),\n              };\n              delete txToFilter.gas;\n              const txHex = utils.serializeTransaction(txToFilter);\n              return this.ledgerService.signPayment(txHex).pipe(\n                switchMap((signed: any) => {\n                  const signedPacked = utils.serializeTransaction(txToFilter, {\n                    v: BigNumber.from('0x' + signed.v).toNumber(),\n                    r: '0x' + signed.r,\n                    s: '0x' + signed.s,\n                  });\n                  return from(provider.sendTransaction(signedPacked));\n                }),\n                switchMap((r) => {\n                  return of([action, (r as any).hash, nonce]);\n                })\n              );\n            }\n            if (user.connectType === WalletTypesEnum.WALLET_CONNECT) {\n              const txToFilter = {\n                ...preparedTx,\n                from: user.walletAddress,\n              };\n              delete txToFilter.gasPrice;\n              delete txToFilter.nonce;\n              return this.walletConnectService.signPayment(txToFilter).pipe(\n                switchMap((r) => {\n                  return of([action, r, nonce]);\n                })\n              );\n            }\n            if (user.connectType === WalletTypesEnum.METAMASK) {\n              const txToFilter = {\n                ...preparedTx,\n                from: user.walletAddress,\n              };\n              delete txToFilter.gasPrice;\n              delete txToFilter.nonce;\n              return this.metamaskService.signPayment([txToFilter]).pipe(\n                switchMap((r) => {\n                  return of([action, r, nonce]);\n                })\n              );\n            }\n            if (user.connectType === WalletTypesEnum.TREZOR) {\n              return this.trezorService.signPayment(preparedTx).pipe(\n                switchMap((signed: any) => {\n                  return from(provider.sendTransaction(signed as string));\n                }),\n                switchMap((r) => {\n                  return of([action, r, nonce]);\n                })\n              );\n            }\n          }\n        ),\n        switchMap(([action, hash, nonce]) => {\n          if (hash === false) {\n            this.store.dispatch(new PaymentRemoveOne(action.payload.id));\n            this.snackBar.open(\n              this.staticPaymentTranslatedTexts['PAYMENT_CANCELLED'],\n              'close',\n              {\n                horizontalPosition: 'center',\n                verticalPosition: 'bottom',\n                duration: 15000,\n              }\n            );\n            this.store.dispatch(new PaymentCancelled());\n            this.store.dispatch(new PaymentRemoveOne(action.payload.id));\n            return of(false);\n          }\n          this.store.dispatch(\n            new PaymentUpsertOne({\n              ...action.payload,\n              paymentStatus: false,\n              paymentHash: hash,\n              paymentNonce: nonce,\n            })\n          );\n          const paymentResolved = new Subject<boolean>();\n          return this.pagesFacade.pageVisibility$.pipe(\n            withLatestFrom(this.store.pipe(select(getPayments))),\n            takeUntil(paymentResolved),\n            map((pvp) => {\n              const [pv, payments] = pvp;\n              const payment = payments[action.payload.id];\n              if (\n                payment &&\n                'paymentStatus' in payment &&\n                payment.paymentStatus === true\n              ) {\n                paymentResolved.next(false);\n                return;\n              }\n              if (pv === true) {\n                this.store.dispatch(\n                  new CheckPaymentFulfilled({\n                    ...action.payload,\n                    paymentHash: hash,\n                    paymentNonce: nonce,\n                  })\n                );\n              }\n            })\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n\n  upsertPayment$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PaymentUpsertOne>(UpsertOnePayment),\n        withLatestFrom(this.store.pipe(select(getPayments))),\n        switchMap(([a, paymentState]) => {\n          const payments = paymentState as PaymentModel[];\n          let payment;\n          for (const p of payments) {\n            if (p.id === a.payload.id) {\n              payment = a.payload;\n            }\n          }\n          return of(payments);\n        }),\n        map((p) => {\n          return this.paymentStorageService.savePayments(p);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  archiveAllPayment$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PaymentArchiveAll>(ArchiveAllPayment),\n        withLatestFrom(this.store.pipe(select(getPayments))),\n        map(([action, payments]) => {\n          this.paymentStorageService.savePayments(payments);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  removeAllPayment$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PaymentRemoveAll>(RemoveAllPayment),\n        map((action) => {\n          this.paymentStorageService.removePayments();\n        })\n      ),\n    { dispatch: false }\n  );\n\n  userCheckPaymentStatus$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CheckPaymentFulfilled>(PaymentCheckFulfilled),\n        mergeMap((action) => {\n          const hasResolved = new Subject<boolean>();\n          return interval(generalConfigurations.timeToUpdateCheckoutPipe).pipe(\n            takeUntil(hasResolved),\n            switchMap((i) => {\n              const provider = globalAny.canvasProvider;\n              if (provider === undefined) {\n                return of(false);\n              }\n              return from(provider.getBlockNumber()).pipe(\n                switchMap((blockNumber) => {\n                  if (\n                    blockNumber === null ||\n                    blockNumber === false ||\n                    blockNumber === undefined\n                  ) {\n                    throw false;\n                  }\n                  const searchTxFromBlock = (blockNumber as number) - 5;\n                  const tx = {\n                    from: action.payload.paymentPayer,\n                    to: action.payload.paymentPayee,\n                    nonce: action.payload.paymentNonce,\n                  };\n                  return from(\n                    provider.getTransactionReceipt(action.payload.paymentHash)\n                  ).pipe(\n                    switchMap((foundTx) => {\n                      if (foundTx === null || foundTx === false) {\n                        return from(\n                          getTransactionByNonce(\n                            provider,\n                            searchTxFromBlock,\n                            tx.from,\n                            tx.nonce\n                          )\n                        ).pipe(\n                          switchMap((r) => {\n                            if (r === null) {\n                              return of(null);\n                            }\n                            return from(provider.getTransactionReceipt(r.hash));\n                          })\n                        );\n                      }\n                      return of(foundTx);\n                    }),\n                    catchError((e) => {\n                      return of(null);\n                    })\n                  );\n                }),\n                map((r: any) => {\n                  if (r === null || r === undefined) {\n                    return;\n                  }\n                  if (r.status === 0) {\n                    this.store.dispatch(\n                      new PaymentUpsertOne({\n                        id: action.payload.id,\n                        paymentHash: action.payload.paymentHash,\n                        paymentStatus: false,\n                        paymentError: PaymentErrorCodes.PAYMENT_FAILURE,\n                      })\n                    );\n                    hasResolved.next(false);\n                    return;\n                  }\n                  if (\n                    r.status === 1 &&\n                    r.confirmations >=\n                      generalConfigurations.maxConfirmationsUntilTxFinal\n                  ) {\n                    this.store.dispatch(\n                      new PaymentUpsertOne({\n                        id: action.payload.id,\n                        paymentDate:\n                          action.payload.paymentType === PaymentTypesEnum.COMMIT\n                            ? new Date().getTime()\n                            : action.payload.paymentDate,\n                        paymentHash: action.payload.paymentHash,\n                        paymentStatus: true,\n                        paymentError: PaymentErrorCodes.NONE,\n                      })\n                    );\n                    hasResolved.next(false);\n                    return;\n                  }\n                })\n              );\n            })\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { filter, map, withLatestFrom } from 'rxjs/operators';\nimport { ENSBookmarkStateModel } from 'src/app/models/states/ens-bookmark-interfaces';\nimport { BookmarksServiceService } from 'src/app/services/bookmarks';\nimport {\n  AddOneENSBookmark,\n  ENSBookmarkAddOne,\n  ENSBookmarkEffectsInit,\n  ENSBookmarkRemoveAll,\n  ENSBookmarkRemoveOne,\n  ENSBookmarkUpsertMany,\n  ENSBookmarkUpsertOne,\n  InitEffectsENSBookmark,\n  RemoveAllENSBookmark,\n  RemoveOneENSBookmark,\n  UpsertManyENSBookmark,\n  UpsertOneENSBookmark,\n} from '../actions';\nimport { getENSBookmarks } from '../selectors';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class ENSBookmarkEffects {\n  constructor(\n    private actions$: Actions,\n    protected bookMarkService: BookmarksServiceService,\n    public store: Store<ENSBookmarkStateModel>\n  ) {}\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkEffectsInit>(InitEffectsENSBookmark),\n        filter((r) => {\n          if (\n            globalAny.canvasEffectsInitialised[InitEffectsENSBookmark] === true\n          ) {\n            return false;\n          }\n          return true;\n        }),\n        map((p) => {\n          const bookmarks = this.bookMarkService.loadBookmarksAndFeed();\n          for (const b of Object.keys(bookmarks)) {\n            this.store.dispatch(\n              new ENSBookmarkAddOne(\n                {\n                  id: bookmarks[b].labelName,\n                  ...bookmarks[b],\n                },\n                false\n              )\n            );\n          }\n          globalAny.canvasEffectsInitialised[InitEffectsENSBookmark] = true;\n        })\n      ),\n    {\n      dispatch: false,\n    }\n  );\n\n  addOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkAddOne>(AddOneENSBookmark),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeAllBookmarks$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkRemoveAll>(RemoveAllENSBookmark),\n        filter((action) => action.toSave === true),\n        withLatestFrom(this.store.pipe(select(getENSBookmarks))),\n        map((state) => {\n          const [action, bookmarks] = state;\n          this.bookMarkService.removeAllBookmarks();\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkRemoveOne>(RemoveOneENSBookmark),\n        filter((action) => action.toSave === true),\n        withLatestFrom(this.store.pipe(select(getENSBookmarks))),\n        map((state) => {\n          const [action, bookmarks] = state;\n          this.bookMarkService.removeBookmark(bookmarks, action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkUpsertOne>(UpsertOneENSBookmark),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertManyBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkUpsertMany>(UpsertManyENSBookmark),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveAllBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { filter, map, withLatestFrom } from 'rxjs/operators';\nimport { ENSRegistrationStateModel } from 'src/app/models/states/ens-registration-interfaces';\nimport {\n  RegistrationFacilityService,\n  RegistrationServiceService,\n} from 'src/app/services/registration';\nimport {\n  AddOneENSRegistration,\n  ENSRegistrationAddOne,\n  ENSRegistrationEffectsInit,\n  ENSRegistrationRemoveAll,\n  ENSRegistrationUpsertMany,\n  ENSRegistrationUpsertOne,\n  InitEffectsENSRegistration,\n  RemoveAllENSRegistration,\n  RemoveOneENSRegistration,\n  UpsertManyENSRegistration,\n  UpsertOneENSRegistration,\n} from '../actions';\nimport { getENSRegistrations } from '../selectors';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class ENSRegistrationEffects {\n  constructor(\n    private actions$: Actions,\n    protected registrationService: RegistrationServiceService,\n    protected registrationFacilityService: RegistrationFacilityService,\n    public store: Store<ENSRegistrationStateModel>\n  ) {}\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationEffectsInit>(InitEffectsENSRegistration),\n        filter((r) => {\n          if (\n            globalAny.canvasEffectsInitialised[InitEffectsENSRegistration] ===\n            true\n          ) {\n            return false;\n          }\n          return true;\n        }),\n        map((p) => {\n          const registrations =\n            this.registrationService.loadRegistrationsAndFeed();\n          for (const b of Object.keys(registrations)) {\n            this.store.dispatch(\n              new ENSRegistrationAddOne(\n                {\n                  id: registrations[b].labelName,\n                  ...registrations[b],\n                },\n                false\n              )\n            );\n          }\n          globalAny.canvasEffectsInitialised[InitEffectsENSRegistration] = true;\n        })\n      ),\n    {\n      dispatch: false,\n    }\n  );\n\n  addOneRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationAddOne>(AddOneENSRegistration),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.registrationService.saveRegistrations(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeOneRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationAddOne>(RemoveOneENSRegistration),\n        filter((action) => action.toSave === true),\n        withLatestFrom(this.store.pipe(select(getENSRegistrations))),\n        map((state) => {\n          const [action, registrations] = state;\n          this.registrationService.removeRegistration(\n            registrations,\n            action.payload.labelName\n          );\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeAllRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationRemoveAll>(RemoveAllENSRegistration),\n        map(() => {\n          this.registrationService.removeAllRegistrations();\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertOneRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationUpsertOne>(UpsertOneENSRegistration),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.registrationService.saveRegistrations(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertManyRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationUpsertMany>(UpsertManyENSRegistration),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.registrationService.saveAllRegistrations(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { of, Subject, timer } from 'rxjs';\nimport {\n  delayWhen,\n  filter,\n  map,\n  retryWhen,\n  switchMap,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { generalConfigurations } from 'src/app/configurations';\nimport { CategoriesRootModel } from 'src/app/models/category';\nimport { ResponseModel } from 'src/app/models/http';\nimport { CategoriesStateModel } from 'src/app/models/states/categories-interfaces';\nimport { BookmarksServiceService } from 'src/app/services/bookmarks';\nimport { CategoriesDataService } from 'src/app/services/categories-data';\nimport { EnsService } from 'src/app/services/ens';\nimport {\n  AddOneCategory,\n  CategoryAddOne,\n  CategoryEffectsInit,\n  CategoryMetadataSet,\n  CategoryRemoveAll,\n  CategoryRemoveOne,\n  CategoryRootVolumeDataSet,\n  CategoryUpsertMany,\n  CategoryUpsertOne,\n  InitEffectsCategory,\n  RemoveAllCategory,\n  RemoveOneCategory,\n  UpsertManyCategory,\n  UpsertOneCategory,\n} from '../actions';\nimport { getCategorys } from '../selectors';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class CategoryEffects {\n  activeProviders;\n  categoryMetdata;\n\n  constructor(\n    private actions$: Actions,\n    protected bookMarkService: BookmarksServiceService,\n    protected ensService: EnsService,\n    protected httpClient: HttpClient,\n    protected categoriesDataService: CategoriesDataService,\n    public store: Store<CategoriesStateModel>\n  ) {}\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CategoryEffectsInit>(InitEffectsCategory),\n        filter((r) => {\n          if (\n            globalAny.canvasEffectsInitialised[InitEffectsCategory] === true\n          ) {\n            return false;\n          }\n          return true;\n        }),\n        switchMap((p) => {\n          const provider = globalAny.canvasProvider;\n          const hasRootCategoryDataBeenResolved = new Subject<boolean>();\n          if (generalConfigurations.categoriesUseFallback === true) {\n            return this.categoriesDataService\n              .getCategoriesRootFallbackData()\n              .pipe(\n                switchMap((r) => {\n                  if (r === false || r === null) {\n                    throw false;\n                  }\n                  const categoryMetdata = r as CategoriesRootModel;\n                  hasRootCategoryDataBeenResolved.next(false);\n                  return of(categoryMetdata);\n                })\n              );\n          }\n          return this.ensService\n            .getDomainContentHash(\n              provider,\n              generalConfigurations.categoriesDomain\n            )\n            .pipe(\n              takeUntil(hasRootCategoryDataBeenResolved),\n              switchMap((c) => {\n                return this.httpClient.get(c as any);\n              }),\n              switchMap((r) => {\n                if (r === false || r === null) {\n                  throw false;\n                }\n                const categoryMetdata = r as CategoriesRootModel;\n                hasRootCategoryDataBeenResolved.next(false);\n                return of(categoryMetdata);\n              }),\n              retryWhen((error) =>\n                error.pipe(\n                  delayWhen((e) => {\n                    return timer(\n                      generalConfigurations.timeToUpdateCheckoutPipe\n                    );\n                  })\n                )\n              )\n            );\n        }),\n        switchMap((categoryMetdataRaw) => {\n          const categoriesRootProviders = categoryMetdataRaw.rootDataProviders;\n          this.categoryMetdata = categoryMetdataRaw;\n          this.store.dispatch(new CategoryMetadataSet(categoryMetdataRaw));\n          return this.categoriesDataService.pingCategoriesDataProviders(\n            categoriesRootProviders\n          );\n        }),\n        switchMap((r) => {\n          this.activeProviders = r.filter((p) => p !== false);\n          const providerChosen = this.activeProviders[0] as any;\n          globalAny.canvasEffectsInitialised[InitEffectsCategory] = true;\n          this.store.dispatch(\n            new CategoryMetadataSet({\n              ...this.categoryMetdata,\n              activeProviders: this.activeProviders.map((r) => r.provider),\n            })\n          );\n          return this.categoriesDataService.getCategoriesRootVolumeData(\n            providerChosen.provider\n          );\n        }),\n        map((r) => {\n          const categoryRootVolumeData = (r as ResponseModel).result;\n          this.store.dispatch(\n            new CategoryRootVolumeDataSet(categoryRootVolumeData as any)\n          );\n        })\n      ),\n    {\n      dispatch: false,\n    }\n  );\n\n  addOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CategoryAddOne>(AddOneCategory),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeAllBookmarks$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CategoryRemoveAll>(RemoveAllCategory),\n        filter((action) => action.toSave === true),\n        withLatestFrom(this.store.pipe(select(getCategorys))),\n        map((state) => {\n          const [action, bookmarks] = state;\n          this.bookMarkService.removeAllBookmarks();\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CategoryRemoveOne>(RemoveOneCategory),\n        filter((action) => action.toSave === true),\n        withLatestFrom(this.store.pipe(select(getCategorys))),\n        map((state) => {\n          const [action, bookmarks] = state;\n          this.bookMarkService.removeBookmark(bookmarks, action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CategoryUpsertOne>(UpsertOneCategory),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertManyBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CategoryUpsertMany>(UpsertManyCategory),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveAllBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n}\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {\n  BrowserModule,\n  HAMMER_GESTURE_CONFIG,\n} from '@angular/platform-browser';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MatDialogModule,\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n} from '@angular/material/dialog';\nimport { RouterModule } from '@angular/router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { Intercept } from './services/intercept/intercept';\nimport { HammerJsConf } from './configurations';\nimport { serviceProviders } from './models';\nimport { NetworkStatusDialogComponent } from './widgets/network-status-dialog';\nimport { GenericDialogModule, TranslationModule } from './modules/miscs';\nimport {\n  CategoryReducers,\n  ENSBookmarkReducers,\n  ENSRegistrationReducers,\n  NavigatorButtonsReducers,\n  NavigatorReducers,\n  PagesReducers,\n  PaymentReducers,\n  UserReducers,\n} from './store/reducers';\nimport {\n  CategoryEffects,\n  ENSBookmarkEffects,\n  NavigatorEffects,\n  PagesEffects,\n  PaymentEffects,\n  UserEffects,\n} from './store/effects';\nimport { environment } from '../environments/environment';\nimport { ENSRegistrationEffects } from './store/effects';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [AppComponent, NetworkStatusDialogComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    MatProgressBarModule,\n    MatSnackBarModule,\n    TranslationModule,\n    StoreModule.forRoot(\n      {\n        UserState: UserReducers,\n        NavigatorState: NavigatorReducers,\n        PagesState: PagesReducers,\n        PaymentState: PaymentReducers,\n        NavigatorButtonsState: NavigatorButtonsReducers,\n        ENSRegistrationState: ENSRegistrationReducers,\n        ENSBookmarkState: ENSBookmarkReducers,\n        CategoriesState: CategoryReducers,\n      },\n      {\n        runtimeChecks: {\n          strictActionImmutability: false,\n        },\n      }\n    ),\n    EffectsModule.forRoot([\n      UserEffects,\n      NavigatorEffects,\n      PagesEffects,\n      PaymentEffects,\n      ENSRegistrationEffects,\n      ENSBookmarkEffects,\n      CategoryEffects,\n    ]),\n    environment.deployed === true\n      ? []\n      : StoreDevtoolsModule.instrument({\n          maxAge: 200,\n        }),\n    MatDialogModule,\n    MatButtonModule,\n    GenericDialogModule,\n  ],\n  exports: [\n    NetworkStatusDialogComponent,\n    BrowserModule,\n    HttpClientModule,\n    RouterModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    TranslationModule,\n    MatSnackBarModule,\n    GenericDialogModule,\n  ],\n  providers: [\n    ...serviceProviders,\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: HammerJsConf,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: Intercept,\n      multi: true,\n    },\n    { provide: MAT_DIALOG_DATA, useValue: {} },\n    { provide: MatDialogRef, useValue: {} },\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [NetworkStatusDialogComponent],\n  schemas: [NO_ERRORS_SCHEMA],\n})\nexport class AppModule {}\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\nimport { BehaviorSubject } from 'rxjs';\nimport { BootController } from './boot-control';\n\ndeclare global {\n  interface Window {\n    global: any;\n    process: any;\n    ethereumProvider: any;\n    etherscanProvider: any;\n  }\n}\n(window as any).global = window;\n(window as any).process = window;\n(window as any).process.browser = true;\n(window as any).process.version = '';\n(window as any).process.versions = { node: false };\n(window as any).global.appIsPaused = new BehaviorSubject(false);\n\nif (environment.production === true) {\n  enableProdMode();\n}\n\nexport function main(): any {\n  return platformBrowserDynamic().bootstrapModule(AppModule);\n}\n\nlet mainApp;\nif (module['hot']) {\n  module['hot'].accept();\n}\nconst boot = BootController.getbootControl()\n  .watchReboot()\n  .subscribe(() => {\n    if (mainApp) {\n      if ('ngRef' in window && 'destroy' in window['ngRef']) {\n        window['ngRef'].destroy();\n      }\n      window['ngRef'] = mainApp;\n    }\n    mainApp = main().catch((err) => console.error('Bootstrap error:', err));\n  });\nBootController.getbootControl().restart();\n"],"sourceRoot":"webpack:///","file":"main.a7559c3af7d9d00c.js"}