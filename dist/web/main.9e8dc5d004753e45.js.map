{"version":3,"mappings":"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AM,YAER,CACEH,OAAQ,CACN,CACEkhC,WAAY,CACV,CACEjhC,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,gBACNC,KAAM,QAER,CACEF,aAAc,SACdC,KAAM,QACNC,KAAM,UAER,CACEF,aAAc,SACdC,KAAM,gBACNC,KAAM,WAGVF,aAAc,oCACdC,KAAM,cACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,cACNC,KAAM,SAGVD,KAAM,mCACNE,QAAS,CACP,CACEH,aAAc,YACdC,KAAM,GACNC,KAAM,aAER,CACEF,aAAc,YACdC,KAAM,GACNC,KAAM,cAGVE,gBAAiB,OACjBF,KAAM,WACNG,UAAU,GAEZ,CACEN,OAAQ,CACN,CACEC,aAAc,YACdC,KAAM,cACNC,KAAM,cAGVD,KAAM,sBACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,WACdC,KAAM,QACNC,KAAM,YAER,CACEF,aAAc,YACdC,KAAM,cACNC,KAAM,aAER,CACEF,aAAc,YACdC,KAAM,cACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,uBACNE,QAAS,GACTC,gBAAiB,UACjBF,KAAM,WACNI,SAAS,GAEX,CACEP,OAAQ,CACN,CACEC,aAAc,WACdC,KAAM,QACNC,KAAM,YAER,CACEF,aAAc,YACdC,KAAM,cACNC,KAAM,aAER,CACEF,aAAc,YACdC,KAAM,cACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM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","names":["ENSMarketplaceMainnetABI","inputs","internalType","name","type","outputs","stateMutability","constant","payable","ENSMarketplaceTestnetABI","ContractAddressesMainnetEnum","contractChainlinkMainnet","bulkRegistrationMainnet","marketplaceMainnet","acceptedCurrenciesMainnet","ContractAddressesTestnetEnum","contractChainlinkTestnet","bulkRegistrationTestnet","marketplaceTestnet","acceptedCurrenciesTestnet","currency","address","ETH","decimals","decimalRepresentation","highValueAsset","DAI","USDT","WBTC","SupportedCurrenciesEnum","ENSContracts","registrar","reverseRegistry","reverseRegistryTestnet","resolver","resolverTestnet","registrarController","migrationContract","token","nullResolver","payNoMarketAddress","BlockExplorersEnum","ENSTokenNFTABI","anonymous","indexed","LNRContracts","ENSResolverABI","ENSReverseRegisteryABI","BUTTON","APPLY","NONE","SAVE_CHANGES","PROCEED","DISMISS","CONNECT","CONNECT_WALLET","DISCONNECT","LOGOUT","CLOSE","SETTINGS","LAUNCH_APP","CONNECT_TO_PROCEED","VIEW_DETAILS","REFRESH","START_REGISTRATION","CANCEL","PRESS_ENTER","LEARN_MORE","CLOSE_WINDOW","SHOW_AVAILABLE_ONLY","SHOW_AVAILABLE","PROCEED_SEARCH","DOWNLOAD","SHOW_ALL","DESELECT_ALL","SHOW_SELCTED","LINK","CUSTOM_LINK","SET_QR_LINK_ALL","SET_QR_LINK","DISABLE_ALL","DISABLE_QR_CODE","ENABLE_QR_CODE","SET_QR_COLOR","SET_COLOR","SET_ALL_COLORS","SET_PRICE","SET_PRICE_ALL","RESET","CHECK_PROFILE","GO_TO_DASHBOARD","GO_TO_HOME","VIEW_PROFILE","CHECK_DOMAINS","TRANSACTION_DETAILS","BUY_NOW","CLEAR_HISTORY","DEFAULT","CUSTOM","FRACTIONALISE","MORE_INFO","LESS_INFO","APPROVE","NEXT","PENDING","REMOVE","REMOVE_ALL_ITEMS","ADD_ALL_TO_CART","BOOKMARK_ALL","DOWNLOAD_LIST","SHARE_LIST","MORE","CHANGE","HEADER","ABOUT","FAQ","BACK_TO_HOME","HOME","CATEGORIES","HELP_SUPPORT","HELP","CANCEL_REGISTRATION","PROFILE","DOCS","DOCUMENTATIONS","CART","BOOKMARKS","PAYMENTS_HISTORY","LIGHT_MODE","CUSTOM_RPC","SETUP_REQUIRED","MANAGE_DOMAINS","FEATURE_DISABLED","IPFS","INITIALISING","FINDING_PEERS","FAILED","READY","PUBLISHING","EVENTS","TRANSFER","REGISTRATION","RENEWAL","SALE","MINT","BURN","GENERIC","NETWORK_CHANGED_INCOMPATIBLE","IPNS_PUBLISHING_COMPLETED","PENDING_TRANSACTION_CERATED","RENEWAL_DURATIONS","ONE_WEEK","ONE_MONTH","THREE_MONTHS","SIX_MONTHS","ONE_YEAR","TWO_YEARS","THREE_YEARS","FOUR_YEARS","FIVE_YEARS","LABELS","STOREFRONT_READY_TO_DEPLOY","ACCESS_STOREFRONT","BUY_ON","MY_PROFILE","CREATE_STOREFRONT","SETUP_PRIMARY_DOMAIN","CHOOSE_A_PRIMARY_DOMAIN","CREATE_YOUR_STOREFRONT","THIS_DOMAINS_IS_AVAILABLE_IN_MARKETPLACE","PURCHASE_DOMAINS","OWNED_BY","SETUP_STOREFRONT","MANAGE_FEATURED_ITEMS","VISIT_STOREFRONT","OPTIONS","FEATURED_ITEMS","SORT_BY_CATEGORY","SELECT_DOMAIN","SELECT_DOMAINS","RENEW_DOMAINS","TRANSFER_DOMAINS","BUYER","PRICE","ACTIVITY","TOP_CATEGORIES","TOTAL_ASSETS","MONTHLY_SALES","DAILY_VOLUME","MONTHLY_VOLUME","DAILY_SALES","TOP_SALE","TOP_SALES","TOP_BUYER","RECENT_SALES","SALES_ACTIVITY","ENTER_NAMES_TO_SEARCH","NOT_AVAILABLE","VOLUME","FLOOR","FILTER","RENEWAL_DURATION","TRANSACTION","USER_PROFILE","COMPLETE","ESTIMATED_COST","ADDRESS","PLEASE_WAIT","SELECT_A_DOMAIN","RENEW","SEARCH_FOR","MANAGE","COLLECT","LANDING_TEXT","GO_TO_PROFILE","SEARCH","CONTAIN_ALPHABET","CONTAIN_NUMBERS","CONTAIN_EMOJI","MIN_LENGTH","MAX_LENGTH","CONTAINING_KEYWORDS","FILTERS","DOMAINS","DOMAIN","DOMAIN_HISTORY","EXPIRATION_DATE","REGISTRATION_DATE","CREATION_DATE","DETAILS","YOUR_DOMAINS","PROCESSING","LAYOUT","ENTER_SUFFIX","ENTER_PREFIX","CLICK","CONNECT_TO_START","TIP","ACTION","ACTIONS","ADVANCED_SEARCH_TIP","ADVANCED_SEARCH","ADVANCED_MODE","REGISTER_DOMAINS_TO","NO_DOMAINS_SELECTED","FIND_AND_REGISTER","SELECTED_DOMAINS","REGISTER","SEARCH_RESULTS","PROCEED_TO_REGISTRATION","REGISTER_DOMAINS","REGISTRANT_ADDRESS","SET_RESOLVER","TOTAL_COST","GAS_PRICE","NO_ADDRESS_DETECTED","DURATION","NOTICE_SELECT_AN_RPC","ENABLE_LIGHT_MODE","CLICK_NEXT_TO_PROCEED","REGISTRATION_CANCELLED_TITLE","REGISTRATION_CANCELLED_DESCRIPTION","CANCEL_REGISTRATION_TITLE","CANCEL_REGISTRATION_DESCRIPTION","BEFORE_COMMIT","COMMIT_SENT","COMMIT_COMPLETE","AWAIT","BEFORE_REGISTRATION","REGISTRATION_SENT","REGISTRATION_COMPLETE","REGISTRATION_COMPLETE_TITLE","YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED","BASKET_EMPTY","PLEASE_SELECT_DOMAINS_TO_REGISTER","PAYMENT","PAYMENT_CANCELLED","SPINNER","SETUP_COMPLETE","LEDGER_NO_DEVICE_SELECTED","NO_DATA_TO_DISPLAY","PERFORMING_SEARCH","LOADING_DATA","FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET","FORM_LABELS","ENTER_DURATION","ENTER_QR_LINK","ENTER_PRICE","ENTER_CUSTOM_ADDRESS","ENTER_RECEIVER_ADDRESS","FORM_ERRORS","INVALID_DURATION","INVALID_QR_LINK","INVALID_PRICE","INVALID_ADDRESS","STEP","STEP_1","STEP_2","STEP_3","STEP_4","STEP_5","RENEWAL_COST","ESTIMATED_RENEWAL_COST","RENEWAL_COMPLETE","DOMAINS_READY_FOR_RENEWAL","TRANSFER_TO","TRANSFER_COMPLETE","SETUP_INSTRUCTION","CONTRACT_APPROVAL_NOTE","DOMAINS_READY_FOR_TRANSFER","o","S","R","N","L","O","validTranslations","en","EN","de","DE","es","ES","fr","FR","ru","RU","jp","JP","cn","CN","HammerJsConf","HammerGestureConfig","constructor","this","swipe","velocity","threshold","t","factory","generalConfigurations","version","defaultLanguage","defaultPage","PagesEnum","maximumDecimalInPrices","maxAttemptsToCheckoutData","sessionTimeout","maxRPCCallRetries","timeUntilImageLoadErrors","timeToUpdateEthUSDRate","timeToUpdateCheckoutPipe","timeToUpdateRegistrationGasPrice","timeUntilCheckoutExpires","maxBlogsOnHome","maxConfirmationsUntilTxFinal","declarePaymentStatusUnkownUntilXFailedDataFetches","gasLimitBuffer","maxCheckoutRetryUntilRehydrateProcessId","maxIpfsSubscriptionRetries","maxDomainsToRegister","maxDomainsToTransfer","maxDomainsToRenew","maxYearsRegistration","maxTotalCostBuffer","maxDomainSearch","ENS","LNR","defaultCurrency","enableCustomRPC","frontpageBlogsFeed","docsLink","blockscanLink","nftyChatLink","appName","appStagingName","trezorManifest","email","appUrl","appMeta","description","url","icons","enabledTools","category","management","canvas","registration","profile","domain","enablePoapResolution","poapRequiredTools","required","poapId","allowedIds","wallectConnectSupportedWallets","domainsCanBeRegistered","DomainTypeEnum","domainExtensions","domainNormalisationRequired","domainTldTitles","categoiesDataSourceFallback","categoriesUseFallback","categoryChartTimeRange","categoriesDomain","check","confetti","cart_empty","llayers","spin","infiniteLoopedIcons","imageToPreload","privatePages","invalidChars","dataNodeEndpoints","ping","checkout","thirdPartyMarketplacesConfigurations","icon","fee","assetLinks","assetLinksKey","assetLinksKeyExtraInfo","assetLinksProcessor","a","ethers","toString","EnsEventsEnum","EnsEvensSymbolEnum","UserStoreErrorsEnum","serviceProviders","UserService","UserSessionService","UserFacadeService","PagesFacadeService","NavigatorFacadeService","NavigatorButtonsFacadeService","FormValidationService","MiscUtilsService","TranslationService","FormatTimePipe","TimeAgoPipe","HttpClient","EnsService","RegistrationDataService","BookmarksServiceService","RegistrationServiceService","PaymentStorageService","WalletConnectService","DownloadService","ContractService","EnsMarketplaceService","LnrService","CategoriesDataService","PoapService","routerPaths","bootstrap","home","notfound","manage","ValidRPCProvidersEnum","PageModesEnum","PaymentErrorCodes","PaymentTypesEnum","NonceTypesEnum","WalletTypesEnum","EtherDecimalFixedModule","imports","IconModule","TranslationModule","MatDialogModule","MatButtonModule","FlexLayoutModule","CustomAddressDialogModule","ReactiveFormsModule","CommonModule","FormsModule","MatIconModule","MatFormFieldModule","MatInputModule","GenericDialogModule","GenericDialogComponent","OnboardDialogModule","SharedModule","SpinnerCustomModule","BulkSearchModule","MatSlideToggleModule","MatProgressBarModule","BlockyModule","SettingsDialogModule","MainHeaderModule","MatBadgeModule","MatMenuModule","MatAutocompleteModule","SaleManagementDialogModule","FooterModule","TimeAgo","EtherDecimalFixedPipe","transform","value","toFixed","pure","DatePipe","inputDate","Date","parseInt","super","transformShortened","formatTimePipe","timeAgo","time","format","toLowerCase","indexOf","i0","provide","HAMMER_GESTURE_CONFIG","useClass","MAT_PROGRESS_BAR_DEFAULT_OPTIONS","useValue","MAT_BOTTOM_SHEET_DATA","MAT_DIALOG_DATA","MatDialogRef","HttpClientModule","RouterModule","MatBottomSheetModule","MatExpansionModule","MatChipsModule","MatSelectModule","MatTabsModule","MatCardModule","MatDividerModule","MatRadioModule","MatStepperModule","MatCheckboxModule","MatSliderModule","MatRippleModule","MatProgressSpinnerModule","MatTableModule","MatListModule","MatTooltipModule","MatDatepickerModule","MatNativeDateModule","MatSnackBarModule","MatPaginatorModule","MatSortModule","DragDropModule","OverlayModule","QRCodeModule","NgxColorsModule","snackBar","countBookmarks","loadBookmarksAndFeed","length","loadBookmarks","localStorage","getItem","sBookmarks","JSON","parse","saveAllBookmark","domainsData","bookmarksRaw","reduce","accumulator","labelName","bKeys","Object","keys","bookmarks","Set","map","k","concat","setItem","stringify","saveBookmark","domainData","push","removeAllBookmarks","removeBookmark","domainName","bookmarksUpdated","filter","d","clearBookmarks","isDomainBookmarked","Archive","workerUrl","httpClient","getCategoriesComperssedArchive","categoriesToRead","get","responseType","pipe","switchMap","r","from","Observable","observer","categoriesData","extractFiles","entry","path","reader","FileReader","readAsText","file","onload","categoryData","result","next","complete","pingCategoriesDataProviders","endPoints","useEnpoints","environment","endPointRequests","e","join","of","provider","catchError","forkJoin","getCategoriesIpfsMetadata","endPoint","getCategoriesRootVolumeData","useEnpoint","getCategoriesData","collection","getCategoriesRootFallbackData","getGasLimitEstimation","method","params","payer","contractAddress","contractABI","providerFunction","c","Contract","estimateGas","then","catch","CurrencyService","deriveCurrencyAddressFromName","currencies","toUpperCase","deriveCurrencyDataFromCurrencyName","currencySearched","convertAmountToDecimal","amountInString","paymentCurrency","currencyData","bnAmount","BigNumber","convertAmountToToken","getSupportedCurrencies","determineDefaultCurrencyForPayment","searchType","chooseSecondDefault","secondDefaultToBeChosen","chainlinkV3ABI","globalAny","CurrencyExchangeService","paymentFacade","getPrices","processorLocked","timer","i","chainlink","latestRoundData","normalizedPrices","setEthUsdRate","answer","toNumber","chainlinkAddress","canvasProvider","mistUtils","download","meta","dataRaw","fileName","data","TextEncoder","encode","blob","Blob","fileURL","URL","createObjectURL","window","open","contractService","ensService","checkApproval","tokenId","contract","getENSTokenContract","ownerOf","isApprovedForAll","marketplaceContractAddress","transfer","domainNames","to","getENSMarketplaceContract","dataMethod","dataParams","dataInput","interface","encodeFunctionData","gasLimit","marketplaceContractABI","toPromise","approve","operator","approvalStatus","renew","priceRanges","duration","totalCost","namesLengths","getNameLength","add","setContentHash","hash","resolverAddress","getENSResolverContract","setText","key","setProfileName","getENSReverseRegistryContract","ensReverseRegistryContractAddress","http","miscUtils","getDomainMetadata","domainHash","ensMetadataAPI","getDomainContentHash","ethName","getResolver","getContentHash","web2Link","replace","getDomainContentHashPure","findDomains","domains","prepunk","expirationDate","registrationDate","ensGraphQLAPI","query","gql","request","prePunkBlock","getDomain","qlResultToDomainModel","n","domainType","gPeriod","calculateGracePeriodPercentage","expiryDate","id","labelHash","labelhash","isNotAvailable","expiry","gracePeriodPercent","undefined","Math","abs","createdAt","downloadDomainsListNamesOnly","finalForm","downloadDomainsListCSV","kk","calculateExpiry","eDate","getTime","timeUtilGraceEnds","gracePeriod","isDomainNameNotValid","prefixedOrSuffixed","prefixedAndSuffixed","minLengthOverride","skipNormalisation","minLength","invalidCharsForcedFilter","includes","ens_normalize","performNormalisation","prettify","ens_beautify","calculateDomainsPrice","ethToUsdRate","durationInYears","ethUsdRate","nameCost","parseFloat","extraFilters","filters","baseFilter","minL","maxL","maxLength","minD","getDateToStamp","creation","regD","maxD","expiration","extraFiltersPure","prefixOffset","suffixOffset","contains","containEmoji","emoji","containAlphabet","alphabet","containNumber","numbers","palindrome","repeating","nameLen","satisfied","nameToCheckForOffsets","codePointAt","prefixOffsetRemoved","substring","testRepeating","testPalindrome","isEmojiInLabel","isAlphabetInLabel","isAlphaNumericLabel","isNumberInLabel","getNameCategory","nameHash","dataSourceSets","optimisedCategoryData","categoryFound","testAlpha","test","testIntNumeric","isEmoji","testEmoji","nameLength","nameFirstChar","nameSecondChar","nameCodeHash","idFirstChar","idSecondChar","pattern","RegExp","max_length","patterned","optimiseCategoryNamesList","optimised","s","firstChar","charAt","secondChar","getDataOfObject","label","testAlphaNumeric","shuffleListOfNames","arr","randomIndex","currentIndex","floor","random","commitSingleGasCost","commitGasCost","registerGasCost","registerWithConfigGasCost","renewGasCost","markFormGroupTouched","formGroup","values","controls","forEach","control","markAsTouched","PathResolveService","resolve","route","state","typoPath","getThreshold","dictionary","sortByDistances","pathsDistance","sort","b","levenshtein","matrix","j","min","TrezorService","pagesFacade","connect","TrezorConnect","lazyLoad","webusb","popup","manifest","coin","payload","descriptor","signPayment","accountInfo","transaction","nonce","toHexString","signed","success","utils","v","getWeb3Provider","detectEthereumProvider","p","IconRegistryService","injectCustomIcons","perloadCustomIcons","ic","ici","Image","src","PaymentEffectsService","recordLastConnectionAddress","connectionAddress","getLastConnectionAddress","lConnectionAddres","Intercept","router","userFacade","intercept","req","handle","LedgerService","userFacadeService","ledger","getAddress","createTransport","TransportUSB","transport","LedgerEth","signTransaction","LNRABI","gloablAny","lnr","nameSearch","nameBytes","owner","Number","MAX_SAFE_INTEGER","MetamaskService","getAccounts","chainChangedDetectionDaemon","ethereum","on","chainId","setNetworkChainCode","accounts","removeUser","getChainId","networkVersion","Ethers","payloadHash","tx","moveArray","oldIndex","newIndex","splice","shuffleArray","roundUp","num","roundTo","round","testJSON","json","str","testUrl","checksumEtheruemAddress","commafied","parts","split","prependToArray","array","newArray","slice","unshift","toHex","rb","testNumeric","len","chars","parseXml","xml","dom","DOMParser","parseFromString","date","PaymentStoreErrorsEnum","PaymentErrorService","getPaymentErrorTranslatedTextKey","paymentError","getPaymentErrorEnumKey","errorCode","networkName","removePayments","removeItem","savePayments","paymentData","loadPayments","l","PaymentService","userService","currencyService","walletService","prepareTransaction","toAddress","gasPrice","payment","gas","paymentTotal","paymentAbstractBytesSlot","resolveAddressOfEth","walletAddress","resolveName","getWalletNonce","getTransactionCount","getGasPrice","getFeeData","feeData","getPoaps","poapGraphQLAPI","getPoapIds","poapResult","tokens","event","getPoapTokens","getPoapTokensByPoapId","poapTokens","ENSBulkRegistrationContractMainnetABI","components","ENSBulkRegistrationContractTestnetABI","RegistrationFacilityService","miscUtilsService","paymentService","registrationDomainsToCommitmentPacket","secret","commitments","compiled","nc","reverseRecord","fuses","wrapperExpiry","metadata","commitmentPacketToRegistrationDomains","decompiled","createRegistrationCommitmentPacket","getEnsBulkRegistrationContract","comitmentsPrepared","nCP","isResolverSet","commitmentResult","createCommitmentsForRegistration","bulkRegistrationContractAddress","BulkRegistrationContractABI","range","rangeP","mul","div","createRegistrationRequestPaymentPacket","commitmentsPrepared","decodeRegistrationPacket","abstractData","parseTransaction","completeRegistration","names","EnsTestnetABI","EnsABI","EnsRegistrarControllerTestnetABI","EnsRegistrarControllerABI","martketSaleTopics","SEAPORT","RARIBLE","X2Y2","LOOKSRARE","SortableMarkets","resolevTxType","relatedNameLabelHash","marketTopics","markets","qualifiedTx","logs","topics","resolvedEventType","labelHashInHex","paymentNoAddressBytes","topicNormalised","x","whichMarket","marketBuyer","getMarketBuyer","marketSeller","getMarketSeller","txHash","transactionHash","txValueToEther","timestamp","registrant","W","uniqueSet","filteredEvents","re","isDuplicate","has","market","eventWholeData","match","getENSContract","ensContractABI","getENSRegistrarControllerContract","ensRegistrarControllerContractABI","countRegistrations","loadRegistrationsAndFeed","loadRegistrations","sRegistrations","saveAllRegistrations","registrationsRaw","registrations","saveRegistrations","removeRegistration","registrationsUpdated","removeAllRegistrations","isDomainOnRegistrationList","TranslationPipe","translationService","language","getLanguage","translations","getTranslation","keysSplit","default","currentKey","lang","savedLanguage","loadLanguage","navigator","getLocale","getCacheableLanguagekeys","translation","getText","saveLanguage","getUserDomains","page","getEthAddress","getEthName","lookupAddress","getUserText","text","getUserContentHash","metamaskService","quitUserSession","saveUserSession","userData","loadUserSession","getUserSessionProvider","providerData","newProvider","createAlchemyFrontDefaultProvider","y","createAlchemyFrontProvider","createInfuraFrontProvider","createJSONFrontProvider","getDefaultChainId","chain","providerKeys","providerKey","providerKeyPicked","providers","projectId","projectSecret","ngZone","dateNow","walletConnect","connector","WalletConnect","bridge","qrcodeModal","QRCodeModal","qrcodeModalOptions","mobileLinks","desktopLinks","clientMeta","error","wc","killSession","setErrorState","chainAccount","gotoPageRoute","createSession","account","registerUser","walletType","sendTransaction","WalletService","produceNonce","nonceLength","charLibrary","nonceString","rnum","validateWalletAddress","InitEffectsCategory","SetCategoriesMetadata","SetCategoriesRootVolumeData","AddOneCategory","UpdateCategory","UpsertOneCategory","UpsertManyCategory","RemoveOneCategory","RemoveManyCategory","RemoveAllCategory","SetCategoryError","toSave","InitEffectsENSBookmark","AddOneENSBookmark","UpdateENSBookmark","UpsertOneENSBookmark","UpsertManyENSBookmark","RemoveOneENSBookmark","RemoveManyENSBookmark","RemoveAllENSBookmark","SetENSBookmarkError","InitEffectsENSRegistration","AddOneENSRegistration","UpdateENSRegistration","UpsertOneENSRegistration","UpsertManyENSRegistration","RemoveOneENSRegistration","RemoveManyENSRegistration","RemoveAllENSRegistration","SetENSRegistrationError","SetNavigatorButtonsState","GetNavigatorButtonsState","SetNavigatorState","GetNavigatorState","InitEffectsPages","ShowLoadingProgressBarOnLoad","HideLoadingProgressBarOnLoadFinished","SetPagesCriticalError","SetPagesMode","SetPagesPageSlide","SetPagesState","SetPageIpfsErrors","SetPageIpfsState","SetPageChainCode","SetPagesNewPageState","SetPagesNetworkState","SetPagesVisibility","SetRPCProvider","SetPagesNetworkStateOffline","GetPagesState","GotoPageRoute","redirect","firstTimeSet","InitEffectsPayments","PaymentCheckFulfilled","CancelledPayment","AddOnePayment","UpdatePayment","UpsertOnePayment","UpsertManyPayment","SetEthUSDRates","RemoveOnePayment","RemoveManyPayment","RemoveAllPayment","ArchiveAllPayment","SetPaymentError","InitEffectsUserState","SetUserPoaps","SetUserState","SetUserError","GetUserState","RemoveUserError","RemoveUserState","RemoveUser","AddUser","UpdateUser","RegisterUser","store","userState$","select","getCurrentUserState","user$","getCurrentUser","startEffects","dispatch","UserEffectsInit","UserRegister","newUserState","userState","UserStateSet","removeUserState","UserStateRemove","UserRemove","removeUserStateError","UserErrorRemove","UserErrorSet","addUser","userAddData","UserAdd","updateUser","UserUpdate","PaymentFacadeService","paymentState$","getPaymentState","pendingPayments$","getPendingPayments","paymentsStoreError$","getPaymentStateError","paymentsStoreLoading$","getPaymentStateLoading","ethUsdPrice$","getEthUsdPrice","PaymentsEffectsInit","usdRate","PaymentETHUSDRatesSet","createPayment","PaymentAddOne","removeAllPayment","PaymentRemoveAll","removePayment","PaymentRemoveOne","paymentSerial","payments","PaymentRemoveMany","archiveAllPayment","PaymentArchiveAll","upsertPayment","PaymentUpsertOne","updatePayment","PaymentUpdate","getPayment","paymentId","selectPayment","getPayments","removePaymentStateError","PaymentErrorSet","ENSBookmarkFacadeService","getENSBookmarkState$","getENSBookmarkState","ENSBookmarkEffectsInit","addBookmark","bookmark","ENSBookmarkAddOne","ENSBookmarkRemoveOne","ENSBookmarkRemoveAll","removeBookmarks","ENSBookmarkRemoveMany","upsertBookmark","ENSBookmarkUpsertOne","upsertAllBookmark","ENSBookmarkUpsertMany","updateBookmark","ENSBookmarkUpdate","getBookmark","bookmarkId","selectENSBookmark","getBookmarks","getENSBookmarks","removeBookmarkStateError","ENSBookmarkErrorSet","ENSRegistrationFacadeService","getENSRegistrationState$","getENSRegistrationState","ENSRegistrationEffectsInit","addRegistration","ENSRegistrationAddOne","ENSRegistrationRemoveOne","removeRegistrations","ENSRegistrationRemoveMany","ENSRegistrationRemoveAll","upsertRegistration","ENSRegistrationUpsertOne","upsertAllRegistration","ENSRegistrationUpsertMany","updateRegistration","ENSRegistrationUpdate","getRegistration","registrationId","selectENSRegistration","getRegistrations","getENSRegistrations","removeRegistrationStateError","ENSRegistrationErrorSet","CategoryFacadeService","getCategoryState$","getCategoryState","CategoryEffectsInit","CategoryAddOne","CategoryRemoveOne","CategoryRemoveAll","categories","CategoryRemoveMany","CategoryUpsertOne","CategoryUpsertMany","CategoryUpdate","selectCategory","getCategorys","CategoryErrorSet","disabledButtonnavigatorState$","getCurrentNavigatorButtonsState","newNavigatorButtonsState","navigatorState","setTimeout","NavigatorButtonsStateSet","resetNavigatorButtonState","initialNavigatorButtonsState","navigatorState$","getCurrentNavigatorState","newNavigatorState","NavigatorStateSet","resetNavigatorState","initialNavigatorState","navigatorFacade","navigatorButtonFacade","dialog","pageMode$","getCurrentPageMode","pagesState$","getCurrentPagesState","pageErrorCode$","getCurrentErrorCode","pagesIpfsState$","getIpfsState","pagesIpfsError$","getIpfsError","pageLoadingState$","getCurrentPageLoadState","pageCritiaclError$","getCriticalErrorState","pageVisibility$","getCurrentPageVisibility","PagesEffectsInit","showLoadingProgressBar","document","getElementById","style","display","PagesShowLoadingProgressBarOnLoad","showNotEnabledToolDialog","titleText","subText","panelClass","setPageMode","pageMode","PagesSetMode","setPageCriticalError","errorOccured","PagesSetCriticalError","setRpcProvider","PagesSetRPCProvider","setIpfsError","PagesSetIpfsError","setIpfsState","PagesSetIpfsState","hideLoadingProgressBar","PagesHideLoadingProgressBarOnLoadFinished","newPagesState","pagesState","PagesNewPageStateSet","newNetworkState","networkState","PagesNetworkStateSet","chainCode","PagesSetChainCode","setChainCodeByNetworkName","triggerNetworkOfflineDialog","PagesNetworkOfflineStateInvoke","setPageSlide","pageSlide","PagesSetPageSlide","pageRoute","toPageId","PageGotoRoute","pageId","disabledButtons","action","navigatorActiveButtonId","navigatorData","IpfsStatesEnum","initialPagesState","optionalProvider","pageVisibility","criticalErrorOccured","currentPageId","currentPageSlide","ipfsError","ipfsReady","networkStatus","networkChainCode","isPageLoading","initialUserState","loading","user","poapsResolved","poaps","adapter","createEntityAdapter","selectId","initialPaymentState","getInitialState","ethUsdPrice","paymentCancelled","stateChange","upsertOne","ids","entities","addOne","upsertMany","removeOne","removeMany","removeAll","updatedPayments","archived","ensRegistrationAdapter","initialENSRegistrationState","ensBookmarkAdapter","initialENSBookmarkState","CategoryAdapter","initialCategoryState","categoriesMetadata","categoriesRootVolumeData","getNavigatorButtonsState","createFeatureSelector","createSelector","getNavigatorState","getPagesState","getCurrentNetworkChainId","getUserState","getUser","getPaymentStateFull","pendingPs","ps","paymentStatus","getENSRegistrationStateFull","archivedPs","getENSBookmarkStateFull","getCategoryStateFull","ctx_r13","ctx_r15","ctx_r16","pagesFacadeService","genericDialogRef","Subject","ngOnInit","backdropClick","subscribe","closedByButton","closeDialog","overlays","getElementsByClassName","wrappers","overlaysCountOnInit","remove","attr","createAttribute","attributes","setNamedItem","existingAttr","getNamedItem","newAttr","close","goToOnExit","goToOnExitPage","yesNoPressed","yesNoButton","goToLink","buttonLink","buttonLinkPageRef","textAlign","selectors","IconComponent","iconRegistryService","iconsRegistry","iconId","stopCheck","checkIconSubscription","interval","takeUntil","nativeElement","innerText","setIcon","replaceAll","APNG","parseURL","apng","width","height","iconAnimation","addContext","getContext","playIcon","play","rewind","frames","ngAfterViewChecked","isVisible","offsetParent","ngOnDestroy","unsubscribe","_reboot","asObservable","BootController","instance","watchReboot","reboot$","restart","production","development","deployed","local","chrome","defaultChain","baseUrl","validChainIds","networks","goerli","networkId","ensApp","homestead","routes","redirectTo","pathMatch","loadChildren","Promise","m","HomeModule","DomainModule","ProfileModule","CheckoutModule","CategoryModule","NotFoundModule","AppRoutingModule","useHash","NetworkStatusEnum","AppComponent","activatedRoute","userSessionService","iconsRegistryService","onNetworkOnline","target","onNetworkOffline","cId","primaryDomain","routeArr","location","href","ngDoCheck","cdk","lightMode","classList","ngAfterViewInit","onLine","getHeight","innerHeight","pageLoadingState","ctx","NavigatorEffects","actions$","RpcService","loadRpc","saveRpc","rpcData","removeRPC","PagesEffects","ensBookmarksFacade","ensRegistrationFacade","categoriesFacade","rpcService","createEffect","ofType","events","runOutsideAngular","NavigationStart","NavigationEnd","NavigationError","assessProviderChanges","createProvider","withLatestFrom","networkAndPageState","network","pageState","delay","run","message","navigateByUrl","addEventListener","hidden","PagesSetVisibility","initiateOtherEffects","canvasEffectsInitialised","UserEffects","trezorService","ledgerService","poapService","userSessionStored","defaultChainId","connectType","userDataParsed","UserPoapsSet","userPoaps","userPoapTokens","timeNow","timeout","userSession","connectSignature","originalConnectAddress","deviceLanguage","PaymentEffects","paymentErrorService","currencyExchangeService","walletConnectService","paymentStorageService","paymentEffectsService","PaymentUpsertMany","paymentHash","CheckPaymentFulfilled","preparedTx","paymentMarketAddress","paymentGasLimit","staticGenericTranslatedTexts","horizontalPosition","verticalPosition","txToFilter","txHex","signedPacked","staticPaymentTranslatedTexts","PaymentCancelled","paymentNonce","paymentResolved","pvp","pv","paymentState","mergeMap","hasResolved","getBlockNumber","blockNumber","searchTxFromBlock","paymentPayer","paymentPayee","getTransactionReceipt","foundTx","getTransactionByNonce","status","confirmations","paymentDate","paymentType","ENSBookmarkEffects","bookMarkService","ENSRegistrationEffects","registrationService","registrationFacilityService","CategoryEffects","categoriesDataService","hasRootCategoryDataBeenResolved","categoryMetdata","retryWhen","delayWhen","categoryMetdataRaw","categoriesRootProviders","rootDataProviders","CategoryMetadataSet","activeProviders","providerChosen","CategoryRootVolumeDataSet","AppModule","HTTP_INTERCEPTORS","multi","BrowserModule","BrowserAnimationsModule","StoreModule","UserState","UserReducers","NavigatorState","NavigatorReducers","PagesState","PagesReducers","PaymentState","PaymentReducers","NavigatorButtonsState","NavigatorButtonsReducers","ENSRegistrationState","ENSRegistrationReducers","ENSBookmarkState","ENSBookmarkReducers","CategoriesState","CategoryReducers","runtimeChecks","strictActionImmutability","EffectsModule","StoreDevtoolsModule","maxAge","mainApp","global","process","browser","versions","node","appIsPaused","BehaviorSubject","enableProdMode","ngRef","destroy","__NgCli_bootstrap_1","bootstrapModule","err","console"],"sources":["./src/app/configurations/contracts/ens-marketplace-abi-mainnet.model.ts","./src/app/configurations/contracts/ens-marketplace-abi-testnet.model.ts","./src/app/configurations/contracts/contract-addresses-mainnet.enum.ts","./src/app/configurations/contracts/contract-addresses-testnet.enum.ts","./src/app/configurations/contracts/supported-currencies.enum.ts","./src/app/configurations/contracts/ens-contracts.model.ts","./src/app/configurations/contracts/block-explorers.enum.ts","./src/app/configurations/contracts/ens-token-nft-abi.model.ts","./src/app/configurations/contracts/lnr-contracts.model.ts","./src/app/configurations/contracts/ens-resolver-abi.model.ts","./src/app/configurations/contracts/ens-reverse-registry-abi.model.ts","./src/app/configurations/translations/en.conf.ts","./src/app/configurations/translations/de.conf.ts","./src/app/configurations/translations/cn.conf.ts","./src/app/configurations/translations/jp.conf.ts","./src/app/configurations/translations/es.conf.ts","./src/app/configurations/translations/ru.conf.ts","./src/app/configurations/translations/fr.conf.ts","./src/app/configurations/translation.conf.ts","./src/app/configurations/hammer-js.conf.ts","./src/app/configurations/general.conf.ts","./src/app/configurations/icons.ts","./src/app/configurations/image-to-preload.conf.ts","./src/app/configurations/private-pages.conf.ts","./src/app/configurations/invalid-chars.conf.ts","./src/app/configurations/data-node-endpoints.conf.ts","./src/app/configurations/third-party-marketplaces.conf.ts","./src/app/models/domains/domain-type.enum.ts","./src/app/models/ens/ens-events.enum.ts","./src/app/models/error-enums/user-store-errors.enum.ts","./src/app/models/service-providers.model.ts","./src/app/models/pay-no-market-address.model.ts","./src/app/models/router-paths.model.ts","./src/app/models/rpc/valid-rpc-providers.enum.ts","./src/app/models/states/pages-interfaces/page-modes.enum.ts","./src/app/models/states/pages-interfaces/pages.enum.ts","./src/app/models/states/payment-interfaces/payment-error-codes.enum.ts","./src/app/models/states/payment-interfaces/payment-types.enum.ts","./src/app/models/states/wallet-interfaces/nonce-types.enum.ts","./src/app/models/states/wallet-interfaces/wallet-types.enum.ts","./src/app/modules/miscs/ether-decimal-fixed.module.ts","./src/app/modules/miscs/icon.module.ts","./src/app/modules/miscs/custom-address-dialog.module.ts","./src/app/modules/miscs/generic-dialog.module.ts","./src/app/modules/miscs/onboard-dialog.module.ts","./src/app/modules/miscs/spinner-custom.module.ts","./src/app/modules/miscs/bulk-search.module.ts","./src/app/modules/miscs/blocky.module.ts","./src/app/modules/miscs/settings-dialog.module.ts","./src/app/modules/miscs/main-header.module.ts","./src/app/modules/miscs/sale-management-dialog.module.ts","./src/app/modules/miscs/footer.module.ts","./src/app/modules/miscs/translation.module.ts","./src/app/modules/pipes/ether-decimal-fixed.pipe.ts","./src/app/modules/pipes/format-time.pipe.ts","./src/app/modules/pipes/time-ago.pipe.ts","./src/app/modules/shared.module.ts","./src/app/services/bookmarks/bookmarks-service.service.ts","./src/app/services/categories-data/categories-data.service.ts","./src/app/services/contract/contract.service.ts","./src/app/services/currency/currency.service.ts","./src/app/configurations/contracts/chainlink-aggregator-v3.abi.ts","./src/app/services/currency/currency-exchange.service.ts","./src/app/services/download/download.service.ts","./src/app/services/ens-marketplace/ens-marketplace.service.ts","./src/app/services/ens/ens.service.ts","./src/app/services/form-validation/form-validation.service.ts","./src/app/services/path-resolve/path-resolve.service.ts","./src/app/services/trezor/trezor.service.ts","./src/app/services/icon-registry/icon-registry.service.ts","./src/app/services/store/payments/payment-effects.service.ts","./src/app/services/intercept/intercept.ts","./src/app/services/ledger/ledger.service.ts","./src/app/configurations/contracts/lnr.abi.ts","./src/app/services/lnr/lnr.service.ts","./src/app/services/metamask/metamask.service.ts","./src/app/services/misc-utils/misc-utils.service.ts","./src/app/models/error-enums/payment-store-errors.enum.ts","./src/app/services/payment/payment-error.service.ts","./src/app/services/payment/payment-storage.service.ts","./src/app/services/payment/payment.service.ts","./src/app/services/poap/poap.service.ts","./src/app/configurations/contracts/ens-bulk-registration-mainnet.abi.ts","./src/app/configurations/contracts/ens-bulk-registration-testnet.abi.ts","./src/app/services/registration/registration-facility.service.ts","./src/app/configurations/contracts/ens-abi-testnet.model.ts","./src/app/configurations/contracts/ens-abi.model.ts","./src/app/configurations/contracts/ens-registrar-controller-abi-testnet.model.ts","./src/app/configurations/contracts/ens-registrar-controller-abi.model.ts","./src/app/services/registration/registration-data.service.ts","./src/app/services/registration/registration-service.service.ts","./src/app/services/translations/translation.pipe.ts","./src/app/services/translations/translation.service.ts","./src/app/services/user/user.service.ts","./src/app/services/user/user-session.service.ts","./src/app/services/wallet-connect/wallet-connect.service.ts","./src/app/services/wallet/wallet.service.ts","./src/app/store/actions/categories.action.ts","./src/app/store/actions/ens-bookmark.action.ts","./src/app/store/actions/ens-registration.action.ts","./src/app/store/actions/navigation-buttons.actions.ts","./src/app/store/actions/navigator.actions.ts","./src/app/store/actions/pages.actions.ts","./src/app/store/actions/payment.actions.ts","./src/app/store/actions/user.actions.ts","./src/app/store/facades/user.facades.ts","./src/app/store/facades/payment.facade.ts","./src/app/store/facades/ens-bookmark.facades.ts","./src/app/store/facades/ens-registration.facades.ts","./src/app/store/facades/categories.facades.ts","./src/app/store/facades/navigator-buttons.facades.ts","./src/app/store/facades/navigator.facades.ts","./src/app/store/facades/pages.facades.ts","./src/app/store/reducers/navigator-buttons.reducers.ts","./src/app/store/reducers/navigator.reducers.ts","./src/app/models/ipfs/ipfs-states.enum.ts","./src/app/store/reducers/pages.reducers.ts","./src/app/store/reducers/user.reducers.ts","./src/app/store/reducers/payment.reducers.ts","./src/app/store/reducers/ens-registration.reducers.ts","./src/app/store/reducers/ens-bookmark.reducers.ts","./src/app/store/reducers/categories.reducers.ts","./src/app/store/selectors/navigator-buttons.selectors.ts","./src/app/store/selectors/navigator.selectors.ts","./src/app/store/selectors/pages.selectors.ts","./src/app/store/selectors/user.selectors.ts","./src/app/store/selectors/payment.selectors.ts","./src/app/store/selectors/ens-registration.selectors.ts","./src/app/store/selectors/ens-bookmark.selectors.ts","./src/app/store/selectors/categories.selectors.ts","./src/app/widgets/generic-dialog/generic-dialog.component.html","./src/app/widgets/generic-dialog/generic-dialog.component.ts","./src/app/widgets/icon/icon.component.ts","./src/app/widgets/icon/icon.component.html","./src/boot-control.ts","./src/environments/environment.prod.ts","./src/app/app-routing.module.ts","./src/app/models/states/pages-interfaces/network-status.enum.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/store/effects/navigator.effects.ts","./src/app/services/rpc/rpc.service.ts","./src/app/store/effects/pages.effects.ts","./src/app/store/effects/user.effects.ts","./src/app/store/effects/payment.effects.ts","./src/app/store/effects/ens-bookmark.effects.ts","./src/app/store/effects/ens-registration.effects.ts","./src/app/store/effects/categories.effects.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["export const ENSMarketplaceMainnetABI = [\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'addressStorage',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    name: 'receiptNonces',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'reservedStorage',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'uintStorage',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'string[]',\n        name: 'domains',\n        type: 'string[]',\n      },\n    ],\n    name: 'transferDomains',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'renewDomains',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'getENSPriceRanges',\n    outputs: [\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: 'resetRentryGuard',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'nameExists',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'nameOwner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'domainName',\n        type: 'string',\n      },\n    ],\n    name: 'getNameHash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newController',\n        type: 'address',\n      },\n    ],\n    name: 'changeController',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'collectFees',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","export const ENSMarketplaceTestnetABI = [\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'addressStorage',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    name: 'receiptNonces',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'reservedStorage',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'uintStorage',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'string[]',\n        name: 'domains',\n        type: 'string[]',\n      },\n    ],\n    name: 'transferDomains',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'renewDomains',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'getENSPriceRanges',\n    outputs: [\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: 'resetRentryGuard',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'nameExists',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'nameOwner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'domainName',\n        type: 'string',\n      },\n    ],\n    name: 'getNameHash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newController',\n        type: 'address',\n      },\n    ],\n    name: 'changeController',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'collectFees',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","import { AcceptedCurrencyModel } from '../../models/currencies';\n\nexport enum ContractAddressesMainnetEnum {\n  ETH = '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',\n  DAI = '0xf80A32A835F79D7787E8a8ee5721D0fEaFd78108',\n  USDT = '0xB404c51BBC10dcBE948077F18a4B8E553D160084',\n  WBTC = '0xa0E54Ab6AA5f0bf1D62EC3526436F3c05b3348A0',\n}\n\nexport const contractChainlinkMainnet =\n  '0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419';\nexport const bulkRegistrationMainnet =\n  '0x67f57d9C4dc6fbEE423B15B6bBe488c3896AfBc3';\nexport const marketplaceMainnet = '0x34c3f58058E2ad098ef437Ee5Ea1ff1fE2fe4214';\n\nexport const acceptedCurrenciesMainnet = [] as AcceptedCurrencyModel[];\n","import { AcceptedCurrencyModel } from '../../models/currencies';\n\nexport enum ContractAddressesTestnetEnum {\n  ETH = '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',\n  DAI = '0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD',\n  USDT = '0x13512979ADE267AB5100878E2e0f485B568328a4',\n  WBTC = '0x3b92f58feD223E2cB1bCe4c286BD97e42f2A12EA',\n}\n\nexport const contractChainlinkTestnet =\n  '0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e';\nexport const bulkRegistrationTestnet =\n  '0x37c6ea208a60FbD6D63B9C705F832246c8806C3c';\nexport const marketplaceTestnet = '0x4a21FD6B250c2EF7EFA4B52966F57A45179FFA57';\n\nexport const acceptedCurrenciesTestnet = [\n  {\n    currency: 'ETH',\n    address: ContractAddressesTestnetEnum.ETH,\n    decimals: 18,\n    decimalRepresentation: '1000000000000000000',\n    highValueAsset: true,\n  },\n  {\n    currency: 'DAI',\n    address: ContractAddressesTestnetEnum.DAI,\n    decimals: 18,\n    decimalRepresentation: '1000000000000000000',\n    highValueAsset: false,\n  } as AcceptedCurrencyModel,\n  {\n    currency: 'USDT',\n    address: ContractAddressesTestnetEnum.USDT,\n    decimals: 6,\n    decimalRepresentation: '1000000',\n    highValueAsset: false,\n  } as AcceptedCurrencyModel,\n  {\n    currency: 'WBTC',\n    address: ContractAddressesTestnetEnum.WBTC,\n    decimals: 18,\n    decimalRepresentation: '1000000000000000000',\n    highValueAsset: true,\n  } as AcceptedCurrencyModel,\n] as AcceptedCurrencyModel[];\n","export enum SupportedCurrenciesEnum {\n  ETH = \"Ethereum\",\n  DAI = \"Dai Stablecoin\",\n  USDT = \"Tether USD\",\n  WBTC = \"Wrapped Bitcoin\",\n}\n","import { payNoMarketAddress } from 'src/app/models/pay-no-market-address.model';\n\nexport const ENSContracts = {\n  registrar: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  reverseRegistry: '0x084b1c3C81545d370f3634392De611CaaBFf8148',\n  reverseRegistryTestnet: '0xD5610A08E370051a01fdfe4bB3ddf5270af1aA48',\n  resolver: '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41',\n  resolverTestnet: '0x4B1488B7a6B320d2D721406204aBc3eeAa9AD329',\n  registrarController: '0x283Af0B28c62C092C9727F1Ee09c02CA627EB7F5',\n  migrationContract: '0x6109DD117AA5486605FC85e040ab00163a75c662',\n  token: '0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85',\n  nullResolver: payNoMarketAddress,\n};\n","export enum BlockExplorersEnum {\n  homestead = 'https://etherscan.io/',\n  goerli = 'https://goerli.etherscan.io/',\n}\n","export const ENSTokenNFTABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'approved',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'balance',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'ownerOf',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getApproved',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: '_approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","import { payNoMarketAddress } from 'src/app/models/pay-no-market-address.model';\n\nexport const LNRContracts = {\n  registrar: '0x5564886ca2C518d1964E5FCea4f423b41Db9F561',\n  nullResolver: payNoMarketAddress,\n};\n","export const ENSResolverABI = [\n  {\n    inputs: [\n      {\n        internalType: 'contract ENS',\n        name: '_ens',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'contentType',\n        type: 'uint256',\n      },\n    ],\n    name: 'ABIChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'a',\n        type: 'address',\n      },\n    ],\n    name: 'AddrChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'coinType',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'newAddress',\n        type: 'bytes',\n      },\n    ],\n    name: 'AddressChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'target',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'isAuthorised',\n        type: 'bool',\n      },\n    ],\n    name: 'AuthorisationChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'hash',\n        type: 'bytes',\n      },\n    ],\n    name: 'ContenthashChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'name',\n        type: 'bytes',\n      },\n      {\n        indexed: false,\n        internalType: 'uint16',\n        name: 'resource',\n        type: 'uint16',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'record',\n        type: 'bytes',\n      },\n    ],\n    name: 'DNSRecordChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'name',\n        type: 'bytes',\n      },\n      {\n        indexed: false,\n        internalType: 'uint16',\n        name: 'resource',\n        type: 'uint16',\n      },\n    ],\n    name: 'DNSRecordDeleted',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'DNSZoneCleared',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'implementer',\n        type: 'address',\n      },\n    ],\n    name: 'InterfaceChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'NameChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    name: 'PubkeyChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'string',\n        name: 'indexedKey',\n        type: 'string',\n      },\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'key',\n        type: 'string',\n      },\n    ],\n    name: 'TextChanged',\n    type: 'event',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'contentTypes',\n        type: 'uint256',\n      },\n    ],\n    name: 'ABI',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'addr',\n    outputs: [\n      {\n        internalType: 'address payable',\n        name: '',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'coinType',\n        type: 'uint256',\n      },\n    ],\n    name: 'addr',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'authorisations',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'clearDNSZone',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'name',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint16',\n        name: 'resource',\n        type: 'uint16',\n      },\n    ],\n    name: 'dnsRecord',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'name',\n        type: 'bytes32',\n      },\n    ],\n    name: 'hasDNSRecords',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n    ],\n    name: 'interfaceImplementer',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes[]',\n        name: 'data',\n        type: 'bytes[]',\n      },\n    ],\n    name: 'multicall',\n    outputs: [\n      {\n        internalType: 'bytes[]',\n        name: 'results',\n        type: 'bytes[]',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'name',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'pubkey',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'contentType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'setABI',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'coinType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'a',\n        type: 'bytes',\n      },\n    ],\n    name: 'setAddr',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'a',\n        type: 'address',\n      },\n    ],\n    name: 'setAddr',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'target',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'isAuthorised',\n        type: 'bool',\n      },\n    ],\n    name: 'setAuthorisation',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'hash',\n        type: 'bytes',\n      },\n    ],\n    name: 'setContenthash',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'setDNSRecords',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n      {\n        internalType: 'address',\n        name: 'implementer',\n        type: 'address',\n      },\n    ],\n    name: 'setInterface',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'setName',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    name: 'setPubkey',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'string',\n        name: 'key',\n        type: 'string',\n      },\n      {\n        internalType: 'string',\n        name: 'value',\n        type: 'string',\n      },\n    ],\n    name: 'setText',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'string',\n        name: 'key',\n        type: 'string',\n      },\n    ],\n    name: 'text',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","export const ENSReverseRegisteryABI = [\n  {\n    inputs: [\n      {\n        internalType: 'contract ENS',\n        name: 'ensAddr',\n        type: 'address',\n      },\n      {\n        internalType: 'contract Resolver',\n        name: 'resolverAddr',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'ADDR_REVERSE_NODE',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'claim',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n    ],\n    name: 'claimWithResolver',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'defaultResolver',\n    outputs: [\n      {\n        internalType: 'contract Resolver',\n        name: '',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'ens',\n    outputs: [\n      {\n        internalType: 'contract ENS',\n        name: '',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'node',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'setName',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","export default {\n  BUTTON: {\n    APPLY: 'Apply',\n    NONE: 'None',\n    SAVE_CHANGES: 'Save Changes',\n    PROCEED: 'Proceed',\n    DISMISS: 'Dismiss',\n    CONNECT: 'Connect',\n    CONNECT_WALLET: 'Connect Wallet',\n    DISCONNECT: 'Disconnect',\n    LOGOUT: 'Logout',\n    CLOSE: 'Close',\n    SETTINGS: 'Settings',\n    LAUNCH_APP: 'Launch App',\n    CONNECT_TO_PROCEED: 'Connect Wallet',\n    VIEW_DETAILS: 'View Details',\n    REFRESH: 'Refresh',\n    START_REGISTRATION: 'Start Registration',\n    CANCEL: 'Cancel',\n    PRESS_ENTER: 'Press Enter',\n    LEARN_MORE: 'Learn More',\n    CLOSE_WINDOW: 'Close Window',\n    SHOW_AVAILABLE_ONLY: 'Show Available Only',\n    SHOW_AVAILABLE: 'Show Available',\n    PROCEED_SEARCH: 'Proceed Search',\n    DOWNLOAD: 'Download',\n    SHOW_ALL: 'Show All',\n    DESELECT_ALL: 'Deselect All',\n    SHOW_SELCTED: 'Show Selected',\n    LINK: 'Link',\n    CUSTOM_LINK: 'Custom Link',\n    SET_QR_LINK_ALL: 'Set QR Link All',\n    SET_QR_LINK: 'Set QR Link',\n    DISABLE_ALL: 'Disable All',\n    DISABLE_QR_CODE: 'Disable QR Code',\n    ENABLE_QR_CODE: 'Enable QR Code',\n    SET_QR_COLOR: 'Set QR Color',\n    SET_COLOR: 'Set Color',\n    SET_ALL_COLORS: 'Set All Colors',\n    SET_PRICE: 'Set Price',\n    SET_PRICE_ALL: 'Set Price All',\n    RESET: 'Reset',\n    CHECK_PROFILE: 'Check Profile',\n    GO_TO_DASHBOARD: 'Go to Dashboard',\n    GO_TO_HOME: 'Go To Home',\n    VIEW_PROFILE: 'View Profile',\n    CHECK_DOMAINS: 'Check Domains',\n    TRANSACTION_DETAILS: 'Transaction Details',\n    BUY_NOW: 'Buy Now',\n    CLEAR_HISTORY: 'Clear History',\n    DEFAULT: 'Default',\n    CUSTOM: 'Custom',\n    FRACTIONALISE: 'Fractionalise',\n    MORE_INFO: 'More Info',\n    LESS_INFO: 'Less Info',\n    APPROVE: 'Approve',\n    NEXT: 'Next',\n    PENDING: 'Pending',\n    REMOVE: 'Remove',\n    REMOVE_ALL_ITEMS: 'Remove All Items',\n    ADD_ALL_TO_CART: 'Add All To Cart',\n    BOOKMARK_ALL: 'Bookmark All',\n    DOWNLOAD_LIST: 'Download List',\n    SHARE_LIST: 'Share List',\n    MORE: 'More',\n    CHANGE: 'Change',\n  },\n  HEADER: {\n    ABOUT: 'About',\n    FAQ: 'FAQs',\n    BACK_TO_HOME: 'Back to Home',\n    HOME: 'Home',\n    CATEGORIES: 'Categories',\n    HELP_SUPPORT: 'Help & Support',\n    HELP: 'Help',\n    CANCEL_REGISTRATION: 'Cancel Registration',\n    PROFILE: 'Profile',\n    SETTINGS: 'Settings',\n    DOCS: 'Docs',\n    DOCUMENTATIONS: 'Documentations',\n    CART: 'Cart',\n    BOOKMARKS: 'Bookmarks',\n    PAYMENTS_HISTORY: 'Payments History',\n    LIGHT_MODE: 'Light Mode',\n    CUSTOM_RPC: 'Custom RPC',\n    SETUP_REQUIRED: 'Setup Required',\n    MANAGE_DOMAINS: 'Manage Domains',\n    APPROVE: 'Approve',\n    FEATURE_DISABLED: 'Feature Disabled',\n  },\n  IPFS: {\n    INITIALISING: 'Starting p2p',\n    FINDING_PEERS: 'Finding peers',\n    FAILED: 'Failed',\n    READY: 'Ready',\n    PUBLISHING: 'Publishing',\n  },\n  EVENTS: {\n    TRANSFER: 'Transfer',\n    REGISTRATION: 'Registration',\n    RENEWAL: 'Renewal',\n    SALE: 'Sale',\n    MINT: 'Mint',\n    BURN: 'Burn',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE:\n      'Network is not supported. Please change your network.',\n    IPNS_PUBLISHING_COMPLETED: 'Publishing completed!',\n    PENDING_TRANSACTION_CERATED:\n      'A new transaction has been created. Please check your wallet.',\n  },\n  RENEWAL_DURATIONS: {\n    ONE_WEEK: '1 Week',\n    ONE_MONTH: '1 Month',\n    THREE_MONTHS: '3 Months',\n    SIX_MONTHS: '6 Months',\n    ONE_YEAR: '1 Year',\n    TWO_YEARS: '2 Years',\n    THREE_YEARS: '3 Years',\n    FOUR_YEARS: '4 Years',\n    FIVE_YEARS: '5 Years',\n  },\n  LABELS: {\n    STOREFRONT_READY_TO_DEPLOY:\n      'Your store front is ready to be deployed. Your store will be located at:',\n    ACCESS_STOREFRONT: 'You can now access your store front at:',\n    BUY_ON: 'Buy on',\n    MY_PROFILE: 'My Profile',\n    CREATE_STOREFRONT: 'Create Storefront',\n    SETUP_PRIMARY_DOMAIN: 'Setup Primary Domain',\n    CHOOSE_A_PRIMARY_DOMAIN:\n      'Choose a primary domain and link it to your profile. This chosen domain will be your profile link.',\n    CREATE_YOUR_STOREFRONT:\n      'Create your store front using your .eth name with Predomain Stores. Learn more about your store front at:',\n    THIS_DOMAINS_IS_AVAILABLE_IN_MARKETPLACE:\n      'This domain is available on the following marketplaces',\n    PURCHASE_DOMAINS: 'Purchase Domains',\n    OWNED_BY: 'Owned By',\n    SETUP_STOREFRONT: 'Setup Storefront',\n    MANAGE_FEATURED_ITEMS: 'Manage Featured Items',\n    VISIT_STOREFRONT: 'Visit Storefront',\n    OPTIONS: 'Options',\n    FEATURED_ITEMS: 'Featured Items',\n    SORT_BY_CATEGORY: 'Sort By Category',\n    SELECT_DOMAIN: 'Select Domain',\n    SELECT_DOMAINS: 'Select Domains',\n    RENEW_DOMAINS: 'Renew Domains',\n    TRANSFER_DOMAINS: 'Transfer Domains',\n    BUYER: 'Buyer',\n    PRICE: 'Price',\n    SALE: 'Sale',\n    ACTIVITY: 'Activity',\n    TOP_CATEGORIES: 'Top Categories',\n    TOTAL_ASSETS: 'Total Assets',\n    MONTHLY_SALES: 'Monthly Sales',\n    DAILY_VOLUME: 'Daily Volume',\n    MONTHLY_VOLUME: 'Monthly Volume',\n    DAILY_SALES: 'Daily Sales',\n    TOP_SALE: 'Top Sale',\n    TOP_SALES: 'Top Sales',\n    TOP_BUYER: 'Top Buyer',\n    RECENT_SALES: 'Recent Sales',\n    SALES_ACTIVITY: 'Sales Activity',\n    ENTER_NAMES_TO_SEARCH: 'Enter names to search',\n    NOT_AVAILABLE: 'Not Available',\n    VOLUME: 'Volume',\n    FLOOR: 'Floor',\n    FILTER: 'Filter',\n    RENEWAL_DURATION: 'Renewal Duration',\n    TRANSACTION: 'Transaction',\n    USER_PROFILE: 'User Profile',\n    FEATURE_DISABLED: 'This feature is currently disabled.',\n    COMPLETE: 'Complete',\n    ESTIMATED_COST: 'Estimated Cost',\n    ADDRESS: 'Address',\n    TRANSFER: 'Transfer',\n    PLEASE_WAIT: 'Please wait',\n    SELECT_A_DOMAIN: 'Select a Domain',\n    RENEW: 'Renew',\n    MANAGE_DOMAINS: 'Manage Domains',\n    SEARCH_FOR: 'Search For',\n    MANAGE: 'Manage',\n    COLLECT: 'Collect',\n    LANDING_TEXT:\n      'Open-source, decentralised, Web3 domains search, registration & marketplace.',\n    PROFILE: 'Profile',\n    GO_TO_PROFILE: 'Go to Profile',\n    SEARCH: 'Search',\n    CONTAIN_ALPHABET: 'Contain Alphabet',\n    CONTAIN_NUMBERS: 'Contain Numbers',\n    CONTAIN_EMOJI: 'Contain Emoji',\n    MIN_LENGTH: 'Min. Length',\n    MAX_LENGTH: 'Max. Length',\n    CONTAINING_KEYWORDS: 'Containing Keywords',\n    FILTERS: 'Filters',\n    DOMAINS: 'Domains',\n    DOMAIN: 'Domain',\n    DOMAIN_HISTORY: 'Domain History',\n    EXPIRATION_DATE: 'Expiration Date',\n    REGISTRATION_DATE: 'Registration Date',\n    CREATION_DATE: 'Creation Date',\n    DETAILS: 'Details',\n    YOUR_DOMAINS: 'Your Domains',\n    PROCESSING: 'Processing',\n    LAYOUT: 'Layout',\n    ENTER_SUFFIX: 'Enter suffix',\n    ENTER_PREFIX: 'Enter prefix',\n    CLICK: 'Click',\n    CONNECT_TO_START: ' to get started or ',\n    TIP: 'Tip',\n    ACTION: 'Action',\n    ACTIONS: 'Actions',\n    ADVANCED_SEARCH_TIP:\n      'use new line or commas to seperate your domain entries.',\n    ADVANCED_SEARCH: 'Advanced Search',\n    ADVANCED_MODE: 'Advanced Mode',\n    REGISTER_DOMAINS_TO: 'Register Domains To',\n    NO_DOMAINS_SELECTED: 'No domains selected.',\n    FIND_AND_REGISTER: 'Register domains e.g. domain1, domain2...',\n    SELECTED_DOMAINS: 'Selected Domains',\n    REGISTER: 'Register',\n    BOOKMARKS: 'Bookmarks',\n    SEARCH_RESULTS: 'Search Results',\n    PROCEED_TO_REGISTRATION: 'Proceed To Registration',\n    REGISTER_DOMAINS: 'Register Domains',\n    REGISTRANT_ADDRESS: 'Registrant Address',\n    SET_RESOLVER: 'Set Resolver',\n    TOTAL_COST: 'Total Cost',\n    GAS_PRICE: 'Gas Price',\n    NO_ADDRESS_DETECTED: 'No address detected.',\n    DURATION: 'Duration',\n    NOTICE_SELECT_AN_RPC:\n      'Notice: select an RPC that will be used in the application to replace the default RPC provider.',\n    ENABLE_LIGHT_MODE: 'Enable light layout style.',\n    CLICK_NEXT_TO_PROCEED: 'Click <b>Next</b> to proceed.',\n  },\n  REGISTRATION: {\n    REGISTRATION_CANCELLED_TITLE: 'Registration Cancelled',\n    REGISTRATION_CANCELLED_DESCRIPTION: 'Your registration has been cancelled.',\n    CANCEL_REGISTRATION_TITLE: 'Cancel Registration',\n    CANCEL_REGISTRATION_DESCRIPTION:\n      'Are you sure you want to cancel this registration? This action cannot be undone.',\n    BEFORE_COMMIT: 'Step 1: request registration.',\n    COMMIT_SENT: 'Processing request...',\n    COMMIT_COMPLETE: 'Step 1: request registration received...',\n    AWAIT: 'Finalising request...',\n    BEFORE_REGISTRATION: 'Complete registration.',\n    REGISTRATION_SENT: 'Completing registration...',\n    REGISTRATION_COMPLETE: 'Registration complete!',\n    REGISTRATION_COMPLETE_TITLE: 'Registration Complete',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED:\n      'Your domains have now been registered.',\n    BASKET_EMPTY: 'Your basket is empty',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER: 'Please select new domains to register.',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: 'Transaction cancelled. Please try again.',\n  },\n  SPINNER: {\n    SETUP_COMPLETE: 'Setup Complete',\n    LEDGER_NO_DEVICE_SELECTED:\n      'An error has occured while connecting to your wallet. Please try again.',\n    NO_DATA_TO_DISPLAY: 'No items to display.',\n    PERFORMING_SEARCH: 'Performing search...',\n    LOADING_DATA: 'Loading Data...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET:\n      'Please follow the instructions in your wallet to proceed.',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: 'Enter Duration',\n    ENTER_QR_LINK: 'Enter custom QR Code URL',\n    ENTER_PRICE: 'Enter price',\n    ENTER_CUSTOM_ADDRESS: 'Enter custom address',\n    ENTER_RECEIVER_ADDRESS: 'Enter Receiver Address',\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: 'Invalid Duration',\n    INVALID_QR_LINK: 'Invalid URL, please try again.',\n    INVALID_PRICE: 'Invalid price, please try again.',\n    NO_ADDRESS_DETECTED: 'No address detected, please try again.',\n    INVALID_ADDRESS: 'Invalid address, please try again.',\n  },\n  STEP: {\n    STEP_1: 'Step 1',\n    STEP_2: 'Step 2',\n    STEP_3: 'Step 3',\n    STEP_4: 'Step 4',\n    STEP_5: 'Step 5',\n  },\n  RENEW: {\n    RENEWAL_COST: 'Renewal Cost',\n    ESTIMATED_RENEWAL_COST:\n      'Below is the estimated renewal cost for this transaction.',\n    RENEWAL_COMPLETE: 'Renewal Complete',\n    DOMAINS_READY_FOR_RENEWAL:\n      ' Your domains are now ready renewal. To complete your renewal press proceed.',\n  },\n  TRANSFER: {\n    TRANSFER_TO: 'Transfer to',\n    TRANSFER_COMPLETE: 'Transfer Complete!',\n    SETUP_INSTRUCTION:\n      'To enabled ENS domains management, your account must be configured to approve domain transfers.',\n    CONTRACT_APPROVAL_NOTE:\n      'Contract approval allows the contract to perform transferring of domains on your behalf.',\n    DOMAINS_READY_FOR_TRANSFER:\n      \"Your domains are now ready for transfer. Enter the reciever's address and press proceed.\",\n  },\n};\n","export default {\n  BUTTON: {\n    APPLY: \"Anwenden\",\n    NONE: 'None',\n    SAVE_CHANGES: \"Änderungen speichern\",\n    PROCEED: \"Fortfahren\",\n    DISMISS: \"Verwerfen\",\n    CONNECT: \"Verbinden\",\n    CONNECT_WALLET: \"Wallet verbinden\",\n    DISCONNECT: \"Verbindung trennen\",\n    LOGOUT: \"Abmelden\",\n    CLOSE: \"Schließen\",\n    SETTINGS: \"Einstellungen\",\n    LAUNCH_APP: \"App starten\",\n    CONNECT_TO_PROCEED: \"Wallet verbinden\",\n    VIEW_DETAILS: \"Details anzeigen\",\n    REFRESH: \"Aktualisieren\",\n    START_REGISTRATION: \"Registrierung starten\",\n    CANCEL: \"Abbrechen\",\n    PRESS_ENTER: \"Drücke Enter\",\n    LEARN_MORE: \"Mehr erfahren\",\n    CLOSE_WINDOW: \"Fenster schließen\",\n    SHOW_AVAILABLE_ONLY: \"Nur verfügbare anzeigen\",\n    SHOW_AVAILABLE: \"Nur verfügbare anzeigen\",\n    PROCEED_SEARCH: \"Suche fortsetzen\",\n    DOWNLOAD: 'Download',\n    SHOW_ALL: \"Alle anzeigen\",\n    DESELECT_ALL: \"Alle abwählen\",\n    SHOW_SELCTED: \"Ausgewählte anzeigen\",\n    LINK: 'Link',\n    CUSTOM_LINK: \"Eigener Link\",\n    SET_QR_LINK_ALL: \"QR-Link alle setzen\",\n    SET_QR_LINK: \"QR-Link alle setzen\",\n    DISABLE_ALL: \"Alle deaktivieren\",\n    DISABLE_QR_CODE: \"QR-Code deaktivieren\",\n    ENABLE_QR_CODE: \"QR-Code deaktivieren\",\n    SET_QR_COLOR: \"QR-Farbe festlegen\",\n    SET_COLOR: \"QR-Farbe festlegen\",\n    SET_ALL_COLORS: \"QR-Farbe festlegen\",\n    SET_PRICE: \"Preis festlegen\",\n    SET_PRICE_ALL: \"Preis alle festlegen\",\n    RESET: 'Reset',\n    CHECK_PROFILE: \"Profil prüfen\",\n    GO_TO_DASHBOARD: \"Zum Dashboard gehen\",\n    GO_TO_HOME: \"Gehe zu Home\",\n    VIEW_PROFILE: \"Profil anzeigen\",\n    CHECK_DOMAINS: \"Domänen überprüfen\",\n    TRANSACTION_DETAILS: \"Transaktionsdetails\",\n    BUY_NOW: \"Jetzt kaufen\",\n    CLEAR_HISTORY: \"Verlauf löschen\",\n    DEFAULT: \"Standard\",\n    CUSTOM: \"Benutzerdefiniert\",\n    FRACTIONALISE: \"Zersplittern\",\n    MORE_INFO: \"Weitere Informationen\",\n    LESS_INFO: \"Weniger Infos\",\n    APPROVE: \"Genehmigen\",\n    NEXT: \"Nächste\",\n    PENDING: \"Ausstehend\",\n    REMOVE: \"Entfernen\",\n    REMOVE_ALL_ITEMS: \"Alle Waren entfernen\",\n    ADD_ALL_TO_CART: \"Alle zum Warenkorb hinzufügen\",\n    BOOKMARK_ALL: \"Alle Tabs als Lesezeichen\",\n    DOWNLOAD_LIST: \"Übersicht\",\n    SHARE_LIST: \"Liste teilen\",\n    MORE: \"Mehr\",\n    CHANGE: \"Verändern\"\n  },\n  HEADER: {\n    ABOUT: \"Über\",\n    FAQ: \"FAQ\",\n    BACK_TO_HOME: \"Zurück zur Startseite\",\n    HOME: \"Zurück\",\n    CATEGORIES: \"Kategorien\",\n    HELP_SUPPORT: \"Hilfe & Support\",\n    HELP: \"Hilfe\",\n    CANCEL_REGISTRATION: \"Registrierung abbrechen\",\n    PROFILE: \"Profil\",\n    SETTINGS: \"Einstellungen\",\n    DOCS: \"Texte\",\n    DOCUMENTATIONS: \"Dokumentationen\",\n    CART: \"Warenkorb\",\n    BOOKMARKS: \"Lesezeichen\",\n    PAYMENTS_HISTORY: \"Zahlungsverlauf\",\n    LIGHT_MODE: \"Heller Modus\",\n    CUSTOM_RPC: \"Eigener RPC\",\n    SETUP_REQUIRED: \"Einrichtung erforderlich\",\n    MANAGE_DOMAINS: \"Verwaltung von Domains\",\n    APPROVE: \"Genehmigen\",\n    FEATURE_DISABLED: \"Funktion gesperrt\"\n  },\n  IPFS: {\n    INITIALISING: \"Starte p2p\",\n    FINDING_PEERS: \"Suche Partner\",\n    FAILED: \"Fehler\",\n    READY: \"Bereit\",\n    PUBLISHING: \"Veröffentlichen\"\n  },\n  EVENTS: {\n    TRANSFER: \"Überweisung\",\n    REGISTRATION: \"Anmeldung\",\n    RENEWAL: \"Erneuern\",\n    SALE: \"Verkauf\",\n    MINT: \"Minze\",\n    BURN: \"Verbrennen\"\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE: \"Netzwerk wird nicht unterstützt. Bitte Netzwerk wechseln.\",\n    IPNS_PUBLISHING_COMPLETED: \"Veröffentlichung abgeschlossen!\",\n    PENDING_TRANSACTION_CERATED: \"Eine neue Transaktion wurde erstellt. Bitte überprüfen Sie Ihre Wallet.\"\n  },\n  RENEWAL_DURATIONS: {\n    ONE_WEEK: \"1 Woche\",\n    ONE_MONTH: \"1 Monat\",\n    THREE_MONTHS: \"3 Monate\",\n    SIX_MONTHS: \"6 Monate\",\n    ONE_YEAR: \"1 Jahr\",\n    TWO_YEARS: \"2 Jahre\",\n    THREE_YEARS: \"3 Jahre\",\n    FOUR_YEARS: \"4 Jahre\",\n    FIVE_YEARS: \"5 Jahre\"\n  },\n  LABELS: {\n    STOREFRONT_READY_TO_DEPLOY: \"Ihre Shop-Front ist bereit zum Aussetzen. Ihr Shop wird sich hier befinden:\",\n    ACCESS_STOREFRONT: \"Sie können nun auf Ihre Shop-Front zugreifen:\",\n    BUY_ON: \"Kaufen auf\",\n    MY_PROFILE: \"Mein Profil\",\n    CREATE_STOREFRONT: \"Schaufenster erstellen\",\n    SETUP_PRIMARY_DOMAIN: \"Primäre Domain einrichten\",\n    CHOOSE_A_PRIMARY_DOMAIN: \"Wählen Sie eine primäre Domain aus und verknüpfen Sie sie mit Ihrem Profil. Diese gewählte Domain wird Ihr Profillink sein.\",\n    CREATE_YOUR_STOREFRONT: \"Erstellen Sie Ihr Shop-Frontend mit Ihrem .eth Namen mit Predomain Stores. Erfahren Sie mehr über Ihr Shop-Front:\",\n    THIS_DOMAINS_IS_AVAILABLE_IN_MARKETPLACE: \"Diese Domain ist auf den folgenden Marktplätzen verfügbar\",\n    PURCHASE_DOMAINS: \"Domains kaufen\",\n    OWNED_BY: \"Im Besitz von\",\n    SETUP_STOREFRONT: 'Setup Storefront',\n    MANAGE_FEATURED_ITEMS: \"Empfohlene Elemente verwalten\",\n    VISIT_STOREFRONT: \"zur Shopansicht\",\n    OPTIONS: \"Optionen\",\n    FEATURED_ITEMS: \"Empfohlene Erweiterungen\",\n    SORT_BY_CATEGORY: \"Nach Kategorie sortieren\",\n    SELECT_DOMAIN: \"Domain auswählen\",\n    SELECT_DOMAINS: \"Domänen auswählen\",\n    RENEW_DOMAINS: \"Domains erneuern\",\n    TRANSFER_DOMAINS: \"Transfer-Domänen\",\n    BUYER: \"Käufer\",\n    PRICE: \"Preis\",\n    SALE: \"Verkauf\",\n    ACTIVITY: \"Aktivität\",\n    TOP_CATEGORIES: \"Top-Kategorien\",\n    TOTAL_ASSETS: \"Aktivitäten (Gesamt)\",\n    MONTHLY_SALES: \"Monatsumsatz\",\n    DAILY_VOLUME: \"Tägliches Volumen\",\n    MONTHLY_VOLUME: \"Monatliche Lautstärke\",\n    DAILY_SALES: \"Tagesumsatz\",\n    TOP_SALE: \"Top Verkauf\",\n    TOP_SALES: \"Top Verkäufe\",\n    TOP_BUYER: \"Top-Käufer\",\n    RECENT_SALES: \"Neueste Verkäufe\",\n    SALES_ACTIVITY: \"Verkaufsaktivität\",\n    ENTER_NAMES_TO_SEARCH: \"Namen zum Suchen eingeben\",\n    NOT_AVAILABLE: \"Nicht verfügbar\",\n    VOLUME: \"Lautstärke\",\n    FLOOR: \"Boden\",\n    FILTER: 'Filter',\n    RENEWAL_DURATION: \"Erneuerungsdauer\",\n    TRANSACTION: \"Überweisung\",\n    USER_PROFILE: \"Benutzerprofil\",\n    FEATURE_DISABLED: \"Diese Funktion ist derzeit deaktiviert.\",\n    COMPLETE: 'Complete',\n    ESTIMATED_COST: \"Geschätzte Kosten\",\n    ADDRESS: \"Adresse\",\n    TRANSFER: \"Überweisung\",\n    PLEASE_WAIT: \"Bitte warten\",\n    SELECT_A_DOMAIN: \"Domain auswählen\",\n    RENEW: 'Renew',\n    MANAGE_DOMAINS: \"Verwaltung von Domains\",\n    SEARCH_FOR: \"Suche nach\",\n    MANAGE: \"Verwalten\",\n    COLLECT: \"Einsammeln\",\n    LANDING_TEXT: \"Open-Source, dezentralisiert, Web3 Domains Suche, Registrierung & Marktplatz.\",\n    PROFILE: \"Profil\",\n    GO_TO_PROFILE: \"Gehen Sie zum Profil\",\n    SEARCH: \"Suchen\",\n    CONTAIN_ALPHABET: \"Enthält Alphabet\",\n    CONTAIN_NUMBERS: \"Enthält Zahlen\",\n    CONTAIN_EMOJI: \"Enthält Emoji\",\n    MIN_LENGTH: \"Min. Länge\",\n    MAX_LENGTH: \"Max. Länge\",\n    CONTAINING_KEYWORDS: \"Enthält Stichwörter\",\n    FILTERS: \"Filtern\",\n    DOMAINS: 'Domains',\n    DOMAIN: \"Bedeutungsfeld\",\n    DOMAIN_HISTORY: \"Domänengeschichte\",\n    EXPIRATION_DATE: \"Verfallsdatum\",\n    REGISTRATION_DATE: \"Anmeldung\",\n    CREATION_DATE: \"Erstellungsdatum\",\n    DETAILS: 'Details',\n    YOUR_DOMAINS: \"Ihre Domains\",\n    PROCESSING: \"Verarbeitung\",\n    LAYOUT: 'Layout',\n    ENTER_SUFFIX: \"Suffix eingeben\",\n    ENTER_PREFIX: \"Präfix eingeben\",\n    CLICK: 'Click',\n    CONNECT_TO_START: \" loslegen oder \",\n    TIP: 'Tip',\n    ACTION: \"Aktion\",\n    ACTIONS: \"Aktionen\",\n    ADVANCED_SEARCH_TIP: \"verwenden Sie neue Zeile oder Kommas um Ihre Domain-Einträge zu trennen.\",\n    ADVANCED_SEARCH: \"Erweiterte Suche\",\n    ADVANCED_MODE: \"Erweiterter Modus\",\n    REGISTER_DOMAINS_TO: \"Domains registrieren zu\",\n    NO_DOMAINS_SELECTED: \"Keine Domains ausgewählt.\",\n    FIND_AND_REGISTER: \"Registrieren Sie Domains z.B. domain1, domain2...\",\n    SELECTED_DOMAINS: \"Ausgewählte Domains\",\n    REGISTER: \"Registrieren\",\n    BOOKMARKS: \"Lesezeichen\",\n    SEARCH_RESULTS: \"Suchergebnisse\",\n    PROCEED_TO_REGISTRATION: \"Zur Registrierung fortfahren\",\n    REGISTER_DOMAINS: \"Domains registrieren zu\",\n    REGISTRANT_ADDRESS: \"Adresse des Interessenten\",\n    SET_RESOLVER: \"Auflöser setzen\",\n    TOTAL_COST: \"Gesamtkosten\",\n    GAS_PRICE: \"Gaspreis\",\n    NO_ADDRESS_DETECTED: \"Keine Adresse erkannt.\",\n    DURATION: \"Dauer\",\n    NOTICE_SELECT_AN_RPC: \"Hinweis: Wählen Sie einen RPC, der in der Anwendung verwendet wird, um den Standard-RPC-Anbieter zu ersetzen.\",\n    ENABLE_LIGHT_MODE: \"Licht-Layout-Stil aktivieren.\",\n    CLICK_NEXT_TO_PROCEED: \"Klicke <b>weiter</b> um fortzufahren.\"\n  },\n  REGISTRATION: {\n    REGISTRATION_CANCELLED_TITLE: \"Registrierung abgebrochen\",\n    REGISTRATION_CANCELLED_DESCRIPTION: \"Ihre Anmeldung wurde abgebrochen.\",\n    CANCEL_REGISTRATION_TITLE: \"Registrierung abbrechen\",\n    CANCEL_REGISTRATION_DESCRIPTION: \"Sind Sie sicher, dass Sie diese Registrierung abbrechen möchten? Diese Aktion kann nicht rückgängig gemacht werden.\",\n    BEFORE_COMMIT: \"Schritt 1: Registrierung anfordern.\",\n    COMMIT_SENT: \"Anfrage wird verarbeitet...\",\n    COMMIT_COMPLETE: \"Schritt 1: Registrierung anfordern...\",\n    AWAIT: \"Anfrage wird verarbeitet...\",\n    BEFORE_REGISTRATION: \"Vollständige Registrierung.\",\n    REGISTRATION_SENT: \"Registrierung wird abgeschlossen...\",\n    REGISTRATION_COMPLETE: \"Anmeldung!\",\n    REGISTRATION_COMPLETE_TITLE: \"Anmeldung\",\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: \"Ihre Domains wurden jetzt registriert.\",\n    BASKET_EMPTY: \"Ihr Warenkorb ist leer\",\n    PLEASE_SELECT_DOMAINS_TO_REGISTER: \"Bitte wählen Sie neue Domains zum Registrieren aus.\"\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: \"Transaktion abgebrochen. Bitte versuchen Sie es erneut.\"\n  },\n  SPINNER: {\n    SETUP_COMPLETE: \"Setup erfolgreich\",\n    LEDGER_NO_DEVICE_SELECTED: \"Beim Verbinden mit Ihrer Wallet ist ein Fehler aufgetreten. Bitte versuchen Sie es erneut.\",\n    NO_DATA_TO_DISPLAY: \"Keine Elemente zum Anzeigen.\",\n    PERFORMING_SEARCH: \"Suche wird durchgeführt...\",\n    LOADING_DATA: \"Lade Daten...\",\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET: \"Bitte folgen Sie den Anweisungen in Ihrer Brieftasche um fortzufahren.\"\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: \"Dauer eingeben\",\n    ENTER_QR_LINK: \"Eigene QR-Code URL eingeben\",\n    ENTER_PRICE: \"Preis eingeben\",\n    ENTER_CUSTOM_ADDRESS: \"Eigene Adresse eingeben\",\n    ENTER_RECEIVER_ADDRESS: \"Empfängeradresse eingeben\"\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: \"Ungültige Dauer\",\n    INVALID_QR_LINK: \"Ungültige URL, bitte versuchen Sie es erneut.\",\n    INVALID_PRICE: \"Ungültiger Preis, bitte versuchen Sie es erneut.\",\n    NO_ADDRESS_DETECTED: \"Keine Adresse erkannt, bitte versuchen Sie es erneut.\",\n    INVALID_ADDRESS: \"Ungültige Adresse, bitte versuchen Sie es erneut.\"\n  },\n  STEP: {\n    STEP_1: \"Schritt 1\",\n    STEP_2: \"Schritt 2\",\n    STEP_3: \"Schritt 3\",\n    STEP_4: \"Schritt 4\",\n    STEP_5: \"Schritt 5\"\n  },\n  RENEW: {\n    RENEWAL_COST: \"Erneuerungskosten\",\n    ESTIMATED_RENEWAL_COST: \"Unten sind die geschätzten Erneuerungskosten für diese Transaktion.\",\n    RENEWAL_COMPLETE: \"Erneuerung abgeschlossen\",\n    DOMAINS_READY_FOR_RENEWAL: \" Ihre Domains sind nun fertig Erneuerung. Um Ihre Erneuerung abzuschließen, fahren Sie fort.\"\n  },\n  TRANSFER: {\n    TRANSFER_TO: \"Weiter in\",\n    TRANSFER_COMPLETE: \"Übertragung abgeschlossen!\",\n    SETUP_INSTRUCTION: \"Um die ENS-Domains-Verwaltung zu aktivieren, muss Ihr Konto so konfiguriert sein, dass es die Übertragung von Domains genehmigt.\",\n    CONTRACT_APPROVAL_NOTE: \"Die Vertragsgenehmigung ermöglicht es dem Vertrag, die Übertragung von Domains in Ihrem Namen durchzuführen.\",\n    DOMAINS_READY_FOR_TRANSFER: \"Deine Domains sind jetzt zur Übertragung bereit. Gib die Empfängeradresse ein und drücke auf Fortfahren.\"\n  }\n};","export default {\n  BUTTON: {\n    APPLY: \"应用\\n\",\n    NONE: \"无\",\n    SAVE_CHANGES: \"保存更改\",\n    PROCEED: \"继续\",\n    DISMISS: \"关闭\",\n    CONNECT: \"连接\",\n    CONNECT_WALLET: \"连接钱包\",\n    DISCONNECT: \"断开连接\",\n    LOGOUT: \"注销\",\n    CLOSE: \"关闭\",\n    SETTINGS: \"设置\",\n    LAUNCH_APP: \"启动应用程序\",\n    CONNECT_TO_PROCEED: \"连接钱包\",\n    VIEW_DETAILS: \"查看详情\",\n    REFRESH: \"刷新\",\n    START_REGISTRATION: \"开始注册\",\n    CANCEL: \"取消\",\n    PRESS_ENTER: \"按回车键\",\n    LEARN_MORE: \"了解更多\",\n    CLOSE_WINDOW: \"关闭窗口\",\n    SHOW_AVAILABLE_ONLY: \"仅显示可用的\",\n    SHOW_AVAILABLE: \"仅显示可用的\",\n    PROCEED_SEARCH: \"正在搜索\",\n    DOWNLOAD: \"下载\",\n    SHOW_ALL: \"显示全部\",\n    DESELECT_ALL: \"取消全选\",\n    SHOW_SELCTED: \"显示选中的\",\n    LINK: \"链接\",\n    CUSTOM_LINK: \"自定义链接\",\n    SET_QR_LINK_ALL: \"设置所有 QR 链接\",\n    SET_QR_LINK: 'Set QR Link',\n    DISABLE_ALL: \"禁用所有\",\n    DISABLE_QR_CODE: \"禁用二维码\",\n    ENABLE_QR_CODE: \"启用二维码\",\n    SET_QR_COLOR: \"设置 QR 颜色\",\n    SET_COLOR: \"设置颜色\",\n    SET_ALL_COLORS: \"设置 QR 颜色\",\n    SET_PRICE: \"设置价格\",\n    SET_PRICE_ALL: \"设置价格所有\",\n    RESET: 'Reset',\n    CHECK_PROFILE: \"检查个人资料\",\n    GO_TO_DASHBOARD: \"转到仪表板\",\n    GO_TO_HOME: \"返回首页\",\n    VIEW_PROFILE: \"查看个人资料\",\n    CHECK_DOMAINS: \"检查域\",\n    TRANSACTION_DETAILS: \"交易详情\",\n    BUY_NOW: \"立即购买\",\n    CLEAR_HISTORY: \"清除历史记录\",\n    DEFAULT: \"默认\",\n    CUSTOM: \"自定\",\n    FRACTIONALISE: \"分解\",\n    MORE_INFO: \"更多信息\",\n    LESS_INFO: \"较少资讯\",\n    APPROVE: \"批准\",\n    NEXT: \"下一页\",\n    PENDING: \"待付款\",\n    REMOVE: \"移除\",\n    REMOVE_ALL_ITEMS: \"移除所有项目\",\n    ADD_ALL_TO_CART: \"将全部添加到购物车\",\n    BOOKMARK_ALL: \"全部书签\",\n    DOWNLOAD_LIST: \"下载列表\",\n    SHARE_LIST: \"分享列表\",\n    MORE: \"更多\",\n    CHANGE: \"找零\"\n  },\n  HEADER: {\n    ABOUT: \"关于\",\n    FAQ: \"常见问题\",\n    BACK_TO_HOME: \"返回首页\",\n    HOME: \"主页\",\n    CATEGORIES: \"物品类别\",\n    HELP_SUPPORT: \"帮助与支持\",\n    HELP: \"求助\",\n    CANCEL_REGISTRATION: \"取消注册\",\n    PROFILE: \"个人信息\",\n    SETTINGS: \"设置\",\n    DOCS: \"文档\",\n    DOCUMENTATIONS: \"文件\",\n    CART: \"购物车\",\n    BOOKMARKS: \"书签\",\n    PAYMENTS_HISTORY: \"付款历史\",\n    LIGHT_MODE: \"日间模式\",\n    CUSTOM_RPC: \"自定义 RPC\",\n    SETUP_REQUIRED: \"需要设置\",\n    MANAGE_DOMAINS: \"管理域\",\n    APPROVE: \"批准\",\n    FEATURE_DISABLED: \"禁用功能\"\n  },\n  IPFS: {\n    INITIALISING: \"正在启动 p2p\",\n    FINDING_PEERS: \"查找节点\",\n    FAILED: \"失败\",\n    READY: \"准备好\",\n    PUBLISHING: \"发布\"\n  },\n  EVENTS: {\n    TRANSFER: \"转移\",\n    REGISTRATION: \"登记\",\n    RENEWAL: \"续费\",\n    SALE: \"销售\",\n    MINT: \"分钟数\",\n    BURN: \"刻录\"\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE: \"不支持网络。请更改您的网络。\",\n    IPNS_PUBLISHING_COMPLETED: \"发布已完成！\",\n    PENDING_TRANSACTION_CERATED: \"新交易已创建。请检查您的钱包。\"\n  },\n  RENEWAL_DURATIONS: {\n    ONE_WEEK: \"1星期\",\n    ONE_MONTH: \"1个月\",\n    THREE_MONTHS: \"3个月\",\n    SIX_MONTHS: \"6个月\",\n    ONE_YEAR: \"1 年\",\n    TWO_YEARS: \"2 年\",\n    THREE_YEARS: \"3 年\",\n    FOUR_YEARS: \"4 年\",\n    FIVE_YEARS: \"5 年\"\n  },\n  LABELS: {\n    STOREFRONT_READY_TO_DEPLOY: \"您的商店前面已准备好部署。您的商店将位于：\",\n    ACCESS_STOREFRONT: \"您现在可以访问您的店面：\",\n    BUY_ON: \"购买于\",\n    MY_PROFILE: \"查看我的资料\",\n    CREATE_STOREFRONT: \"创建店面\",\n    SETUP_PRIMARY_DOMAIN: \"设置主域\",\n    CHOOSE_A_PRIMARY_DOMAIN: \"选择一个主域并将其链接到您的个人资料。选定的域将是您的个人资料链接。\",\n    CREATE_YOUR_STOREFRONT: \"使用Predomain商店使用您的.eth名称创建您的前台商店。了解更多关于您商店前端的信息：\",\n    THIS_DOMAINS_IS_AVAILABLE_IN_MARKETPLACE: \"此域在以下市场上可用\",\n    PURCHASE_DOMAINS: \"购买域\",\n    OWNED_BY: \"拥有者\",\n    SETUP_STOREFRONT: 'Setup Storefront',\n    MANAGE_FEATURED_ITEMS: \"管理精选项目\",\n    VISIT_STOREFRONT: \"访问店面\",\n    OPTIONS: \"设置\",\n    FEATURED_ITEMS: \"特色项目\",\n    SORT_BY_CATEGORY: \"按类别排序\",\n    SELECT_DOMAIN: \"选择域名\",\n    SELECT_DOMAINS: \"选择域名\",\n    RENEW_DOMAINS: \"更新域\",\n    TRANSFER_DOMAINS: \"传输域\",\n    BUYER: \"购买方\",\n    PRICE: \"价格\",\n    SALE: \"销售\",\n    ACTIVITY: \"活动\",\n    TOP_CATEGORIES: \"顶级交易类别\",\n    TOTAL_ASSETS: \"总资产：\",\n    MONTHLY_SALES: \"每月销售\",\n    DAILY_VOLUME: \"每日音量\",\n    MONTHLY_VOLUME: \"每月音量\",\n    DAILY_SALES: \"每日特惠\",\n    TOP_SALE: \"最高销售\",\n    TOP_SALES: \"最高销售\",\n    TOP_BUYER: \"顶级买家\",\n    RECENT_SALES: \"最近销售\",\n    SALES_ACTIVITY: \"销售活动\",\n    ENTER_NAMES_TO_SEARCH: \"输入要搜索的名称\",\n    NOT_AVAILABLE: \"不可用\",\n    VOLUME: \"音量\",\n    FLOOR: \"地板\",\n    FILTER: \"筛选\",\n    RENEWAL_DURATION: \"更新持续时间\",\n    TRANSACTION: \"交易\",\n    USER_PROFILE: \"用户基本资料\",\n    FEATURE_DISABLED: \"此功能在当前版本中已被禁用。\",\n    COMPLETE: \"完成\",\n    ESTIMATED_COST: \"成本预估\",\n    ADDRESS: \"地址\",\n    TRANSFER: \"转移\",\n    PLEASE_WAIT: \"请稍等\",\n    SELECT_A_DOMAIN: \"选择域\",\n    RENEW: \"续费\",\n    MANAGE_DOMAINS: \"管理域\",\n    SEARCH_FOR: \"搜索文件\",\n    MANAGE: \"展开\",\n    COLLECT: \"收集\",\n    LANDING_TEXT: \"开放源码，分散，Web3域名搜索，注册和市场。\",\n    PROFILE: \"个人信息\",\n    GO_TO_PROFILE: \"转到文件\",\n    SEARCH: \"搜索\",\n    CONTAIN_ALPHABET: \"包含字母表\",\n    CONTAIN_NUMBERS: \"包含数字\",\n    CONTAIN_EMOJI: \"包含表情\",\n    MIN_LENGTH: \"最小长度\",\n    MAX_LENGTH: \"最大长度\",\n    CONTAINING_KEYWORDS: \"包含关键字\",\n    FILTERS: \"筛选器\",\n    DOMAINS: \"域\",\n    DOMAIN: \"语义域\",\n    DOMAIN_HISTORY: \"域名历史\",\n    EXPIRATION_DATE: \"过期日期\",\n    REGISTRATION_DATE: \"登记\",\n    CREATION_DATE: \"创建日期\",\n    DETAILS: \"详细信息\",\n    YOUR_DOMAINS: \"您的域\",\n    PROCESSING: \"处理中\",\n    LAYOUT: \"布局\",\n    ENTER_SUFFIX: \"输入后缀\",\n    ENTER_PREFIX: \"输入前缀\",\n    CLICK: 'Click',\n    CONNECT_TO_START: \" 开始或 \",\n    TIP: 'Tip',\n    ACTION: \"运动\",\n    ACTIONS: \"操作\",\n    ADVANCED_SEARCH_TIP: \"使用新行或逗号分隔你的域名。\",\n    ADVANCED_SEARCH: \"高级搜索\",\n    ADVANCED_MODE: \"高级模式\",\n    REGISTER_DOMAINS_TO: \"注册域名到\",\n    NO_DOMAINS_SELECTED: \"未选择域名。\",\n    FIND_AND_REGISTER: \"注册域，例如 domain1, domain2...\",\n    SELECTED_DOMAINS: \"选定域\",\n    REGISTER: \"注册\",\n    BOOKMARKS: \"书签\",\n    SEARCH_RESULTS: \"搜索结果\",\n    PROCEED_TO_REGISTRATION: \"继续注册\",\n    REGISTER_DOMAINS: \"注册域名到\",\n    REGISTRANT_ADDRESS: \"注册地址\",\n    SET_RESOLVER: \"设置解析器\",\n    TOTAL_COST: \"总成本\",\n    GAS_PRICE: \"煤气价格\",\n    NO_ADDRESS_DETECTED: \"未检测到地址。\",\n    DURATION: \"期限\",\n    NOTICE_SELECT_AN_RPC: \"注意：选择一个将在应用程序中使用的RPC来替换默认的 RPC 提供商。\",\n    ENABLE_LIGHT_MODE: \"启用光布局风格。\",\n    CLICK_NEXT_TO_PROCEED: \"点击 <b>下一个</b> 继续。\"\n  },\n  REGISTRATION: {\n    REGISTRATION_CANCELLED_TITLE: \"注册已取消\",\n    REGISTRATION_CANCELLED_DESCRIPTION: \"您的注册已被取消。\",\n    CANCEL_REGISTRATION_TITLE: \"取消注册\",\n    CANCEL_REGISTRATION_DESCRIPTION: \"您确定要取消此注册吗？此操作不能撤消。\",\n    BEFORE_COMMIT: \"第 1 步：请求注册。\",\n    COMMIT_SENT: \"正在处理请求...\",\n    COMMIT_COMPLETE: \"第 1 步：请求注册。\",\n    AWAIT: \"正在处理请求...\",\n    BEFORE_REGISTRATION: \"完成注册。\",\n    REGISTRATION_SENT: \"正在完成注册...\",\n    REGISTRATION_COMPLETE: \"登记!\",\n    REGISTRATION_COMPLETE_TITLE: \"登记\",\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: \"您的域名已被注册。\",\n    BASKET_EMPTY: \"您的篮子是空的\",\n    PLEASE_SELECT_DOMAINS_TO_REGISTER: \"请选择要注册的新域名。\"\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: \"交易已取消。请重试。\"\n  },\n  SPINNER: {\n    SETUP_COMPLETE: \"设置完成\",\n    LEDGER_NO_DEVICE_SELECTED: \"连接到您的钱包时发生错误。请再试一次。\",\n    NO_DATA_TO_DISPLAY: \"没有要显示的项目。\",\n    PERFORMING_SEARCH: \"正在执行搜索...\",\n    LOADING_DATA: \"正在加载数据...\",\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET: \"请按照你钱包中的说明继续操作。\"\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: \"输入持续时间\",\n    ENTER_QR_LINK: \"输入自定义 QR 代码 URL\",\n    ENTER_PRICE: \"输入价格\",\n    ENTER_CUSTOM_ADDRESS: \"输入自定义地址\",\n    ENTER_RECEIVER_ADDRESS: \"输入收件人地址\"\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: \"无效时长\",\n    INVALID_QR_LINK: \"无效的 URL，请重试。\",\n    INVALID_PRICE: \"价格无效，请重试。\",\n    NO_ADDRESS_DETECTED: \"未检测到地址，请重试。\",\n    INVALID_ADDRESS: \"无效的地址，请重试。\"\n  },\n  STEP: {\n    STEP_1: \"第一步\",\n    STEP_2: \"第 2 步\",\n    STEP_3: \"第 3 步\",\n    STEP_4: \"第 4 步\",\n    STEP_5: \"第 5 步\"\n  },\n  RENEW: {\n    RENEWAL_COST: \"更新成本\",\n    ESTIMATED_RENEWAL_COST: \"下面是这笔交易的估计更新费用。\",\n    RENEWAL_COMPLETE: \"更新完成\",\n    DOMAINS_READY_FOR_RENEWAL: \" 您的域名已准备就绪。要完成更新，请按下继续。\"\n  },\n  TRANSFER: {\n    TRANSFER_TO: \"转账到\",\n    TRANSFER_COMPLETE: \"传输完成！\",\n    SETUP_INSTRUCTION: \"要启用ENS域管理，您的帐户必须配置为批准域转让。\",\n    CONTRACT_APPROVAL_NOTE: \"合同批准允许合同代表您进行域转让。\",\n    DOMAINS_READY_FOR_TRANSFER: \"您的域名已准备好传输。请输入接收者的地址并按下继续。\"\n  }\n};","export default {\n  BUTTON: {\n    APPLY: \"適用\",\n    NONE: \"無し\",\n    SAVE_CHANGES: \"変更を保存\",\n    PROCEED: \"続行する\",\n    DISMISS: \"却下する\",\n    CONNECT: \"接続する\",\n    CONNECT_WALLET: \"ウォレットに接続\",\n    DISCONNECT: \"接続を解除\",\n    LOGOUT: \"ログアウト\",\n    CLOSE: \"閉じる\",\n    SETTINGS: \"設定\",\n    LAUNCH_APP: \"アプリを起動\",\n    CONNECT_TO_PROCEED: \"ウォレットに接続\",\n    VIEW_DETAILS: \"詳細を表示\",\n    REFRESH: \"更新\",\n    START_REGISTRATION: \"登録を開始\",\n    CANCEL: \"キャンセル\",\n    PRESS_ENTER: \"Enter キーを押します\",\n    LEARN_MORE: \"もっと詳しく\",\n    CLOSE_WINDOW: \"ウィンドウを閉じる\",\n    SHOW_AVAILABLE_ONLY: \"利用可能なもののみ表示\",\n    SHOW_AVAILABLE: \"利用可能なもののみ表示\",\n    PROCEED_SEARCH: \"検索を続行する\",\n    DOWNLOAD: \"ダウンロード\",\n    SHOW_ALL: \"すべて表示\",\n    DESELECT_ALL: \"すべての選択を解除\",\n    SHOW_SELCTED: \"選択したものを表示\",\n    LINK: \"リンク\",\n    CUSTOM_LINK: \"カスタムリンク\",\n    SET_QR_LINK_ALL: \"QRリンクをすべて設定\",\n    SET_QR_LINK: \"QRリンクをすべて設定\",\n    DISABLE_ALL: \"すべて無効\",\n    DISABLE_QR_CODE: \"QRコードを無効にする\",\n    ENABLE_QR_CODE: \"QRコードを有効にする\",\n    SET_QR_COLOR: \"QRコードの色を設定\",\n    SET_COLOR: \"QRコードの色を設定\",\n    SET_ALL_COLORS: \"QRコードの色を設定\",\n    SET_PRICE: \"価格の設定\",\n    SET_PRICE_ALL: \"価格を全て設定\",\n    RESET: 'Reset',\n    CHECK_PROFILE: \"プロファイルを確認\",\n    GO_TO_DASHBOARD: \"ダッシュボードに移動\",\n    GO_TO_HOME: \"ホームへ移動\",\n    VIEW_PROFILE: \"プロフィールを表示\",\n    CHECK_DOMAINS: \"ドメインを確認\",\n    TRANSACTION_DETAILS: \"トランザクションの詳細\",\n    BUY_NOW: \"今すぐ購入\",\n    CLEAR_HISTORY: \"履歴をクリア\",\n    DEFAULT: 'Default',\n    CUSTOM: \"カスタム\",\n    FRACTIONALISE: \"分数化\",\n    MORE_INFO: \"詳細\",\n    LESS_INFO: \"簡易情報\",\n    APPROVE: \"承認\",\n    NEXT: \"次へ\",\n    PENDING: \"保留中\",\n    REMOVE: \"削除\",\n    REMOVE_ALL_ITEMS: \"すべてのアイテムを削除\",\n    ADD_ALL_TO_CART: \"すべてをカートに入れる\",\n    BOOKMARK_ALL: \"すべてをブックマーク\",\n    DOWNLOAD_LIST: \"ダウンロードリスト\",\n    SHARE_LIST: \"リストを共有\",\n    MORE: \"その他\",\n    CHANGE: \"変更\"\n  },\n  HEADER: {\n    ABOUT: \"について\",\n    FAQ: \"よくある質問\",\n    BACK_TO_HOME: \"ホームに戻る\",\n    HOME: \"家\",\n    CATEGORIES: \"カテゴリ\",\n    HELP_SUPPORT: \"ヘルプ & サポート\",\n    HELP: \"ヘルプ\",\n    CANCEL_REGISTRATION: \"登録をキャンセル\",\n    PROFILE: \"プロフィール\",\n    SETTINGS: \"設定\",\n    DOCS: \"ドキュメント\",\n    DOCUMENTATIONS: \"文書\",\n    CART: \"カート\",\n    BOOKMARKS: \"ブックマーク\",\n    PAYMENTS_HISTORY: \"支払履歴\",\n    LIGHT_MODE: \"ライトモード\",\n    CUSTOM_RPC: \"カスタム RPC\",\n    SETUP_REQUIRED: \"セットアップが必要です\",\n    MANAGE_DOMAINS: \"ページドメイン\",\n    APPROVE: \"承認\",\n    FEATURE_DISABLED: \"機能の無効化\"\n  },\n  IPFS: {\n    INITIALISING: \"p2pを開始\",\n    FINDING_PEERS: \"ピアを検索中\",\n    FAILED: \"失敗しました\",\n    READY: \"準備完了\",\n    PUBLISHING: \"公開\"\n  },\n  EVENTS: {\n    TRANSFER: \"送金\",\n    REGISTRATION: \"登録\",\n    RENEWAL: \"更新\",\n    SALE: \"販売\",\n    MINT: \"造幣局\",\n    BURN: \"書き込み中\"\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE: \"ネットワークはサポートされていません。ネットワークを変更してください。\",\n    IPNS_PUBLISHING_COMPLETED: \"公開完了！\",\n    PENDING_TRANSACTION_CERATED: \"新しい取引が作成されました。ウォレットを確認してください。\"\n  },\n  RENEWAL_DURATIONS: {\n    ONE_WEEK: \"1週間\",\n    ONE_MONTH: \"1ヶ月\",\n    THREE_MONTHS: \"3カ月\",\n    SIX_MONTHS: \"6カ月\",\n    ONE_YEAR: \"1年\",\n    TWO_YEARS: \"2 年\",\n    THREE_YEARS: \"3 年\",\n    FOUR_YEARS: \"4 年\",\n    FIVE_YEARS: \"5 年\"\n  },\n  LABELS: {\n    STOREFRONT_READY_TO_DEPLOY: \"店舗が配備される準備が整いました。店舗は以下の場所にあります：\",\n    ACCESS_STOREFRONT: \"店舗のフロントにアクセスできるようになりました：\",\n    BUY_ON: \"購入先：\",\n    MY_PROFILE: \"マイプロフィール\",\n    CREATE_STOREFRONT: \"店舗を作成\",\n    SETUP_PRIMARY_DOMAIN: \"プライマリドメインの設定\",\n    CHOOSE_A_PRIMARY_DOMAIN: \"プライマリ・ドメインを選択し、プロフィールにリンクします。選択したドメインがプロフィールのリンクになります。\",\n    CREATE_YOUR_STOREFRONT: \"プレドメインストアで.ethの名前を使用して店舗の前面を作成します。店舗の前面について詳しくはこちら:\",\n    THIS_DOMAINS_IS_AVAILABLE_IN_MARKETPLACE: \"このドメインは以下のマーケットプレイスでご利用いただけます\",\n    PURCHASE_DOMAINS: \"ドメインの購入\",\n    OWNED_BY: \"所有人\",\n    SETUP_STOREFRONT: 'Setup Storefront',\n    MANAGE_FEATURED_ITEMS: \"注目のアイテムを管理\",\n    VISIT_STOREFRONT: \"ストアを訪問\",\n    OPTIONS: \"オプション\",\n    FEATURED_ITEMS: \"おすすめ\",\n    SORT_BY_CATEGORY: \"カテゴリでソート\",\n    SELECT_DOMAIN: \"ドメインを選択\",\n    SELECT_DOMAINS: \"ドメインを選択\",\n    RENEW_DOMAINS: \"ドメインを更新\",\n    TRANSFER_DOMAINS: \"ドメインを転送する\",\n    BUYER: \"バイヤー\",\n    PRICE: \"販売価格:\",\n    SALE: \"販売\",\n    ACTIVITY: \"アクティビティ\",\n    TOP_CATEGORIES: \"トップカテゴリ\",\n    TOTAL_ASSETS: \"資産の合計\",\n    MONTHLY_SALES: \"月商\",\n    DAILY_VOLUME: \"毎日の音量\",\n    MONTHLY_VOLUME: \"月刊ボリューム\",\n    DAILY_SALES: \"毎日の販売\",\n    TOP_SALE: \"人気セール\",\n    TOP_SALES: \"人気セール\",\n    TOP_BUYER: \"トップバイヤー：\",\n    RECENT_SALES: \"アプリ履歴のスタイル\",\n    SALES_ACTIVITY: \"販売活動\",\n    ENTER_NAMES_TO_SEARCH: \"名前を入力して検索\",\n    NOT_AVAILABLE: \"利用できません（見つかりません、利用不可）\",\n    VOLUME: \"音量\",\n    FLOOR: \"床\",\n    FILTER: \"フィルター\",\n    RENEWAL_DURATION: \"更新期間\",\n    TRANSACTION: \"トランザクション\",\n    USER_PROFILE: \"ユーザープロフィール\",\n    FEATURE_DISABLED: \"この機能は現在無効化されています\",\n    COMPLETE: \"完了\",\n    ESTIMATED_COST: \"料金の目安：\",\n    ADDRESS: \"会社アクセス\",\n    TRANSFER: \"送金\",\n    PLEASE_WAIT: \"お待ちください\",\n    SELECT_A_DOMAIN: \"ドメインの選択\",\n    RENEW: \"更新\",\n    MANAGE_DOMAINS: \"ページドメイン\",\n    SEARCH_FOR: \"検索文字\",\n    MANAGE: \"管理\",\n    COLLECT: \"これを全部集めて \",\n    LANDING_TEXT: \"オープンソース、分散化、Web3ドメイン検索、登録、マーケットプレイス。\",\n    PROFILE: \"プロフィール\",\n    GO_TO_PROFILE: \"プロファイルに行く\",\n    SEARCH: \"検索\",\n    CONTAIN_ALPHABET: \"アルファベットが含まれています\",\n    CONTAIN_NUMBERS: \"数字が含まれています\",\n    CONTAIN_EMOJI: \"絵文字を含む\",\n    MIN_LENGTH: \"最小長さ\",\n    MAX_LENGTH: \"最大の長さ\",\n    CONTAINING_KEYWORDS: \"キーワードを含む\",\n    FILTERS: \"フィルタ\",\n    DOMAINS: \"ドメイン\",\n    DOMAIN: \"ドメイン\",\n    DOMAIN_HISTORY: \"ドメイン履歴\",\n    EXPIRATION_DATE: \"有効期限日\",\n    REGISTRATION_DATE: \"登録\",\n    CREATION_DATE: \"作成日\",\n    DETAILS: \"詳細\",\n    YOUR_DOMAINS: \"あなたのドメイン\",\n    PROCESSING: \"処理中\",\n    LAYOUT: \"レイアウト\",\n    ENTER_SUFFIX: \"サフィックスを入力\",\n    ENTER_PREFIX: \"サフィックスを入力\",\n    CLICK: 'Click',\n    CONNECT_TO_START: \" 始めるには \",\n    TIP: 'Tip',\n    ACTION: 'Action',\n    ACTIONS: \"操作\",\n    ADVANCED_SEARCH_TIP: \"新しい行またはカンマを使用して、ドメインエントリを分離します。\",\n    ADVANCED_SEARCH: \"詳細検索\",\n    ADVANCED_MODE: \"詳細モード\",\n    REGISTER_DOMAINS_TO: \"ドメインを登録先\",\n    NO_DOMAINS_SELECTED: \"ドメインが選択されていません。\",\n    FIND_AND_REGISTER: \"ドメインを検索します。例：domain1, domain2...\",\n    SELECTED_DOMAINS: \"選択したドメイン\",\n    REGISTER: \"登録\",\n    BOOKMARKS: \"ブックマーク\",\n    SEARCH_RESULTS: \"検索結果\",\n    PROCEED_TO_REGISTRATION: \"登録に進む\",\n    REGISTER_DOMAINS: \"ドメインを登録先\",\n    REGISTRANT_ADDRESS: \"登録者アドレス\",\n    SET_RESOLVER: \"リゾルバーを設定\",\n    TOTAL_COST: \"合計コスト\",\n    GAS_PRICE: \"ガス価格\",\n    NO_ADDRESS_DETECTED: \"アドレスが見つかりません。\",\n    DURATION: \"期間\",\n    NOTICE_SELECT_AN_RPC: \"注意: デフォルトのRPCプロバイダを置き換えるためにアプリケーションで使用されるRPCを選択します。\",\n    ENABLE_LIGHT_MODE: \"ライトのレイアウトスタイルを有効にする\",\n    CLICK_NEXT_TO_PROCEED: \"<b>次へ</b> をクリックして進みます。\"\n  },\n  REGISTRATION: {\n    REGISTRATION_CANCELLED_TITLE: \"登録をキャンセルしました\",\n    REGISTRATION_CANCELLED_DESCRIPTION: \"あなたの登録がキャンセルされました。\",\n    CANCEL_REGISTRATION_TITLE: \"登録をキャンセル\",\n    CANCEL_REGISTRATION_DESCRIPTION: \"この認証を削除しても宜しいですか？ この操作を元に戻すことはできません。\",\n    BEFORE_COMMIT: \"ステップ 1: リクエスト登録\",\n    COMMIT_SENT: \"リクエストを処理しています...\",\n    COMMIT_COMPLETE: \"ステップ 1: リクエスト登録\",\n    AWAIT: \"リクエストを処理しています...\",\n    BEFORE_REGISTRATION: \"登録の完了\",\n    REGISTRATION_SENT: \"登録を完了中...\",\n    REGISTRATION_COMPLETE: \"登録!\",\n    REGISTRATION_COMPLETE_TITLE: \"登録\",\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: \"ドメインが登録されました。\",\n    BASKET_EMPTY: \"カートが空です\",\n    PLEASE_SELECT_DOMAINS_TO_REGISTER: \"登録する新しいドメインを選択してください。\"\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: \"取引がキャンセルされました。もう一度やり直してください。\"\n  },\n  SPINNER: {\n    SETUP_COMPLETE: \"設定完了\",\n    LEDGER_NO_DEVICE_SELECTED: \"クーポンを作成する時にエラーが発生しました。もう一度やり直してください。\",\n    NO_DATA_TO_DISPLAY: \"表示する項目がありません。\",\n    PERFORMING_SEARCH: \"検索を実行中...\",\n    LOADING_DATA: \"データを読み込み中...\",\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET: \"続行するにはウォレットの指示に従ってください。\"\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: \"期間を入力\",\n    ENTER_QR_LINK: \"カスタム QR コードのURLを入力してください\",\n    ENTER_PRICE: \"価格を入力\",\n    ENTER_CUSTOM_ADDRESS: \"カスタムアドレスを入力してください\",\n    ENTER_RECEIVER_ADDRESS: \"受信者アドレスを入力してください\"\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: \"無効な期間\",\n    INVALID_QR_LINK: \"無効な URL です。もう一度やり直してください。\",\n    INVALID_PRICE: \"無効な価格です。もう一度やり直してください。\",\n    NO_ADDRESS_DETECTED: \"アドレスが見つかりませんでした。もう一度やり直してください。\",\n    INVALID_ADDRESS: \"僅用於中文\"\n  },\n  STEP: {\n    STEP_1: \"ステップ 1\",\n    STEP_2: \"ステップ 2\",\n    STEP_3: \"ステップ 3\",\n    STEP_4: \"ステップ 4\",\n    STEP_5: \"ステップ 5\"\n  },\n  RENEW: {\n    RENEWAL_COST: \"更新コスト\",\n    ESTIMATED_RENEWAL_COST: \"以下は、このトランザクションの推定更新コストです。\",\n    RENEWAL_COMPLETE: \"更新完了\",\n    DOMAINS_READY_FOR_RENEWAL: \" ドメインの更新が完了しました。更新を完了するには、format@@0を押します。\"\n  },\n  TRANSFER: {\n    TRANSFER_TO: \"送金\",\n    TRANSFER_COMPLETE: \"転送完了！\",\n    SETUP_INSTRUCTION: \"ENSドメイン管理を有効にするには、ドメイン転送を承認するためにアカウントを設定する必要があります。\",\n    CONTRACT_APPROVAL_NOTE: \"契約承認により、契約はお客様に代わってドメインの譲渡を行うことができます。\",\n    DOMAINS_READY_FOR_TRANSFER: \"ドメインを転送する準備ができました。レシピのアドレスを入力し、続行を押してください。\"\n  }\n};","export default {\n  BUTTON: {\n    APPLY: \"Aplicar\",\n    NONE: \"Ninguna\",\n    SAVE_CHANGES: \"Guardar Cambios\",\n    PROCEED: \"Continuar\",\n    DISMISS: \"Descartar\",\n    CONNECT: \"Conectar\",\n    CONNECT_WALLET: \"Conectar cartera\",\n    DISCONNECT: \"Desconectar\",\n    LOGOUT: \"Cerrar sesión\",\n    CLOSE: \"Cerrar\",\n    SETTINGS: \"Ajustes\",\n    LAUNCH_APP: \"Iniciar App\",\n    CONNECT_TO_PROCEED: \"Conectar cartera\",\n    VIEW_DETAILS: \"Ver detalles\",\n    REFRESH: \"Refrescar\",\n    START_REGISTRATION: \"Iniciar registro\",\n    CANCEL: \"Cancelar\",\n    PRESS_ENTER: \"Presione Entrar\",\n    LEARN_MORE: \"Más información\",\n    CLOSE_WINDOW: \"Cerrar ventana\",\n    SHOW_AVAILABLE_ONLY: \"Mostrar sólo disponible\",\n    SHOW_AVAILABLE: \"Mostrar sólo disponible\",\n    PROCEED_SEARCH: \"Proceder búsqueda\",\n    DOWNLOAD: \"Descargar\",\n    SHOW_ALL: \"Mostrar todo\",\n    DESELECT_ALL: \"Deseleccionar todo\",\n    SHOW_SELCTED: \"Mostrar seleccionados\",\n    LINK: \"Enlace\",\n    CUSTOM_LINK: \"Enlace personalizado\",\n    SET_QR_LINK_ALL: \"Establecer todos los enlaces QR\",\n    SET_QR_LINK: \"Establecer todos los enlaces QR\",\n    DISABLE_ALL: \"Desactivar todo\",\n    DISABLE_QR_CODE: \"Desactivar código QR\",\n    ENABLE_QR_CODE: \"Habilitar código QR\",\n    SET_QR_COLOR: \"Establecer color QR\",\n    SET_COLOR: \"Definir color\",\n    SET_ALL_COLORS: \"Establecer todos los colores\",\n    SET_PRICE: \"Fijar Precio\",\n    SET_PRICE_ALL: \"Fijar precio todo\",\n    RESET: 'Reset',\n    CHECK_PROFILE: \"Comprobar perfil\",\n    GO_TO_DASHBOARD: \"Ir al Tablero\",\n    GO_TO_HOME: \"Ir a Inicio\",\n    VIEW_PROFILE: \"Ver perfil\",\n    CHECK_DOMAINS: \"Comprobar dominios\",\n    TRANSACTION_DETAILS: \"Detalles de la transacción\",\n    BUY_NOW: \"Comprar ahora\",\n    CLEAR_HISTORY: \"Borrar el Historial\",\n    DEFAULT: \"Predeterminado\",\n    CUSTOM: \"Personal\",\n    FRACTIONALISE: \"Fraccionalizar\",\n    MORE_INFO: \"Más información\",\n    LESS_INFO: \"Menos Info\",\n    APPROVE: \"Aprobar\",\n    NEXT: \"Próximo\",\n    PENDING: \"Pendiente\",\n    REMOVE: \"Eliminar\",\n    REMOVE_ALL_ITEMS: \"Eliminar todos los artículos\",\n    ADD_ALL_TO_CART: \"Añadir Todo al Carrito\",\n    BOOKMARK_ALL: \"Marcar todas las pestañas\",\n    DOWNLOAD_LIST: \"Lista de descargas\",\n    SHARE_LIST: \"Compartir lista\",\n    MORE: \"Más\",\n    CHANGE: \"Cambiar\"\n  },\n  HEADER: {\n    ABOUT: \"Acerca de\",\n    FAQ: 'FAQs',\n    BACK_TO_HOME: \"Volver a Inicio\",\n    HOME: \"Casa\",\n    CATEGORIES: \"Categorías\",\n    HELP_SUPPORT: \"Ayuda y soporte\",\n    HELP: \"Ayuda\",\n    CANCEL_REGISTRATION: \"Cancelar Registro\",\n    PROFILE: \"Perfil\",\n    SETTINGS: \"Ajustes\",\n    DOCS: \"Documentos\",\n    DOCUMENTATIONS: \"Documentaciones\",\n    CART: \"Carrito\",\n    BOOKMARKS: \"Marcadores\",\n    PAYMENTS_HISTORY: \"Historial de pago\",\n    LIGHT_MODE: \"Modo Claro\",\n    CUSTOM_RPC: \"RPC Personalizado\",\n    SETUP_REQUIRED: \"Se requiere configuración\",\n    MANAGE_DOMAINS: \"Administrar dominios\",\n    APPROVE: \"Aprobar\",\n    FEATURE_DISABLED: \"Función deshabilitada\"\n  },\n  IPFS: {\n    INITIALISING: \"Iniciando p2p\",\n    FINDING_PEERS: \"Encontrando pares\",\n    FAILED: \"Fallo\",\n    READY: \"Listo\",\n    PUBLISHING: \"Publicación\"\n  },\n  EVENTS: {\n    TRANSFER: \"Transferir\",\n    REGISTRATION: \"Registro\",\n    RENEWAL: \"Renovación\",\n    SALE: \"Venta\",\n    MINT: \"Moneda\",\n    BURN: \"Quemar\"\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE: \"La red no es compatible. Por favor, cambie su red.\",\n    IPNS_PUBLISHING_COMPLETED: \"¡Publicación completada!\",\n    PENDING_TRANSACTION_CERATED: \"Se ha creado una nueva transacción. Por favor, comprueba tu cartera.\"\n  },\n  RENEWAL_DURATIONS: {\n    ONE_WEEK: \"1 semana\",\n    ONE_MONTH: \"1 mes\",\n    THREE_MONTHS: \"3 meses\",\n    SIX_MONTHS: \"6 meses\",\n    ONE_YEAR: \"1 año\",\n    TWO_YEARS: \"2 años\",\n    THREE_YEARS: \"3 años\",\n    FOUR_YEARS: \"4 años\",\n    FIVE_YEARS: \"5 años\"\n  },\n  LABELS: {\n    STOREFRONT_READY_TO_DEPLOY: \"El frente de su tienda está listo para ser desplegado. Su tienda se ubicará en:\",\n    ACCESS_STOREFRONT: \"Ahora puede acceder a su tienda en:\",\n    BUY_ON: \"Comprar en\",\n    MY_PROFILE: \"Mi perfil\",\n    CREATE_STOREFRONT: \"Crear escaparate\",\n    SETUP_PRIMARY_DOMAIN: \"Configurar Dominio Principal\",\n    CHOOSE_A_PRIMARY_DOMAIN: \"Elija un dominio principal y enláguelo a su perfil. Este dominio elegido será su enlace de perfil.\",\n    CREATE_YOUR_STOREFRONT: \"Cree su frente de tienda usando su nombre .eth con Predomain Stores. Aprenda más sobre su frente de tienda en:\",\n    THIS_DOMAINS_IS_AVAILABLE_IN_MARKETPLACE: \"Este dominio está disponible en los siguientes mercados\",\n    PURCHASE_DOMAINS: \"Dominios de compra\",\n    OWNED_BY: \"Propiedad de\",\n    SETUP_STOREFRONT: 'Setup Storefront',\n    MANAGE_FEATURED_ITEMS: \"Gestionar artículos destacados\",\n    VISIT_STOREFRONT: \"Visitar tienda\",\n    OPTIONS: \"Opciones\",\n    FEATURED_ITEMS: \"Artículos destacados\",\n    SORT_BY_CATEGORY: \"Ordenar por categoría\",\n    SELECT_DOMAIN: \"Seleccionar dominio\",\n    SELECT_DOMAINS: \"Seleccionar Dominios\",\n    RENEW_DOMAINS: \"Renovar dominios\",\n    TRANSFER_DOMAINS: \"Transferir Dominios\",\n    BUYER: \"Comprador\",\n    PRICE: \"Precio\",\n    SALE: \"Venta\",\n    ACTIVITY: \"Actividad\",\n    TOP_CATEGORIES: \"Categorías principales\",\n    TOTAL_ASSETS: \"Total de activos\",\n    MONTHLY_SALES: \"Ventas mensuales\",\n    DAILY_VOLUME: \"Volumen gas diario\",\n    MONTHLY_VOLUME: \"Volumen gas mensual\",\n    DAILY_SALES: \"Ventas diarias\",\n    TOP_SALE: \"Mejores ventas\",\n    TOP_SALES: \"Mejores ventas\",\n    TOP_BUYER: \"Comprador Top\",\n    RECENT_SALES: \"Ventas recientes\",\n    SALES_ACTIVITY: \"Actividad de ventas\",\n    ENTER_NAMES_TO_SEARCH: \"Introducir nombres para buscar\",\n    NOT_AVAILABLE: \"No Disponible\",\n    VOLUME: \"Volumen\",\n    FLOOR: \"Piso\",\n    FILTER: \"Filtro\",\n    RENEWAL_DURATION: \"Duración de la renovación\",\n    TRANSACTION: \"Transacción\",\n    USER_PROFILE: \"Perfil de usuario\",\n    FEATURE_DISABLED: \"Esta opción está actualmente deshabilitada\",\n    COMPLETE: \"Completada\",\n    ESTIMATED_COST: \"Costo Estimado\",\n    ADDRESS: \"Dirección\",\n    TRANSFER: \"Transferir\",\n    PLEASE_WAIT: \"Por favor espera\",\n    SELECT_A_DOMAIN: \"Seleccione un dominio\",\n    RENEW: \"Renovar\",\n    MANAGE_DOMAINS: \"Administrar dominios\",\n    SEARCH_FOR: \"Buscar por\",\n    MANAGE: \"Gestionar\",\n    COLLECT: \"Coleccionar\",\n    LANDING_TEXT: \"Fuente abierta, descentralizada, Web3 dominios de búsqueda, registro y mercado.\",\n    PROFILE: \"Perfil\",\n    GO_TO_PROFILE: \"Ir al perfil\",\n    SEARCH: \"Buscar\",\n    CONTAIN_ALPHABET: \"Contiene el alfabeto\",\n    CONTAIN_NUMBERS: \"Contiene números\",\n    CONTAIN_EMOJI: \"Contiene Emoji\",\n    MIN_LENGTH: \"Longitud Mínima\",\n    MAX_LENGTH: \"Longitud Máxima\",\n    CONTAINING_KEYWORDS: \"Conteniendo palabras clave\",\n    FILTERS: \"Filtros\",\n    DOMAINS: \"Dominios\",\n    DOMAIN: \"Dominio\",\n    DOMAIN_HISTORY: \"Historial de dominios\",\n    EXPIRATION_DATE: \"Fecha de caducidad\",\n    REGISTRATION_DATE: \"Fecha de registro\",\n    CREATION_DATE: \"Fecha de creación\",\n    DETAILS: \"Detalles\",\n    YOUR_DOMAINS: \"Tus dominios\",\n    PROCESSING: \"Procesando\",\n    LAYOUT: \"Diseño\",\n    ENTER_SUFFIX: \"Introducir sufijo\",\n    ENTER_PREFIX: \"Introduzca prefijo\",\n    CLICK: 'Click',\n    CONNECT_TO_START: \" para empezar o \",\n    TIP: 'Tip',\n    ACTION: \"Acción\",\n    ACTIONS: \"Acciones\",\n    ADVANCED_SEARCH_TIP: \"utilice una nueva línea o comas para separar sus entradas de dominio.\",\n    ADVANCED_SEARCH: \"Bsqueda avanzada.\",\n    ADVANCED_MODE: \"Modo avanzado\",\n    REGISTER_DOMAINS_TO: \"Registrar Dominios a\",\n    NO_DOMAINS_SELECTED: \"No hay dominios seleccionados.\",\n    FIND_AND_REGISTER: \"Buscar dominios por ejemplo dominio1, dominio2...\",\n    SELECTED_DOMAINS: \"Dominios seleccionados\",\n    REGISTER: \"Registrarse\",\n    BOOKMARKS: \"Marcadores\",\n    SEARCH_RESULTS: \"Resultados de búsqueda\",\n    PROCEED_TO_REGISTRATION: \"Continuar con el registro\",\n    REGISTER_DOMAINS: \"Registrar Dominios a\",\n    REGISTRANT_ADDRESS: \"Registrar dirección\",\n    SET_RESOLVER: \"Definir Resolver\",\n    TOTAL_COST: \"Coste total\",\n    GAS_PRICE: \"Precio gas\",\n    NO_ADDRESS_DETECTED: \"Ninguna dirección detectada.\",\n    DURATION: \"Duración\",\n    NOTICE_SELECT_AN_RPC: \"Aviso: seleccione un RPC que se utilizará en la aplicación para reemplazar al proveedor RPC predeterminado.\",\n    ENABLE_LIGHT_MODE: \"Activar estilo de diseño de luz.\",\n    CLICK_NEXT_TO_PROCEED: \"Haga clic en <b>Next</b> para continuar.\"\n  },\n  REGISTRATION: {\n    REGISTRATION_CANCELLED_TITLE: \"Registro cancelado\",\n    REGISTRATION_CANCELLED_DESCRIPTION: \"Tu registro ha sido cancelado.\",\n    CANCEL_REGISTRATION_TITLE: \"Cancelar Registro\",\n    CANCEL_REGISTRATION_DESCRIPTION: \"¿Estás seguro que deseas eliminar este configuración? ¡Esta acción no se puede deshacer!\",\n    BEFORE_COMMIT: \"Paso 1: solicitar registro.\",\n    COMMIT_SENT: \"Procesando solicitud...\",\n    COMMIT_COMPLETE: \"Paso 1: solicitar registro...\",\n    AWAIT: \"Procesando solicitud...\",\n    BEFORE_REGISTRATION: \"Finalización de registro\",\n    REGISTRATION_SENT: \"Completando registro...\",\n    REGISTRATION_COMPLETE: \"Fecha de registro!\",\n    REGISTRATION_COMPLETE_TITLE: \"Registro completado\",\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: \"Tus dominios han sido registrados.\",\n    BASKET_EMPTY: \"Tu cesta está vacía\",\n    PLEASE_SELECT_DOMAINS_TO_REGISTER: \"Por favor, seleccione nuevos dominios para registrarse.\"\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: \"Transacción cancelada. Por favor, inténtelo de nuevo.\"\n  },\n  SPINNER: {\n    SETUP_COMPLETE: \"Configuración exitosa\",\n    LEDGER_NO_DEVICE_SELECTED: \"Se produjo un error al crear el cupón. Por favor, inténtalo de nuevo.\",\n    NO_DATA_TO_DISPLAY: \"No hay elementos para mostrar.\",\n    PERFORMING_SEARCH: \"Realizando búsqueda...\",\n    LOADING_DATA: \"Cargando datos...\",\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET: \"Siga las instrucciones de su cartera para continuar.\"\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: \"Introducir duración\",\n    ENTER_QR_LINK: \"Introduzca la URL personalizada del código QR\",\n    ENTER_PRICE: \"Introducir precio\",\n    ENTER_CUSTOM_ADDRESS: \"Introduzca dirección personalizada\",\n    ENTER_RECEIVER_ADDRESS: \"Introduzca la dirección del receptor\"\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: \"Duración no válida\",\n    INVALID_QR_LINK: \"URL no válida, por favor inténtelo de nuevo.\",\n    INVALID_PRICE: \"Precio no válido, por favor inténtalo de nuevo.\",\n    NO_ADDRESS_DETECTED: \"No se ha detectado ninguna dirección, inténtelo de nuevo.\",\n    INVALID_ADDRESS: \"Código no válido. Inténtelo de nuevo.\"\n  },\n  STEP: {\n    STEP_1: \"Paso 1\",\n    STEP_2: \"Paso 2\",\n    STEP_3: \"Paso 3\",\n    STEP_4: \"Paso 4\",\n    STEP_5: \"Paso 5\"\n  },\n  RENEW: {\n    RENEWAL_COST: \"Coste de Renovación\",\n    ESTIMATED_RENEWAL_COST: \"A continuación se muestra el costo estimado de renovación de esta transacción.\",\n    RENEWAL_COMPLETE: \"Renovación Completa\",\n    DOMAINS_READY_FOR_RENEWAL: \" Tus dominios están listos para la renovación. Para completar la prensa, procede.\"\n  },\n  TRANSFER: {\n    TRANSFER_TO: \"Transferir\",\n    TRANSFER_COMPLETE: \"¡Transferencia completada!\",\n    SETUP_INSTRUCTION: \"Para activar la administración de dominios ENS, su cuenta debe estar configurada para aprobar transferencias de dominios.\",\n    CONTRACT_APPROVAL_NOTE: \"La aprobación del contrato permite que el contrato realice la transferencia de dominios en su nombre.\",\n    DOMAINS_READY_FOR_TRANSFER: \"Tus dominios están listos para ser transferidos. Introduce la dirección del destinatario y pulsa continuar.\"\n  }\n};","export default {\n  BUTTON: {\n    APPLY: \"Применить\",\n    NONE: \"Нет\",\n    SAVE_CHANGES: \"Сохранить изменения\",\n    PROCEED: \"Продолжить\",\n    DISMISS: \"Отклонить\",\n    CONNECT: \"Подключиться\",\n    CONNECT_WALLET: \"Подключить кошелек\",\n    DISCONNECT: \"Отключиться\",\n    LOGOUT: \"Выйти\",\n    CLOSE: \"Закрыть\",\n    SETTINGS: \"Настройки\",\n    LAUNCH_APP: \"Запустить приложение\",\n    CONNECT_TO_PROCEED: \"Подключить кошелек\",\n    VIEW_DETAILS: \"Детали\",\n    REFRESH: \"Обновить\",\n    START_REGISTRATION: \"Начать регистрацию\",\n    CANCEL: \"Отмена\",\n    PRESS_ENTER: \"Нажмите Enter\",\n    LEARN_MORE: \"Узнать больше\",\n    CLOSE_WINDOW: \"Закрыть окно\",\n    SHOW_AVAILABLE_ONLY: \"Показать только доступные\",\n    SHOW_AVAILABLE: \"Показать только доступные\",\n    PROCEED_SEARCH: \"Продолжить поиск\",\n    DOWNLOAD: \"Скачать\",\n    SHOW_ALL: \"Показать все\",\n    DESELECT_ALL: \"Отменить выбор\",\n    SHOW_SELCTED: \"Показать выбранные\",\n    LINK: \"Ссылка\",\n    CUSTOM_LINK: \"Пользовательская ссылка\",\n    SET_QR_LINK_ALL: \"Установить QR ссылку все\",\n    SET_QR_LINK: \"Установить QR ссылку все\",\n    DISABLE_ALL: \"Отключить все\",\n    DISABLE_QR_CODE: \"Отключить QR-код\",\n    ENABLE_QR_CODE: \"Отключить QR-код\",\n    SET_QR_COLOR: \"Установить цвет QR\",\n    SET_COLOR: \"Задать цвет\",\n    SET_ALL_COLORS: \"Установить цвет QR\",\n    SET_PRICE: \"Установить цену\",\n    SET_PRICE_ALL: \"Установить цену для всех\",\n    RESET: 'Reset',\n    CHECK_PROFILE: \"Проверить профиль\",\n    GO_TO_DASHBOARD: \"Перейти к панели управления\",\n    GO_TO_HOME: \"Перейти на главную\",\n    VIEW_PROFILE: \"Просмотр профиля\",\n    CHECK_DOMAINS: \"Проверить домены\",\n    TRANSACTION_DETAILS: \"Детали транзакции\",\n    BUY_NOW: \"Купить сейчас\",\n    CLEAR_HISTORY: \"Очистить историю\",\n    DEFAULT: \"По умолчанию\",\n    CUSTOM: \"Своё\",\n    FRACTIONALISE: \"Фракционализация\",\n    MORE_INFO: \"Подробнее\",\n    LESS_INFO: \"Скрыть\",\n    APPROVE: \"Утверждено\",\n    NEXT: \"Следующий\",\n    PENDING: \"В обработке\",\n    REMOVE: \"Удалить\",\n    REMOVE_ALL_ITEMS: \"Удалить все позиции\",\n    ADD_ALL_TO_CART: \"Добавить все в корзину\",\n    BOOKMARK_ALL: \"Отметить все\",\n    DOWNLOAD_LIST: \"Файлы для скачивания\",\n    SHARE_LIST: \"Поделиться списком\",\n    MORE: \"Еще\",\n    CHANGE: \"Редактировать\"\n  },\n  HEADER: {\n    ABOUT: \"О нас\",\n    FAQ: \"ЧАВО\",\n    BACK_TO_HOME: \"Назад на главную\",\n    HOME: \"Домой\",\n    CATEGORIES: \"Категории\",\n    HELP_SUPPORT: \"Помощь и поддержка\",\n    HELP: \"Помощь\",\n    CANCEL_REGISTRATION: \"Отменить регистрацию\",\n    PROFILE: \"Профиль\",\n    SETTINGS: \"Настройки\",\n    DOCS: \"Документ\",\n    DOCUMENTATIONS: \"Документация\",\n    CART: \"Корзина\",\n    BOOKMARKS: \"Закладки\",\n    PAYMENTS_HISTORY: \"История платежей\",\n    LIGHT_MODE: \"Светлый режим\",\n    CUSTOM_RPC: \"Custom ETH RPC\",\n    SETUP_REQUIRED: \"Требуется настройка\",\n    MANAGE_DOMAINS: \"Управление доменами\",\n    APPROVE: \"Утверждено\",\n    FEATURE_DISABLED: \"Функция отключена\"\n  },\n  IPFS: {\n    INITIALISING: \"Запуск p2p\",\n    FINDING_PEERS: \"Поиск пиров\",\n    FAILED: \"Неудачный\",\n    READY: \"Готово\",\n    PUBLISHING: \"Публикация\"\n  },\n  EVENTS: {\n    TRANSFER: \"Перевод\",\n    REGISTRATION: \"Регистрация\",\n    RENEWAL: \"Продлить\",\n    SALE: \"Продажа\",\n    MINT: \"Минт\",\n    BURN: \"Сжечь\"\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE: \"Сеть не поддерживается. Пожалуйста, измените сеть.\",\n    IPNS_PUBLISHING_COMPLETED: \"Публикация завершена!\",\n    PENDING_TRANSACTION_CERATED: \"Была создана новая транзакция. Пожалуйста, проверьте ваш кошелек.\"\n  },\n  RENEWAL_DURATIONS: {\n    ONE_WEEK: \"1 неделя\",\n    ONE_MONTH: \"Месяц\",\n    THREE_MONTHS: \"3 месяца\",\n    SIX_MONTHS: \"6 месяца\",\n    ONE_YEAR: \"1 год\",\n    TWO_YEARS: \"2 года\",\n    THREE_YEARS: \"3 года\",\n    FOUR_YEARS: \"4 года\",\n    FIVE_YEARS: \"5 года\"\n  },\n  LABELS: {\n    STOREFRONT_READY_TO_DEPLOY: \"Витрина магазина готова к развертыванию. Магазин будет находиться в:\",\n    ACCESS_STOREFRONT: \"Теперь вы можете получить доступ к магазину здесь:\",\n    BUY_ON: \"Купить на\",\n    MY_PROFILE: \"Мой профиль\",\n    CREATE_STOREFRONT: \"Создать витрину\",\n    SETUP_PRIMARY_DOMAIN: \"Настройка первичного домена\",\n    CHOOSE_A_PRIMARY_DOMAIN: \"Выберите основной домен и привяжите его к вашему профилю. Выбранный домен будет ссылкой на ваш профиль.\",\n    CREATE_YOUR_STOREFRONT: \"Создайте витрину магазина с помощью имени .eth в магазинах. Узнайте больше о витрине магазина:\",\n    THIS_DOMAINS_IS_AVAILABLE_IN_MARKETPLACE: \"Этот домен доступен на следующих площадках\",\n    PURCHASE_DOMAINS: \"Покупка доменов\",\n    OWNED_BY: \"Владелец\",\n    SETUP_STOREFRONT: 'Setup Storefront',\n    MANAGE_FEATURED_ITEMS: \"Управление рекомендуемыми товарами\",\n    VISIT_STOREFRONT: \"Посетить витрину\",\n    OPTIONS: \"Опции\",\n    FEATURED_ITEMS: \"Рекомендованные пункты\",\n    SORT_BY_CATEGORY: \"Сортировать по категориям\",\n    SELECT_DOMAIN: \"Выбрать домен\",\n    SELECT_DOMAINS: \"Выберите домены\",\n    RENEW_DOMAINS: \"Продлить домены\",\n    TRANSFER_DOMAINS: \"Передача доменов\",\n    BUYER: \"Покупатель\",\n    PRICE: \"Цена\",\n    SALE: \"Продажа\",\n    ACTIVITY: \"Нагрузка\",\n    TOP_CATEGORIES: \"Категории\",\n    TOTAL_ASSETS: \"Итоговые активы\",\n    MONTHLY_SALES: \"Проездной на месяц\",\n    DAILY_VOLUME: \"Дневной объем\",\n    MONTHLY_VOLUME: \"Ежемесячный объем\",\n    DAILY_SALES: \"Ежедневная распродажа\",\n    TOP_SALE: \"Топ продаж\",\n    TOP_SALES: \"Лидеры продаж\",\n    TOP_BUYER: \"Топ Покупатель\",\n    RECENT_SALES: \"Стиль недавних \",\n    SALES_ACTIVITY: \"Активность продаж\",\n    ENTER_NAMES_TO_SEARCH: \"Введите имена для поиска\",\n    NOT_AVAILABLE: \"Недоступно\",\n    VOLUME: \"Громкость\",\n    FLOOR: \"Пол\",\n    FILTER: \"Фильтр\",\n    RENEWAL_DURATION: \"Продолжительность обновления\",\n    TRANSACTION: \"Транзакция\",\n    USER_PROFILE: \"Профиль пользователя\",\n    FEATURE_DISABLED: \"Эта функциональность на данный момент недоступна\",\n    COMPLETE: \"Готово\",\n    ESTIMATED_COST: \"Предполагаемые затраты\",\n    ADDRESS: \"Адрес\",\n    TRANSFER: \"Перевод\",\n    PLEASE_WAIT: \"Пожалуйста, подождите\",\n    SELECT_A_DOMAIN: \"Выбранные домены\",\n    RENEW: \"Продлить\",\n    MANAGE_DOMAINS: \"Управление доменами\",\n    SEARCH_FOR: \"Поиск\",\n    MANAGE: \"Управлять\",\n    COLLECT: \"Собрать\",\n    LANDING_TEXT: \"Открытый исходный код, децентрализованный поиск доменов Web3, регистрация и рынок.\",\n    PROFILE: \"Профиль\",\n    GO_TO_PROFILE: \"Зайди в профиль\",\n    SEARCH: \"Искать\",\n    CONTAIN_ALPHABET: \"Содержит алфавит\",\n    CONTAIN_NUMBERS: \"Содержит числа\",\n    CONTAIN_EMOJI: \"Содержит смайлы\",\n    MIN_LENGTH: \"Мин. длина\",\n    MAX_LENGTH: \"Макс. длина\",\n    CONTAINING_KEYWORDS: \"Содержащие ключевые слова\",\n    FILTERS: \"Фильтры\",\n    DOMAINS: \"Домены\",\n    DOMAIN: \"Поле\",\n    DOMAIN_HISTORY: \"История доменов\",\n    EXPIRATION_DATE: \"Дата истечения\",\n    REGISTRATION_DATE: \"Регистрация\",\n    CREATION_DATE: \"Дата создания\",\n    DETAILS: \"Детали\",\n    YOUR_DOMAINS: \"Ваши домены\",\n    PROCESSING: \"Обработка\",\n    LAYOUT: \"Макет\",\n    ENTER_SUFFIX: \"Введите суффикс\",\n    ENTER_PREFIX: \"Укажите префикс\",\n    CLICK: \"Нажать\",\n    CONNECT_TO_START: \" начать или \",\n    TIP: 'Tip',\n    ACTION: \"Действие\",\n    ACTIONS: \"Действия\",\n    ADVANCED_SEARCH_TIP: \"используйте новую строку или запятую для разделения ваших доменных записей.\",\n    ADVANCED_SEARCH: \"Усовершенствованный поиск\",\n    ADVANCED_MODE: \"Расширенный режим\",\n    REGISTER_DOMAINS_TO: \"Регистрация доменов для\",\n    NO_DOMAINS_SELECTED: \"Домены не выбраны.\",\n    FIND_AND_REGISTER: \"Поиск доменов, например домена1, домена2...\",\n    SELECTED_DOMAINS: \"Выбранные домены\",\n    REGISTER: \"Регистрация\",\n    BOOKMARKS: \"Закладки\",\n    SEARCH_RESULTS: \"Результаты поиска\",\n    PROCEED_TO_REGISTRATION: \"Перейти к регистрации\",\n    REGISTER_DOMAINS: \"Регистрация доменов для\",\n    REGISTRANT_ADDRESS: \"Регистрационный адрес\",\n    SET_RESOLVER: \"Установить резолвер\",\n    TOTAL_COST: \"Общая стоимость\",\n    GAS_PRICE: \"Цена газа\",\n    NO_ADDRESS_DETECTED: \"Адрес не обнаружен.\",\n    DURATION: \"Продолжительность\",\n    NOTICE_SELECT_AN_RPC: \"Примечание: выберите RPC, который будет использоваться в приложении для замены поставщика RPC по умолчанию.\",\n    ENABLE_LIGHT_MODE: \"Включить светлый стиль.\",\n    CLICK_NEXT_TO_PROCEED: \"Нажмите <b>Далее</b> , чтобы продолжить.\"\n  },\n  REGISTRATION: {\n    REGISTRATION_CANCELLED_TITLE: \"Регистрация отменена\",\n    REGISTRATION_CANCELLED_DESCRIPTION: \"Ваша регистрация была отменена.\",\n    CANCEL_REGISTRATION_TITLE: \"Отменить регистрацию\",\n    CANCEL_REGISTRATION_DESCRIPTION: \"Вы уверены, что хотите удалить регистрацию этого проекта? Это действие будет невозможно отменить.\",\n    BEFORE_COMMIT: \"Шаг 1: запрос на регистрацию.\",\n    COMMIT_SENT: \"Обработка запроса...\",\n    COMMIT_COMPLETE: \"Шаг 1: запрос на регистрацию...\",\n    AWAIT: \"Обработка запроса...\",\n    BEFORE_REGISTRATION: \"Окончание регистрации\",\n    REGISTRATION_SENT: \"Завершение регистрации...\",\n    REGISTRATION_COMPLETE: \"Регистрация!\",\n    REGISTRATION_COMPLETE_TITLE: \"Регистрация завершена\",\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: \"Ваши домены зарегистрированы.\",\n    BASKET_EMPTY: \"Ваша корзина пуста\",\n    PLEASE_SELECT_DOMAINS_TO_REGISTER: \"Пожалуйста, выберите новые домены для регистрации.\"\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: \"Транзакция отменена. Пожалуйста, попробуйте еще раз.\"\n  },\n  SPINNER: {\n    SETUP_COMPLETE: \"Установка завершена\",\n    LEDGER_NO_DEVICE_SELECTED: \"Произошла ошибка при подключении к вашему кошельку. Пожалуйста, попробуйте еще раз.\",\n    NO_DATA_TO_DISPLAY: \"Нет элементов для отображения.\",\n    PERFORMING_SEARCH: \"Выполняется поиск...\",\n    LOADING_DATA: \"Загрузка данных...\",\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET: \"Чтобы продолжить, следуйте инструкциям в вашем кошельке.\"\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: \"Введите длительность\",\n    ENTER_QR_LINK: \"Введите свой QR-код URL\",\n    ENTER_PRICE: \"Введите цену\",\n    ENTER_CUSTOM_ADDRESS: \"Введите свой адрес\",\n    ENTER_RECEIVER_ADDRESS: \"Введите адрес получателя\"\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: \"Неверная длительность\",\n    INVALID_QR_LINK: \"Неправильный URL, попробуйте еще раз.\",\n    INVALID_PRICE: \"Неправильная цена, попробуйте еще раз.\",\n    NO_ADDRESS_DETECTED: \"Адрес не обнаружен, попробуйте еще раз.\",\n    INVALID_ADDRESS: \"僅用於中文\"\n  },\n  STEP: {\n    STEP_1: \"Шаг 1\",\n    STEP_2: \"Шаг 2\",\n    STEP_3: \"Шаг 3\",\n    STEP_4: \"Шаг 4\",\n    STEP_5: \"Шаг 5\"\n  },\n  RENEW: {\n    RENEWAL_COST: \"Стоимость обновления\",\n    ESTIMATED_RENEWAL_COST: \"Ниже приведены оценочные расходы на продление данной сделки.\",\n    RENEWAL_COMPLETE: \"Обновление завершено\",\n    DOMAINS_READY_FOR_RENEWAL: \" Ваши домены теперь готовы к обновлению. Чтобы завершить обновление, нажмите продолжить.\"\n  },\n  TRANSFER: {\n    TRANSFER_TO: \"Перевод\",\n    TRANSFER_COMPLETE: \"Перевод завершен\",\n    SETUP_INSTRUCTION: \"Чтобы включить управление доменами ENS, ваша учетная запись должна быть настроена на утверждение переноса домена.\",\n    CONTRACT_APPROVAL_NOTE: \"Одобрение договора позволяет выполнять передачу доменов от Вашего имени.\",\n    DOMAINS_READY_FOR_TRANSFER: \"Теперь ваши домены готовы для передачи. Введите адрес получателя и нажмите продолжить.\"\n  }\n};","export default {\n  BUTTON: {\n    APPLY: \"Appliquer\",\n    NONE: \"Aucun\",\n    SAVE_CHANGES: \"Enregistrer les modifications\",\n    PROCEED: \"Procéder\",\n    DISMISS: \"Refuser\",\n    CONNECT: \"Connecter\",\n    CONNECT_WALLET: \"Connecter le portefeuille\",\n    DISCONNECT: \"Déconnecter\",\n    LOGOUT: \"Déconnexion\",\n    CLOSE: \"Fermer\",\n    SETTINGS: \"Réglages\",\n    LAUNCH_APP: \"Lancer l'application\",\n    CONNECT_TO_PROCEED: \"Connecter le portefeuille\",\n    VIEW_DETAILS: \"Voir les détails\",\n    REFRESH: \"Rafraîchir\",\n    START_REGISTRATION: \"Commencer l'inscription\",\n    CANCEL: \"Abandonner\",\n    PRESS_ENTER: \"Appuyez sur Entrée\",\n    LEARN_MORE: \"En savoir plus\",\n    CLOSE_WINDOW: \"Fermer la fenêtre\",\n    SHOW_AVAILABLE_ONLY: \"Afficher uniquement les disponibilités\",\n    SHOW_AVAILABLE: \"Afficher uniquement les disponibilités\",\n    PROCEED_SEARCH: \"Poursuivre la recherche\",\n    DOWNLOAD: \"Télécharger\",\n    SHOW_ALL: \"Tout afficher\",\n    DESELECT_ALL: \"Désélectionner tout\",\n    SHOW_SELCTED: \"Afficher la sélection\",\n    LINK: \"Lier\",\n    CUSTOM_LINK: \"Lien personnalisé\",\n    SET_QR_LINK_ALL: \"Définir le lien QR\",\n    SET_QR_LINK: \"Définir le lien QR\",\n    DISABLE_ALL: \"Désactiver tout\",\n    DISABLE_QR_CODE: \"Désactiver le QR Code\",\n    ENABLE_QR_CODE: \"Désactiver le QR Code\",\n    SET_QR_COLOR: \"Définir la couleur du QR\",\n    SET_COLOR: \"Définir la couleur du QR\",\n    SET_ALL_COLORS: \"Définir la couleur du QR\",\n    SET_PRICE: \"Fixer le prix\",\n    SET_PRICE_ALL: \"Fixer le prix à tous\",\n    RESET: 'Reset',\n    CHECK_PROFILE: \"Vérifier le profil\",\n    GO_TO_DASHBOARD: \"Aller au tableau de bord\",\n    GO_TO_HOME: \"Aller à la page d'accueil\",\n    VIEW_PROFILE: \"Voir le profil\",\n    CHECK_DOMAINS: \"Vérifier les domaines\",\n    TRANSACTION_DETAILS: \"Détails de la transaction\",\n    BUY_NOW: \"Acheter maintenant\",\n    CLEAR_HISTORY: \"Effacer l'historique\",\n    DEFAULT: \"Par défaut\",\n    CUSTOM: \"Personnaliser\",\n    FRACTIONALISE: \"Fractionaliser\",\n    MORE_INFO: \"Plus d'informations\",\n    LESS_INFO: \"Moins d'info\",\n    APPROVE: \"Approuver\",\n    NEXT: \"Suivant\",\n    PENDING: \"En attente\",\n    REMOVE: \"Retirer\",\n    REMOVE_ALL_ITEMS: \"Supprimer tous les éléments\",\n    ADD_ALL_TO_CART: \"Tout ajouter au panier\",\n    BOOKMARK_ALL: \"Marquer tous les favoris\",\n    DOWNLOAD_LIST: \"Liste des téléchargements\",\n    SHARE_LIST: \"Partager la liste\",\n    MORE: \"Plus d’infos\",\n    CHANGE: \"Modifier\"\n  },\n  HEADER: {\n    ABOUT: \"À propos\",\n    FAQ: \"Foire aux questions\",\n    BACK_TO_HOME: \"Retour à la page d'accueil\",\n    HOME: \"Retour\",\n    CATEGORIES: \"Catégories\",\n    HELP_SUPPORT: \"Aide & Support\",\n    HELP: \"Aide\",\n    CANCEL_REGISTRATION: \"Annuler l'inscription\",\n    PROFILE: \"Profil\",\n    SETTINGS: \"Réglages\",\n    DOCS: \"Documents\",\n    DOCUMENTATIONS: 'Documentations',\n    CART: \"Panier\",\n    BOOKMARKS: \"Signets\",\n    PAYMENTS_HISTORY: \"Historique des paiements\",\n    LIGHT_MODE: \"Mode clair\",\n    CUSTOM_RPC: \"RPC personnalisé\",\n    SETUP_REQUIRED: \"Configuration requise\",\n    MANAGE_DOMAINS: \"Gestion Domaines\",\n    APPROVE: \"Approuver\",\n    FEATURE_DISABLED: \"Fonction désactivée\"\n  },\n  IPFS: {\n    INITIALISING: \"Démarrage p2p\",\n    FINDING_PEERS: \"Recherche de pairs\",\n    FAILED: \"Echoué\",\n    READY: \"Prêt\",\n    PUBLISHING: \"Publication en cours\"\n  },\n  EVENTS: {\n    TRANSFER: \"Transférer\",\n    REGISTRATION: \"Inscription\",\n    RENEWAL: \"Renouvellement\",\n    SALE: \"Vente\",\n    MINT: \"Médicaments\",\n    BURN: \"Brûlure\"\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE: \"Le réseau n'est pas pris en charge. Veuillez modifier votre réseau.\",\n    IPNS_PUBLISHING_COMPLETED: \"Publication terminée !\",\n    PENDING_TRANSACTION_CERATED: \"Une nouvelle transaction a été créée. Veuillez vérifier votre portefeuille.\"\n  },\n  RENEWAL_DURATIONS: {\n    ONE_WEEK: \"1 semaine\",\n    ONE_MONTH: \"1 mois\",\n    THREE_MONTHS: \"3 Mois\",\n    SIX_MONTHS: \"6 Mois\",\n    ONE_YEAR: \"1 an\",\n    TWO_YEARS: \"2 Ans\",\n    THREE_YEARS: \"3 Ans\",\n    FOUR_YEARS: \"4 Ans\",\n    FIVE_YEARS: \"5 Ans\"\n  },\n  LABELS: {\n    STOREFRONT_READY_TO_DEPLOY: \"La devanture de votre boutique est prête à être déployée. Votre boutique sera située à:\",\n    ACCESS_STOREFRONT: \"Vous pouvez maintenant accéder à la devanture de votre boutique sur :\",\n    BUY_ON: \"Acheter sur\",\n    MY_PROFILE: \"Mon profil\",\n    CREATE_STOREFRONT: \"Créer une vitrine\",\n    SETUP_PRIMARY_DOMAIN: \"Configurer le domaine principal\",\n    CHOOSE_A_PRIMARY_DOMAIN: \"Choisissez un domaine principal et liez le à votre profil. Ce domaine choisi sera votre lien de profil.\",\n    CREATE_YOUR_STOREFRONT: \"Créez votre vitrine de boutique en utilisant votre nom .eth avec Predomain Stores. Apprenez-en plus sur la vitrine de votre boutique sur :\",\n    THIS_DOMAINS_IS_AVAILABLE_IN_MARKETPLACE: \"Ce domaine est disponible sur les places de marché suivantes\",\n    PURCHASE_DOMAINS: \"Acheter des Domaines\",\n    OWNED_BY: \"Propriété de\",\n    SETUP_STOREFRONT: 'Setup Storefront',\n    MANAGE_FEATURED_ITEMS: \"Gérer les articles en vedette\",\n    VISIT_STOREFRONT: \"Visiter la vitrine\",\n    OPTIONS: 'Options',\n    FEATURED_ITEMS: \"Articles en vedette\",\n    SORT_BY_CATEGORY: \"Trier par catégorie\",\n    SELECT_DOMAIN: \"Sélectionnez le domaine\",\n    SELECT_DOMAINS: \"Sélectionner les domaines\",\n    RENEW_DOMAINS: \"Renouveler les domaines\",\n    TRANSFER_DOMAINS: \"Transférer des domaines\",\n    BUYER: \"Acheteur\",\n    PRICE: \"Hinta\",\n    SALE: \"Vente\",\n    ACTIVITY: \"Activité\",\n    TOP_CATEGORIES: \"Catégories Top\",\n    TOTAL_ASSETS: \"Total des biens\",\n    MONTHLY_SALES: \"Ventes mensuelles\",\n    DAILY_VOLUME: \"Volume quotidien\",\n    MONTHLY_VOLUME: \"Volume mensuel\",\n    DAILY_SALES: \"Journal Des Ventes\",\n    TOP_SALE: \"Meilleure vente\",\n    TOP_SALES: \"Meilleures ventes\",\n    TOP_BUYER: \"Meilleur Acheteur\",\n    RECENT_SALES: \"Ventes récentes\",\n    SALES_ACTIVITY: \"Activité des ventes\",\n    ENTER_NAMES_TO_SEARCH: \"Entrez les noms à rechercher\",\n    NOT_AVAILABLE: \"Non disponible\",\n    VOLUME: 'Volume',\n    FLOOR: \"Sol\",\n    FILTER: \"Filtre\",\n    RENEWAL_DURATION: \"Durée du Renouvellement\",\n    TRANSACTION: 'Transaction',\n    USER_PROFILE: \"Profil de l'utilisateur\",\n    FEATURE_DISABLED: \"Cette fonctionnalité est actuellement désactivée.\",\n    COMPLETE: \"Compléter\",\n    ESTIMATED_COST: \"Coût estimé\",\n    ADDRESS: \"Adresse\",\n    TRANSFER: \"Transférer\",\n    PLEASE_WAIT: \"Je vous laisse attendre :\",\n    SELECT_A_DOMAIN: \"Sélectionner un domaine\",\n    RENEW: 'Renew',\n    MANAGE_DOMAINS: \"Gestion Domaines\",\n    SEARCH_FOR: \"Rechercher\",\n    MANAGE: \"Gérer\",\n    COLLECT: \"Prendre\",\n    LANDING_TEXT: \"Open source, décentralisé, Web3 domaines de recherche, enregistrement & marketplace.\",\n    PROFILE: \"Profil\",\n    GO_TO_PROFILE: \"Aller au Profil\",\n    SEARCH: \"Chercher\",\n    CONTAIN_ALPHABET: \"Contient l'alphabet\",\n    CONTAIN_NUMBERS: \"Contient des nombres\",\n    CONTAIN_EMOJI: \"Contient des émoticônes\",\n    MIN_LENGTH: \"Longueur min.\",\n    MAX_LENGTH: \"Longueur Max.\",\n    CONTAINING_KEYWORDS: \"Contenant des mots-clés\",\n    FILTERS: \"Filtres\",\n    DOMAINS: \"Domaines\",\n    DOMAIN: \"Verkkotunnus\",\n    DOMAIN_HISTORY: \"Historique du domaine\",\n    EXPIRATION_DATE: \"Date d'expiration\",\n    REGISTRATION_DATE: \"Inscription\",\n    CREATION_DATE: \"Date de Création\",\n    DETAILS: \"Détail\",\n    YOUR_DOMAINS: \"Vos domaines\",\n    PROCESSING: \"En cours de traitement\",\n    LAYOUT: \"Disposition\",\n    ENTER_SUFFIX: \"Saisir le suffixe\",\n    ENTER_PREFIX: \"Entrez le préfixe\",\n    CLICK: 'Click',\n    CONNECT_TO_START: \" pour commencer ou \",\n    TIP: 'Tip',\n    ACTION: 'Action',\n    ACTIONS: 'Actions',\n    ADVANCED_SEARCH_TIP: \"utilisez une nouvelle ligne ou une nouvelle virgule pour séparer vos entrées de domaine.\",\n    ADVANCED_SEARCH: \"Recherche avancée\",\n    ADVANCED_MODE: \"Mode Avancé\",\n    REGISTER_DOMAINS_TO: \"Enregistrer les domaines à\",\n    NO_DOMAINS_SELECTED: \"Aucun domaine sélectionné.\",\n    FIND_AND_REGISTER: \"Enregistrer les domaines par exemple domaine1, domaine2...\",\n    SELECTED_DOMAINS: \"Domaines sélectionnés\",\n    REGISTER: \"Inscription\",\n    BOOKMARKS: \"Signets\",\n    SEARCH_RESULTS: \"Résultats de recherche\",\n    PROCEED_TO_REGISTRATION: \"Procéder à l'inscription\",\n    REGISTER_DOMAINS: \"Enregistrer les domaines à\",\n    REGISTRANT_ADDRESS: \"Adresse de l'inscrit\",\n    SET_RESOLVER: \"Définir le résolveur\",\n    TOTAL_COST: \"Coût total\",\n    GAS_PRICE: \"Prix du gaz\",\n    NO_ADDRESS_DETECTED: \"Aucune adresse détectée.\",\n    DURATION: \"Durée\",\n    NOTICE_SELECT_AN_RPC: \"Remarque : sélectionnez un RPC qui sera utilisé dans l'application pour remplacer le fournisseur RPC par défaut.\",\n    ENABLE_LIGHT_MODE: \"Activer le style de mise en page léger.\",\n    CLICK_NEXT_TO_PROCEED: \"Cliquez sur <b>Suivant</b> pour continuer.\"\n  },\n  REGISTRATION: {\n    REGISTRATION_CANCELLED_TITLE: \"Inscription annulée\",\n    REGISTRATION_CANCELLED_DESCRIPTION: \"Votre inscription a été annulée.\",\n    CANCEL_REGISTRATION_TITLE: \"Annuler l'inscription\",\n    CANCEL_REGISTRATION_DESCRIPTION: \"Êtes-vous sûr de vouloir annuler cette inscription ? Cette action ne peut pas être annulée.\",\n    BEFORE_COMMIT: \"Étape 1 : demande d'inscription.\",\n    COMMIT_SENT: \"Traitement de la requête...\",\n    COMMIT_COMPLETE: \"Étape 1 : demande d'inscription...\",\n    AWAIT: \"Traitement de la requête...\",\n    BEFORE_REGISTRATION: \"Terminer l'inscription.\",\n    REGISTRATION_SENT: \"Fin de l'inscription...\",\n    REGISTRATION_COMPLETE: \"Inscription!\",\n    REGISTRATION_COMPLETE_TITLE: \"Inscription\",\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: \"Vos domaines ont été enregistrés.\",\n    BASKET_EMPTY: \"Votre panier est vide\",\n    PLEASE_SELECT_DOMAINS_TO_REGISTER: \"Veuillez sélectionner de nouveaux domaines à enregistrer.\"\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: \"Transaction annulée. Veuillez réessayer.\"\n  },\n  SPINNER: {\n    SETUP_COMPLETE: \"Mise en place terminée\",\n    LEDGER_NO_DEVICE_SELECTED: \"Une erreur est survenue lors de la connexion à votre portefeuille. Veuillez réessayer.\",\n    NO_DATA_TO_DISPLAY: \"Aucun élément à afficher.\",\n    PERFORMING_SEARCH: \"Recherche en cours...\",\n    LOADING_DATA: \"Chargement des données...\",\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET: \"Veuillez suivre les instructions de votre portefeuille pour continuer.\"\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: \"Entrez la durée\",\n    ENTER_QR_LINK: \"Entrez l'URL du QR Code personnalisé\",\n    ENTER_PRICE: \"Entrez le prix\",\n    ENTER_CUSTOM_ADDRESS: \"Entrez une adresse personnalisée\",\n    ENTER_RECEIVER_ADDRESS: \"Entrez l'adresse du destinataire\"\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: \"Durée non valide\",\n    INVALID_QR_LINK: \"URL invalide, veuillez réessayer.\",\n    INVALID_PRICE: \"URL invalide, veuillez réessayer.\",\n    NO_ADDRESS_DETECTED: \"Aucune adresse détectée, veuillez réessayer.\",\n    INVALID_ADDRESS: \"Adresse invalide, veuillez réessayer.\"\n  },\n  STEP: {\n    STEP_1: \"Etape 1\",\n    STEP_2: \"Etape 2\",\n    STEP_3: \"Etape 3\",\n    STEP_4: \"Etape 4\",\n    STEP_5: \"Etape 5\"\n  },\n  RENEW: {\n    RENEWAL_COST: \"Coût de Renouvellement\",\n    ESTIMATED_RENEWAL_COST: \"Voici le coût estimé de renouvellement de cette transaction.\",\n    RENEWAL_COMPLETE: \"Renouvellement terminé\",\n    DOMAINS_READY_FOR_RENEWAL: \" Vos domaines sont maintenant prêts à être renouvelés. Pour finaliser votre renouvellement, appuyez sur continuer.\"\n  },\n  TRANSFER: {\n    TRANSFER_TO: \"Transfert vers\",\n    TRANSFER_COMPLETE: \"Transfert terminé !\",\n    SETUP_INSTRUCTION: \"Pour activer la gestion des domaines ENS, votre compte doit être configuré pour approuver les transferts de domaine.\",\n    CONTRACT_APPROVAL_NOTE: \"L'approbation du contrat permet au contrat d'effectuer des transferts de domaines en votre nom.\",\n    DOMAINS_READY_FOR_TRANSFER: \"Vos domaines sont maintenant prêts pour le transfert. Entrez l'adresse du destinataire et appuyez sur continuer.\"\n  }\n};","import * as EN from './translations/en.conf';\nimport * as DE from './translations/de.conf';\nimport * as CN from './translations/cn.conf';\nimport * as JP from './translations/jp.conf';\nimport * as ES from './translations/es.conf';\nimport * as RU from './translations/ru.conf';\nimport * as FR from './translations/fr.conf';\n\nexport const validTranslations = {\n  en: EN,\n  de: DE,\n  es: ES,\n  fr: FR,\n  ru: RU,\n  jp: JP,\n  cn: CN,\n};\n","import { HammerGestureConfig } from '@angular/platform-browser';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class HammerJsConf extends HammerGestureConfig {\n\toverrides = {\n\t\tswipe: { velocity: 0.3, threshold: 10 },\n\t} as any;\n}\n","import { DomainTypeEnum } from '../models/domains';\nimport { PagesEnum } from '../models/states/pages-interfaces';\n\nexport const generalConfigurations = {\n  version: '0.1.0',\n  defaultLanguage: 'en',\n  defaultPage: PagesEnum.HOME,\n  maximumDecimalInPrices: 8,\n  maxAttemptsToCheckoutData: 10,\n  sessionTimeout: 6000 * 15,\n  maxRPCCallRetries: 10,\n  timeUntilImageLoadErrors: 3000,\n  timeToUpdateEthUSDRate: 60000,\n  timeToUpdateCheckoutPipe: 3000,\n  timeToUpdateRegistrationGasPrice: 5000,\n  timeUntilCheckoutExpires: 3000,\n  maxBlogsOnHome: 3,\n  maxConfirmationsUntilTxFinal: 1,\n  declarePaymentStatusUnkownUntilXFailedDataFetches: 5,\n  gasLimitBuffer: 50000,\n  maxCheckoutRetryUntilRehydrateProcessId: 5,\n  maxIpfsSubscriptionRetries: 5,\n  maxDomainsToRegister: 150,\n  maxDomainsToTransfer: 150,\n  maxDomainsToRenew: 150,\n  maxYearsRegistration: 1000,\n  maxTotalCostBuffer: [101, 101, 105],\n  maxDomainSearch: {\n    ENS: 1000,\n    LNR: 100,\n  },\n  defaultCurrency: 'ETH',\n  enableCustomRPC: true,\n  frontpageBlogsFeed:\n    'https://cors-anywhere.herokuapp.com/https://predomain.medium.com/feed',\n  docsLink: 'https://docs.predomain.xyz/',\n  blockscanLink: 'https://chat.blockscan.com/index?a=',\n  nftyChatLink: 'https://nftychat.xyz/dm/',\n  appName: 'predomain',\n  appStagingName: 'staging.predomain',\n  trezorManifest: {\n    email: 'predomain@skiff.com',\n    appUrl: 'https://predomain.eth.limo',\n  },\n  appMeta: {\n    description: 'Decentralised ENS Search, Registration, & Marketplace',\n    url: 'https://predomain.eth.limo',\n    icons: ['https://ecanvas.eth.limo/assets/logo.png'],\n    name: 'Predomain.eth',\n  },\n  enabledTools: {\n    category: true,\n    management: true,\n    canvas: true,\n    registration: true,\n    profile: true,\n    domain: true,\n  },\n  enablePoapResolution: false,\n  poapRequiredTools: {\n    category: {\n      required: false,\n      poapId: null,\n      allowedIds: null,\n    },\n    management: { required: false, poapId: null, allowedIds: null },\n    canvas: { required: false, poapId: null, allowedIds: null },\n    registration: { required: false, poapId: null, allowedIds: null },\n    profile: { required: false, poapId: null, allowedIds: null },\n    domain: { required: false, poapId: null, allowedIds: null },\n  },\n  wallectConnectSupportedWallets: [\n    'rainbow',\n    'metamask',\n    'argent',\n    'trust',\n    'trezor',\n    'imtoken',\n    'pillar',\n    'coinbase',\n  ],\n  domainsCanBeRegistered: [DomainTypeEnum.ENS],\n  domainExtensions: {\n    ENS: '.eth',\n    LNR: '.og',\n  },\n  domainNormalisationRequired: [DomainTypeEnum.ENS],\n  domainTldTitles: {\n    ENS: 'ENS - Ethereum Name Service',\n    LNR: 'LNR - Linagee Name Registrar',\n  },\n  categoiesDataSourceFallback: 'https://localhost:42069',\n  categoriesUseFallback: true,\n  categoryChartTimeRange: 2629800000,\n  categoriesDomain: 'categories.predomain.eth',\n};\n","export const icons = {\n  check: 'assets/icons/check.apng',\n  confetti: 'assets/icons/confetti.apng',\n  cart_empty: 'assets/icons/cart_empty.apng',\n  llayers: 'assets/icons/llayers.apng',\n  spin: 'assets/icons/spin.apng',\n};\n\nexport const infiniteLoopedIcons = ['spin', 'confetti'];\n","export const imageToPreload = [\n  'icn-ledger.svg',\n  'icn-metamask.svg',\n  'trezor-logo.png',\n  'metamask-connect-in-progress.png',\n  'metamask-sign-in-progress.png',\n  'trezor-connect-in-progress.png',\n  'trezor-sign-in-progress.png',\n  'ledger-connect-in-progress.png',\n  'ledger-sign-in-progress.png',\n];\n","import { PagesEnum } from '../models/states/pages-interfaces';\n\n/**\n * Define pages that are not accessible without a wallet connected.\n */\nexport const privatePages = [\n  PagesEnum.CANVAS,\n  PagesEnum.CHECKOUT,\n  PagesEnum.MANAGE,\n];\n","export const invalidChars = [];\n","export const dataNodeEndpoints = {\n  ping: 'ping/0x0',\n  checkout: 'checkout',\n};\n","import { ethers } from 'ethers';\nimport { ThirdpartyMarketplaceModel } from '../models/marketplace';\n\nexport const thirdPartyMarketplacesConfigurations = [\n  {\n    name: 'OpenSea',\n    icon: 'opensea.png',\n    url: 'https://opensea.io',\n    fee: 2.5,\n    assetLinks: {\n      ENS: 'assets/ethereum/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85',\n    },\n    assetLinksKey: {\n      ENS: 'labelHash',\n    },\n    assetLinksKeyExtraInfo: {\n      ENS: '',\n    },\n    assetLinksProcessor: {\n      ENS: (a) => ethers.BigNumber.from(a).toString(),\n    },\n  },\n  {\n    name: 'LooksRare',\n    icon: 'looksrare.png',\n    url: 'https://looksrare.org',\n    fee: 2,\n    assetLinks: {\n      ENS: 'collections/0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85',\n    },\n    assetLinksKey: {\n      ENS: 'labelHash',\n    },\n    assetLinksKeyExtraInfo: {\n      ENS: '',\n    },\n    assetLinksProcessor: {\n      ENS: (a) => ethers.BigNumber.from(a).toString(),\n    },\n  },\n  {\n    name: 'X2Y2',\n    icon: 'x2y2.png',\n    url: 'https://x2y2.io',\n    fee: 0.5,\n    assetLinks: {\n      ENS: 'eth/0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85',\n    },\n    assetLinksKey: {\n      ENS: 'labelHash',\n    },\n    assetLinksKeyExtraInfo: {\n      ENS: '',\n    },\n    assetLinksProcessor: {\n      ENS: (a) => ethers.BigNumber.from(a).toString(),\n    },\n  },\n  {\n    name: 'Kodex',\n    icon: 'kodex.png',\n    url: 'https://beta.kodex.io',\n    fee: 1,\n    assetLinks: {\n      ENS: 'domain/',\n    },\n    assetLinksKey: {\n      ENS: 'labelName',\n    },\n    assetLinksKeyExtraInfo: {\n      ENS: '.eth',\n    },\n    assetLinksProcessor: {\n      ENS: (a) => a,\n    },\n  },\n  {\n    name: 'ENS.Vision',\n    icon: 'ensvision.png',\n    url: 'https://ens.vision',\n    fee: 1.5,\n    assetLinks: {\n      ENS: 'name/',\n    },\n    assetLinksKey: {\n      ENS: 'labelName',\n    },\n    assetLinksKeyExtraInfo: {\n      ENS: '',\n    },\n    assetLinksProcessor: {\n      ENS: (a) => a,\n    },\n  },\n  {\n    name: 'Domainplug',\n    icon: 'domainplug.png',\n    url: 'https://beta.domainplug.io',\n    fee: 1,\n    assetLinks: {\n      ENS: 'domain/',\n    },\n    assetLinksKey: {\n      ENS: 'labelHash',\n    },\n    assetLinksKeyExtraInfo: {\n      ENS: '',\n    },\n    assetLinksProcessor: {\n      ENS: (a) => ethers.BigNumber.from(a).toString(),\n    },\n  },\n] as ThirdpartyMarketplaceModel[];\n","export enum DomainTypeEnum {\n  ENS = 'ENS',\n  LNR = 'LNR',\n}\n","export enum EnsEventsEnum {\n  TRANSFER = 'EVENTS.TRANSFER',\n  REGISTRATION = 'EVENTS.REGISTRATION',\n  RENEWAL = 'EVENTS.RENEWAL',\n  SALE = 'EVENTS.SALE',\n  MINT = 'EVENTS.MINT',\n  BURN = 'EVENTS.BURN',\n}\n\nexport enum EnsEvensSymbolEnum {\n  'EVENTS.TRANSFER' = 'sync_alt',\n  'EVENTS.REGISTRATION' = 'sync_alt',\n  'EVENTS.RENEWAL' = 'update',\n  'EVENTS.SALE' = 'shopping_cart',\n  'EVENTS.MINT' = 'magic_button',\n  'EVENTS.BURN' = 'local_fire_department',\n}\n","export enum UserStoreErrorsEnum {\n  UNKNOWN = 'UNKNOWN_USER',\n  CONNECT_ERROR = 'CONNECT_ERROR',\n  LEDGER_NO_DEVICE_SELECTED = 'LEDGER_NO_DEVICE_SELECTED',\n  EMAIL_INVALID = 'EMAIL_INVALID',\n  COMPANY_NAME_INVALID = 'COMPANY_NAME_INVALID',\n  COMPANY_ADDRESS_INVALID = 'COMPANY_ADDRESS_INVALID',\n  SELECTED_CURRENCIES_INVALID = 'SELECTED_CURRENCIES_INVALID',\n  WALLET_ADDRESS_INVALID = 'WALLET_ADDRESS_INVALID',\n  ACCOUNT_EXISTS = 'ACCOUNT_EXISTS',\n  USER_NO_NETWORK_CONNECTION = 'USER_NO_NETWORK_CONNECTION',\n  CANNOT_FIND_WALLET_ADDRESS_TO_RECOVER = 'CANNOT_FIND_WALLET_ADDRESS_TO_RECOVER',\n  DEVICE_VERIFICATION_FAILED = 'DEVICE_VERIFICATION_FAILED',\n  REGISTRATION_EXPIRED = 'REGISTRATION_EXPIRED',\n  REGISTER_CAPTCHA_INVALID = 'REGISTER_CAPTCHA_INVALID',\n  EMAIL_VERIFICATION_FAILED = 'EMAIL_VERIFICATION_FAILED',\n}\n","import { HttpClient } from '@angular/common/http';\nimport { FormatTimePipe, TimeAgoPipe } from '../modules/pipes';\nimport {\n  FormValidationService,\n  MiscUtilsService,\n  PaymentStorageService,\n  TranslationService,\n  UserService,\n  UserSessionService,\n} from '../services';\nimport { BookmarksServiceService } from '../services/bookmarks';\nimport { EnsService } from '../services/ens';\nimport { WalletConnectService } from '../services/wallet-connect';\nimport {\n  RegistrationDataService,\n  RegistrationServiceService,\n} from '../services/registration';\nimport {\n  NavigatorButtonsFacadeService,\n  NavigatorFacadeService,\n  PagesFacadeService,\n  UserFacadeService,\n} from '../store/facades';\nimport { DownloadService } from '../services/download/download.service';\nimport { ContractService } from '../services/contract';\nimport { EnsMarketplaceService } from '../services/ens-marketplace';\nimport { LnrService } from '../services/lnr';\nimport { CategoriesDataService } from '../services/categories-data';\nimport { PoapService } from '../services/poap';\n\nexport const serviceProviders = [\n  UserService,\n  UserSessionService,\n  UserFacadeService,\n  PagesFacadeService,\n  NavigatorFacadeService,\n  NavigatorButtonsFacadeService,\n  FormValidationService,\n  MiscUtilsService,\n  TranslationService,\n  FormatTimePipe,\n  TimeAgoPipe,\n  HttpClient,\n  EnsService,\n  RegistrationDataService,\n  BookmarksServiceService,\n  RegistrationServiceService,\n  PaymentStorageService,\n  WalletConnectService,\n  DownloadService,\n  ContractService,\n  EnsMarketplaceService,\n  LnrService,\n  CategoriesDataService,\n  PoapService,\n];\n","export const payNoMarketAddress = '0x0000000000000000000000000000000000000000';\n","export const routerPaths = {\n  canvas: 'canvas',\n  bootstrap: 'bootstrap',\n  home: 'home',\n  checkout: 'checkout',\n  notfound: 'notfound',\n  profile: 'profile',\n  domain: 'domain',\n  manage: 'manage',\n};\n","export enum ValidRPCProvidersEnum {\n  DEFAULT,\n  CUSTOM,\n  INFURA,\n  ALCHEMY,\n}\n","export enum PageModesEnum {\n  DEFAULT,\n  PROFILE,\n}\n","export enum PagesEnum {\n  BOOTSTRAP = 'BOOTSTRAP',\n  HOME = 'HOME',\n  CANVAS = 'CANVAS',\n  CHECKOUT = 'CHECKOUT',\n  ERROR = 'ERROR',\n  SUCCESS = 'SUCCESS',\n  PROFILE = 'PROFILE',\n  DOMAIN = 'DOMAIN',\n  NOTFOUND = 'NOTFOUND',\n  MANAGE = 'manage',\n}\n","export enum PaymentErrorCodes {\n  NONE,\n  PAYMENT_EXPIRED,\n  TOKEN_NOT_SUPPORTED,\n  INSUFFICIENT_FUNDS,\n  SIGNATURE_INVALID,\n  PAYMENT_FAILURE,\n  AMOUNT_ZERO,\n  MARKET_NOT_SUPPORTED,\n}\n","/**\n * LEAVE THE VALUES, IT MUST BE SET EXPLICITLY.\n */\nexport enum PaymentTypesEnum {\n  PAY = 0,\n  REGISTER = 1,\n  COMMIT = 2,\n  TX_APPROVAL = 3,\n  TX_TRANSFER = 4,\n  TX_RENEW = 5,\n  TX_SET_ENS_NAME = 6,\n  TX_SET_ENS_CONTENT_HASH = 7,\n  TX_SET_ENS_TEXT = 8,\n}\n","export enum NonceTypesEnum {\n  SERIAL,\n  TOKEN\n}\n","export enum WalletTypesEnum {\n  METAMASK,\n  LEDGER,\n  TREZOR,\n  WALLET_CONNECT,\n}\n","import { NgModule } from '@angular/core';\nimport { TranslationPipe } from '../../services';\nimport { EtherDecimalFixedPipe } from '../pipes';\n\n@NgModule({\n  imports: [],\n  providers: [],\n  declarations: [EtherDecimalFixedPipe],\n  exports: [EtherDecimalFixedPipe],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class EtherDecimalFixedModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { IconComponent } from 'src/app/widgets/icon';\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [IconComponent],\n  exports: [\n    IconComponent,\n    MatDialogModule,\n    MatButtonModule,\n    TranslationModule,\n    FlexLayoutModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class IconModule {}\n","import { NgModule } from \"@angular/core\";\nimport { TranslationModule } from \"./translation.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { serviceProviders } from \"../../models\";\nimport { CustomAddressComponent } from \"../../widgets/custom-address/custom-address.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { CommonModule } from \"@angular/common\";\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [CustomAddressComponent],\n  exports: [\n    CustomAddressComponent,\n    TranslationModule,\n    FlexLayoutModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  bootstrap: [],\n  entryComponents: [CustomAddressComponent],\n  schemas: [],\n})\nexport class CustomAddressDialogModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { GenericDialogComponent } from '../../widgets/generic-dialog/generic-dialog.component';\nimport { IconModule } from './icon.module';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [GenericDialogComponent],\n  exports: [\n    CommonModule,\n    GenericDialogComponent,\n    TranslationModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [GenericDialogComponent],\n  schemas: [],\n})\nexport class GenericDialogModule {}\n","import { NgModule } from \"@angular/core\";\nimport { TranslationModule } from \"./translation.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { serviceProviders } from \"../../models\";\nimport { OnboardDialogComponent } from \"../../widgets/onboard-dialog\";\nimport { SharedModule } from \"../shared.module\";\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    SharedModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [OnboardDialogComponent],\n  exports: [OnboardDialogComponent, TranslationModule, FlexLayoutModule],\n  bootstrap: [],\n  entryComponents: [OnboardDialogComponent],\n  schemas: [],\n})\nexport class OnboardDialogModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { SpinnerCustomComponent } from 'src/app/widgets/spinner-custom';\nimport { CommonModule } from '@angular/common';\nimport { IconModule } from './icon.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [SpinnerCustomComponent],\n  exports: [\n    SpinnerCustomComponent,\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class SpinnerCustomModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { IconModule } from './icon.module';\nimport { CommonModule } from '@angular/common';\nimport { BulkSearchComponent } from 'src/app/widgets/bulk-search';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { SpinnerCustomModule } from './spinner-custom.module';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatInputModule,\n    MatSlideToggleModule,\n    MatProgressBarModule,\n    SpinnerCustomModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [BulkSearchComponent],\n  exports: [\n    BulkSearchComponent,\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatInputModule,\n    MatSlideToggleModule,\n    MatProgressBarModule,\n    SpinnerCustomModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class BulkSearchModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { IconModule } from './icon.module';\nimport { CommonModule } from '@angular/common';\nimport { BlockyComponent } from 'src/app/widgets/blocky';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslationModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [BlockyComponent],\n  exports: [\n    CommonModule,\n    BlockyComponent,\n    MatIconModule,\n    TranslationModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class BlockyModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { serviceProviders } from '../../models';\nimport { CommonModule } from '@angular/common';\nimport { SettingsComponent } from 'src/app/widgets/settings';\nimport { SharedModule } from '../shared.module';\n\n@NgModule({\n  imports: [CommonModule, TranslationModule, SharedModule],\n  providers: [...serviceProviders],\n  declarations: [SettingsComponent],\n  exports: [CommonModule, SettingsComponent, SharedModule],\n  bootstrap: [],\n  entryComponents: [SettingsComponent],\n  schemas: [],\n})\nexport class SettingsDialogModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { IconModule } from './icon.module';\nimport { CommonModule } from '@angular/common';\nimport { MainHeaderComponent } from 'src/app/widgets/main-header';\nimport { BulkSearchModule } from './bulk-search.module';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BlockyModule } from './blocky.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SpinnerCustomModule } from './spinner-custom.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { SettingsDialogModule } from './settings-dialog.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatBadgeModule,\n    MatMenuModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    FlexLayoutModule,\n    SpinnerCustomModule,\n    BulkSearchModule,\n    SettingsDialogModule,\n    BlockyModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [MainHeaderComponent],\n  exports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MainHeaderComponent,\n    MatDialogModule,\n    MatButtonModule,\n    MatBadgeModule,\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatInputModule,\n    TranslationModule,\n    FlexLayoutModule,\n    SpinnerCustomModule,\n    BulkSearchModule,\n    SettingsDialogModule,\n    BlockyModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class MainHeaderModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { SharedModule } from '../shared.module';\nimport { IconModule } from './icon.module';\nimport { EtherDecimalFixedModule } from './ether-decimal-fixed.module';\nimport { SaleManagementComponent } from 'src/app/widgets/sale-management';\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n    EtherDecimalFixedModule,\n    SharedModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [SaleManagementComponent],\n  exports: [\n    SaleManagementComponent,\n    TranslationModule,\n    IconModule,\n    EtherDecimalFixedModule,\n    FlexLayoutModule,\n  ],\n  bootstrap: [],\n  entryComponents: [SaleManagementComponent],\n  schemas: [],\n})\nexport class SaleManagementDialogModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { IconModule } from './icon.module';\nimport { FooterComponent } from 'src/app/widgets/footer';\nimport { SharedModule } from '../shared.module';\nimport { EtherDecimalFixedModule } from './ether-decimal-fixed.module';\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    FlexLayoutModule,\n    IconModule,\n    EtherDecimalFixedModule,\n    SharedModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [FooterComponent],\n  exports: [\n    TranslationModule,\n    FlexLayoutModule,\n    IconModule,\n    EtherDecimalFixedModule,\n    SharedModule,\n    FooterComponent,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class FooterModule {}\n","import { NgModule } from \"@angular/core\";\nimport { TranslationPipe } from \"../../services\";\n\n@NgModule({\n  imports: [],\n  providers: [],\n  declarations: [TranslationPipe],\n  exports: [TranslationPipe],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class TranslationModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.addDefaultLocale(en);\n\n@Pipe({\n  name: 'fixedEther',\n})\nexport class EtherDecimalFixedPipe implements PipeTransform {\n  transform(value: number): any {\n    return value.toFixed(6);\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatTime',\n})\nexport class FormatTimePipe extends DatePipe implements PipeTransform {\n  transform(value: string): any {\n    if (value) {\n      const inputDate = new Date(parseInt(value));\n      return super.transform(inputDate, 'MMM d y');\n    }\n  }\n\n  transformShortened(value: string): any {\n    if (value) {\n      const inputDate = new Date(parseInt(value));\n      return super.transform(inputDate, 'MMM d');\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport TimeAgo from 'javascript-time-ago';\nimport { FormatTimePipe } from './format-time.pipe';\n\n@Pipe({\n  name: 'timeAgo',\n})\nexport class TimeAgoPipe implements PipeTransform {\n  constructor(protected formatTimePipe: FormatTimePipe) {}\n\n  transform(value: string): any {\n    const timeAgo = new TimeAgo('en-GB');\n    if (value) {\n      const time = timeAgo.format(new Date(parseInt(value)));\n      if (time.toLowerCase().indexOf('year') > -1) {\n        return this.formatTimePipe.transform(value);\n      }\n      return time;\n    }\n  }\n}\n","import {\n  NgModule,\n  CUSTOM_ELEMENTS_SCHEMA,\n  NO_ERRORS_SCHEMA,\n} from '@angular/core';\nimport {\n  MAT_BOTTOM_SHEET_DATA,\n  MatBottomSheetModule,\n} from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n  MatDialogModule,\n} from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {\n  MatProgressBarModule,\n  MAT_PROGRESS_BAR_DEFAULT_OPTIONS,\n} from '@angular/material/progress-bar';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { TranslationModule } from './miscs/translation.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport {\n  GenericDialogModule,\n  CustomAddressDialogModule,\n  IconModule,\n} from './miscs';\nimport { serviceProviders } from '../models';\nimport { HammerJsConf } from '../configurations';\nimport { GetScrollableXyDirective } from './directives';\nimport { FormatTimePipe, TimeAgoPipe } from './pipes';\nimport { HeaderComponent } from '../widgets/header';\nimport { NavigatorComponent } from '../widgets/navigator';\nimport { NavigatorButtonComponent } from '../widgets/navigator-button';\nimport { PinInputComponent } from '../widgets/pin-input';\nimport { SpinnerComponent } from '../widgets/spinner';\nimport { PreviewImageComponent } from '../widgets/preview-image';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { NgxColorsModule } from 'ngx-colors';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    RouterModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IconModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatChipsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatRadioModule,\n    MatStepperModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatRippleModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatListModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSnackBarModule,\n    MatProgressBarModule,\n    MatBadgeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    TranslationModule,\n    DragDropModule,\n    OverlayModule,\n    GenericDialogModule,\n    CustomAddressDialogModule,\n    QRCodeModule,\n    NgxColorsModule,\n  ],\n  providers: [\n    ...serviceProviders,\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: HammerJsConf,\n    },\n    { provide: MAT_PROGRESS_BAR_DEFAULT_OPTIONS, useValue: {} },\n    { provide: MAT_BOTTOM_SHEET_DATA, useValue: {} },\n    { provide: MAT_DIALOG_DATA, useValue: {} },\n    { provide: MatDialogRef, useValue: {} },\n  ],\n  declarations: [\n    HeaderComponent,\n    NavigatorComponent,\n    NavigatorButtonComponent,\n    PinInputComponent,\n    SpinnerComponent,\n    GetScrollableXyDirective,\n    FormatTimePipe,\n    TimeAgoPipe,\n    PreviewImageComponent,\n  ],\n  exports: [\n    HttpClientModule,\n    TranslationModule,\n    CommonModule,\n    RouterModule,\n    HeaderComponent,\n    NavigatorComponent,\n    NavigatorButtonComponent,\n    MatAutocompleteModule,\n    PinInputComponent,\n    SpinnerComponent,\n    PreviewImageComponent,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IconModule,\n    MatBottomSheetModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatRippleModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatListModule,\n    MatStepperModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatTableModule,\n    MatSnackBarModule,\n    MatBadgeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    DragDropModule,\n    OverlayModule,\n    GetScrollableXyDirective,\n    FormatTimePipe,\n    TimeAgoPipe,\n    GenericDialogModule,\n    CustomAddressDialogModule,\n    QRCodeModule,\n    NgxColorsModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class SharedModule {}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DomainMetadataModel } from 'src/app/models/domains';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BookmarksServiceService {\n  constructor(protected snackBar: MatSnackBar) {}\n\n  countBookmarks() {\n    return this.loadBookmarksAndFeed().length;\n  }\n\n  loadBookmarks() {\n    return localStorage.getItem('canvas-bookmarks');\n  }\n\n  loadBookmarksAndFeed() {\n    const sBookmarks = this.loadBookmarks();\n    if (sBookmarks !== null && sBookmarks !== '' && sBookmarks !== '[]') {\n      return JSON.parse(sBookmarks);\n    }\n    return [];\n  }\n\n  saveAllBookmark(domainsData: DomainMetadataModel[]) {\n    const bookmarksRaw = this.loadBookmarksAndFeed().reduce(\n      (accumulator, value) => {\n        return { ...accumulator, [value.labelName]: value };\n      },\n      {}\n    );\n    const bKeys = Object.keys(bookmarksRaw);\n    let bookmarks = [...new Set(bKeys)].map((k) => bookmarksRaw[k]);\n    bookmarks = bookmarks.concat(domainsData);\n    localStorage.setItem('canvas-bookmarks', JSON.stringify(bookmarks));\n    return bookmarks;\n  }\n\n  saveBookmark(domainData: DomainMetadataModel) {\n    const bookmarksRaw = this.loadBookmarksAndFeed().reduce(\n      (accumulator, value) => {\n        return { ...accumulator, [value.labelName]: value };\n      },\n      {}\n    );\n    const bKeys = Object.keys(bookmarksRaw);\n    const bookmarks = [...new Set(bKeys)].map((k) => bookmarksRaw[k]);\n    bookmarks.push(domainData);\n    localStorage.setItem('canvas-bookmarks', JSON.stringify(bookmarks));\n    return bookmarks;\n  }\n\n  removeAllBookmarks() {\n    localStorage.setItem('canvas-bookmarks', JSON.stringify([]));\n    return [];\n  }\n  removeBookmark(bookmarks: DomainMetadataModel[], domainName: string) {\n    const bookmarksUpdated = [];\n    bookmarks.filter((d) => {\n      if (d.labelName !== domainName) {\n        bookmarksUpdated.push(d);\n      }\n    });\n    localStorage.setItem('canvas-bookmarks', JSON.stringify(bookmarks));\n    return bookmarks;\n  }\n\n  clearBookmarks() {\n    localStorage.setItem('canvas-bookmarks', JSON.stringify([]));\n  }\n\n  isDomainBookmarked(bookmarks: DomainMetadataModel[], domainName: string) {\n    for (const d of bookmarks) {\n      if (d.labelName === domainName) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, from, Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport {\n  dataNodeEndpoints,\n  generalConfigurations,\n} from 'src/app/configurations';\nimport { environment } from 'src/environments/environment';\nimport { Archive } from 'libarchive.js/main.js';\n\nArchive.init({\n  workerUrl: 'assets/js/libarchive/worker-bundle.js',\n});\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoriesDataService {\n  constructor(protected httpClient: HttpClient) {}\n\n  getCategoriesComperssedArchive(categoriesToRead: string[]) {\n    const file = 'assets/categories/categories.7z';\n    return this.httpClient\n      .get(file, {\n        responseType: 'blob',\n      })\n      .pipe(\n        switchMap((r) => {\n          return from(Archive.open(r));\n        }),\n        switchMap((r) => {\n          return new Observable((observer) => {\n            let categoriesData = {};\n            (r as any).extractFiles((entry) => {\n              if (entry.path === 'root.json') {\n                return;\n              }\n              let reader = new FileReader();\n              reader.readAsText(entry.file);\n              reader.onload = () => {\n                const categoryData = JSON.parse(reader.result as string);\n                categoriesData[(categoryData as any).category] = categoryData;\n                if (\n                  Object.keys(categoriesData).length >=\n                  categoriesToRead.length - 1\n                ) {\n                  observer.next(categoriesData);\n                  observer.complete();\n                }\n              };\n            });\n          });\n        })\n      );\n  }\n\n  pingCategoriesDataProviders(endPoints: string[]) {\n    let useEnpoints = endPoints;\n    if (environment.development === true) {\n      useEnpoints = [generalConfigurations.categoiesDataSourceFallback];\n    }\n    const endPointRequests = useEnpoints.map((e) => {\n      return this.httpClient.get([e, dataNodeEndpoints.ping].join('/')).pipe(\n        switchMap((r) => of({ provider: e, result: r })),\n        catchError((e) => {\n          return of(false);\n        })\n      );\n    });\n    return forkJoin(endPointRequests);\n  }\n\n  getCategoriesIpfsMetadata(endPoint: string, category: string) {\n    if (generalConfigurations.categoriesUseFallback === true) {\n      return this.httpClient\n        .get('assets/categories/' + category + '-meta.json')\n        .pipe(\n          switchMap((r) => {\n            return of(r);\n          }),\n          catchError((e) => {\n            return of(false);\n          })\n        );\n    }\n    return this.httpClient.get(endPoint).pipe(\n      switchMap((r) => of(r)),\n      catchError((e) => {\n        return of(false);\n      })\n    );\n  }\n\n  getCategoriesRootVolumeData(endPoint: string) {\n    let useEnpoint = endPoint;\n    if (environment.development === true) {\n      useEnpoint = generalConfigurations.categoiesDataSourceFallback;\n    }\n    return this.httpClient\n      .get(\n        [\n          useEnpoint,\n          dataNodeEndpoints.checkout,\n          'root_volume',\n          'root_volume',\n        ].join('/')\n      )\n      .pipe(\n        switchMap((r) => of(r)),\n        catchError((e) => {\n          return of(false);\n        })\n      );\n  }\n\n  getCategoriesData(endPoint: string, collection: string) {\n    let useEnpoint = endPoint;\n    if (environment.development === true) {\n      useEnpoint = generalConfigurations.categoiesDataSourceFallback;\n    }\n    return this.httpClient\n      .get(\n        [\n          useEnpoint,\n          dataNodeEndpoints.checkout,\n          'collections',\n          collection + '.' + generalConfigurations.categoriesDomain,\n        ].join('/')\n      )\n      .pipe(\n        switchMap((r) => of(r)),\n        catchError((e) => {\n          return of(false);\n        })\n      );\n  }\n\n  getCategoriesRootFallbackData() {\n    return this.httpClient.get('assets/categories/root.json').pipe(\n      switchMap((r) => of(r)),\n      catchError((e) => {\n        return of(false);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Contract } from 'ethers';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContractService {\n  constructor() {}\n\n  getGasLimitEstimation(\n    provider = null,\n    method: string,\n    params: any,\n    payer: string,\n    contractAddress: string = null,\n    contractABI: any = null,\n    providerFunction = false,\n    value: string = '0x0'\n  ) {\n    let c;\n    if (\n      providerFunction === false &&\n      (contractAddress === null || contractABI === null)\n    ) {\n      return of(false);\n    }\n    if (providerFunction === false) {\n      c = new Contract(contractAddress, contractABI, provider);\n    }\n    return new Observable((observer) => {\n      if (providerFunction === false) {\n        c.estimateGas[method](...params, {\n          value,\n          from: payer,\n        })\n          .then((r) => {\n            if (r === null) {\n              observer.next(false);\n              observer.complete();\n            }\n            observer.next(r);\n            observer.complete();\n          })\n          .catch((e) => {\n            observer.next(false);\n            observer.complete();\n          });\n      } else {\n        provider\n          .estimateGas(params)\n          .then((r) => {\n            if (r === null) {\n              observer.next(false);\n              observer.complete();\n            }\n            observer.next(r);\n            observer.complete();\n          })\n          .catch((e) => {\n            observer.next(false);\n            observer.complete();\n          });\n      }\n    });\n  }\n}\n","import * as ethers from 'ethers';\nimport { BigNumber } from 'ethers';\nimport { environment } from '../../../environments/environment';\nimport { Injectable } from '@angular/core';\nimport {\n  acceptedCurrenciesMainnet,\n  acceptedCurrenciesTestnet,\n  ContractAddressesMainnetEnum,\n  ContractAddressesTestnetEnum,\n  SupportedCurrenciesEnum,\n} from '../../configurations/contracts';\nimport { AcceptedCurrencyModel } from '../../models/currencies';\nimport { PaymentTypesEnum } from '../../models/states/payment-interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrencyService {\n  constructor() {}\n  /**\n   * Environment production: mainnet contracts are used.\n   * Environment development (true): devnet contracts are used.\n   * Environment development (false): testnet (ropsten) contracts are used.\n   * @param currency\n   */\n  deriveCurrencyAddressFromName(currency: string) {\n    let currencies;\n    if (environment.production === true) {\n      currencies = Object(ContractAddressesMainnetEnum);\n    } else {\n      currencies = Object(ContractAddressesTestnetEnum);\n    }\n    return currencies[currency.toUpperCase()];\n  }\n\n  deriveCurrencyDataFromCurrencyName(currency: string) {\n    let currencies;\n    if (environment.production === true) {\n      currencies = Object(acceptedCurrenciesMainnet) as AcceptedCurrencyModel[];\n    } else {\n      currencies = Object(acceptedCurrenciesTestnet) as AcceptedCurrencyModel[];\n    }\n    let currencySearched: any = false;\n    for (const c of currencies) {\n      if (c.currency === currency) {\n        currencySearched = c as AcceptedCurrencyModel;\n      }\n    }\n    return currencySearched;\n  }\n\n  convertAmountToDecimal(amountInString: string, currency: string) {\n    const paymentCurrency = this.deriveCurrencyDataFromCurrencyName(currency);\n    if (paymentCurrency === false) {\n      return false;\n    }\n    const currencyData = paymentCurrency as AcceptedCurrencyModel;\n    const bnAmount = BigNumber.from(amountInString);\n    return ethers.utils.formatUnits(bnAmount, currencyData.decimals);\n  }\n\n  convertAmountToToken(amountInString: string, currency: string) {\n    const paymentCurrency = this.deriveCurrencyDataFromCurrencyName(currency);\n    if (paymentCurrency === false) {\n      return false;\n    }\n    const currencyData = paymentCurrency as AcceptedCurrencyModel;\n    return ethers.utils.parseUnits(amountInString, currencyData.decimals);\n  }\n\n  getSupportedCurrencies() {\n    let currencies;\n    if (environment.production === true) {\n      currencies = Object(acceptedCurrenciesMainnet) as AcceptedCurrencyModel[];\n    } else {\n      currencies = Object(acceptedCurrenciesTestnet) as AcceptedCurrencyModel[];\n    }\n    return currencies as AcceptedCurrencyModel[];\n  }\n\n  determineDefaultCurrencyForPayment(\n    searchType: PaymentTypesEnum,\n    chooseSecondDefault = false\n  ) {\n    let secondDefaultToBeChosen = false;\n    for (const c of Object.keys(SupportedCurrenciesEnum)) {\n      const currencyData = this.deriveCurrencyDataFromCurrencyName(\n        c\n      ) as AcceptedCurrencyModel;\n      if (searchType === PaymentTypesEnum.PAY) {\n        if (chooseSecondDefault === true && secondDefaultToBeChosen === false) {\n          secondDefaultToBeChosen = true;\n        } else {\n          return c;\n        }\n      }\n    }\n  }\n}\n","export const chainlinkV3ABI = [\n  {\n    inputs: [],\n    name: 'decimals',\n    outputs: [\n      {\n        internalType: 'uint8',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'description',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint80',\n        name: '_roundId',\n        type: 'uint80',\n      },\n    ],\n    name: 'getRoundData',\n    outputs: [\n      {\n        internalType: 'uint80',\n        name: 'roundId',\n        type: 'uint80',\n      },\n      {\n        internalType: 'int256',\n        name: 'answer',\n        type: 'int256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'startedAt',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'updatedAt',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint80',\n        name: 'answeredInRound',\n        type: 'uint80',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'latestRoundData',\n    outputs: [\n      {\n        internalType: 'uint80',\n        name: 'roundId',\n        type: 'uint80',\n      },\n      {\n        internalType: 'int256',\n        name: 'answer',\n        type: 'int256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'startedAt',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'updatedAt',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint80',\n        name: 'answeredInRound',\n        type: 'uint80',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'version',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","import { Injectable } from '@angular/core';\nimport { Contract } from 'ethers';\nimport { from, timer } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport {\n  contractChainlinkMainnet,\n  contractChainlinkTestnet,\n  generalConfigurations,\n} from 'src/app/configurations';\nimport { chainlinkV3ABI } from 'src/app/configurations/contracts/chainlink-aggregator-v3.abi';\nimport { PaymentFacadeService } from 'src/app/store/facades';\nimport { environment } from 'src/environments/environment';\n\nconst globalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrencyExchangeService {\n  constructor(protected paymentFacade: PaymentFacadeService) {}\n\n  getPrices() {\n    let processorLocked = false;\n    return timer(0, generalConfigurations.timeToUpdateEthUSDRate).pipe(\n      filter((i) => {\n        if (processorLocked === true) {\n          return false;\n        }\n        return true;\n      }),\n      switchMap((i) => {\n        processorLocked = true;\n        return from(this.chainlink.latestRoundData()).pipe(\n          map((normalizedPrices) => {\n            if (normalizedPrices === false || normalizedPrices === null) {\n              return false;\n            }\n            this.paymentFacade.setEthUsdRate(\n              ((normalizedPrices as any).answer.toNumber() / 10 ** 8).toString()\n            );\n            processorLocked = false;\n          })\n        );\n      })\n    );\n  }\n\n  get chainlinkAddress() {\n    if (environment.test === true) {\n      return contractChainlinkTestnet;\n    }\n    return contractChainlinkMainnet;\n  }\n\n  get chainlink() {\n    const contract = new Contract(\n      this.chainlinkAddress,\n      chainlinkV3ABI,\n      globalAny.canvasProvider\n    );\n    return contract;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MiscUtilsService } from '../misc-utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DownloadService {\n  constructor(protected mistUtils: MiscUtilsService) {}\n\n  download(meta: string, dataRaw: any, fileName = null) {\n    const data = new TextEncoder().encode(dataRaw);\n    const blob = new Blob(['\\uFEFF', data], {\n      type: meta,\n    });\n    let fileURL;\n    if (fileName === null) {\n      fileURL = URL.createObjectURL(blob);\n    } else {\n      fileURL = meta;\n    }\n    window.open(fileURL, '_target');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BigNumber, Contract } from 'ethers';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport {\n  ENSContracts,\n  ENSResolverABI,\n  ENSReverseRegisteryABI,\n  ENSTokenNFTABI,\n  generalConfigurations,\n  marketplaceMainnet,\n  marketplaceTestnet,\n} from 'src/app/configurations';\nimport { ENSMarketplaceMainnetABI } from 'src/app/configurations/contracts/ens-marketplace-abi-mainnet.model';\nimport { ENSMarketplaceTestnetABI } from 'src/app/configurations/contracts/ens-marketplace-abi-testnet.model';\nimport { environment } from 'src/environments/environment';\nimport { ContractService } from '../contract';\nimport { EnsService } from '../ens/ens.service';\n\nconst globalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EnsMarketplaceService {\n  constructor(\n    protected contractService: ContractService,\n    protected ensService: EnsService\n  ) {}\n\n  checkApproval(tokenId: string, provider) {\n    const contract = this.getENSTokenContract(provider);\n    return from(contract.ownerOf(tokenId)).pipe(\n      switchMap((r) => {\n        if (r === null) {\n          throw null;\n        }\n        return contract.isApprovedForAll(r, this.marketplaceContractAddress);\n      }),\n      switchMap((r) => {\n        if (r === null) {\n          throw null;\n        }\n        return of(r);\n      }),\n      catchError((e) => {\n        return of(null);\n      })\n    );\n  }\n\n  transfer(domainNames: string[], to: string, payer: string, provider: any) {\n    const contract = this.getENSMarketplaceContract(provider);\n    const dataMethod = 'transferDomains';\n    const dataParams = [to, domainNames];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          this.marketplaceContractAddress,\n          this.marketplaceContractABI,\n          false\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = r as BigNumber;\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  approve(\n    operator: string,\n    payer: string,\n    approvalStatus: boolean,\n    provider: any\n  ) {\n    const contract = this.getENSTokenContract(provider);\n    const dataMethod = 'setApprovalForAll';\n    const dataParams = [operator, approvalStatus];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          ENSContracts.token,\n          ENSTokenNFTABI,\n          false\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = r as BigNumber;\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  renew(\n    domainNames: string[],\n    priceRanges: string[],\n    duration: BigNumber,\n    payer: string,\n    totalCost: string,\n    provider: any\n  ) {\n    const contract = this.getENSMarketplaceContract(provider);\n    const namesLengths = [];\n    for (const c of domainNames) {\n      namesLengths.push(this.ensService.getNameLength(c));\n    }\n    const dataMethod = 'renewDomains';\n    const dataParams = [domainNames, namesLengths, priceRanges, duration];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          this.marketplaceContractAddress,\n          this.marketplaceContractABI,\n          false,\n          totalCost\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = (r as BigNumber).add(generalConfigurations.gasLimitBuffer);\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  setContentHash(\n    name: string,\n    hash: string,\n    resolverAddress: string,\n    payer: string,\n    provider: any\n  ) {\n    const contract = this.getENSResolverContract(resolverAddress, provider);\n    const dataMethod = 'setContenthash';\n    const dataParams = [name, hash];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          resolverAddress,\n          ENSResolverABI,\n          false\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = (r as BigNumber).add(generalConfigurations.gasLimitBuffer);\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  setText(\n    name: string,\n    key: string,\n    value: string,\n    resolverAddress: string,\n    payer: string,\n    provider: any\n  ) {\n    const contract = this.getENSResolverContract(resolverAddress, provider);\n    const dataMethod = 'setText';\n    const dataParams = [name, key, value];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          resolverAddress,\n          ENSResolverABI,\n          false\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = (r as BigNumber).add(generalConfigurations.gasLimitBuffer);\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  setProfileName(name: string, payer: string, provider: any) {\n    const contract = this.getENSReverseRegistryContract(provider);\n    const dataMethod = 'setName';\n    const dataParams = [name];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          this.ensReverseRegistryContractAddress,\n          ENSReverseRegisteryABI,\n          false\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = (r as BigNumber).add(generalConfigurations.gasLimitBuffer);\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getENSTokenContract(provider) {\n    const contract = new Contract(ENSContracts.token, ENSTokenNFTABI, provider);\n    return contract;\n  }\n\n  getENSResolverContract(resolver, provider) {\n    const contract = new Contract(resolver, ENSResolverABI, provider);\n    return contract;\n  }\n\n  getENSMarketplaceContract(provider) {\n    const contract = new Contract(\n      this.marketplaceContractAddress,\n      this.marketplaceContractABI,\n      provider\n    );\n    return contract;\n  }\n\n  getENSReverseRegistryContract(provider) {\n    const contract = new Contract(\n      this.ensReverseRegistryContractAddress,\n      ENSReverseRegisteryABI,\n      provider\n    );\n    return contract;\n  }\n\n  get ensReverseRegistryContractAddress() {\n    if (environment.test === true) {\n      return ENSContracts.reverseRegistryTestnet;\n    }\n    return ENSContracts.reverseRegistry;\n  }\n\n  get marketplaceContractAddress() {\n    if (environment.test === true) {\n      return marketplaceTestnet;\n    }\n    return marketplaceMainnet;\n  }\n\n  get marketplaceContractABI() {\n    if (environment.test === true) {\n      return ENSMarketplaceTestnetABI;\n    }\n    return ENSMarketplaceMainnetABI;\n  }\n}\n","import { Injectable, Provider } from '@angular/core';\nimport request, { gql } from 'graphql-request';\nimport { Observable } from 'rxjs';\nimport { ens_normalize, ens_beautify } from '@adraffy/ens-normalize';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport {\n  DomainFiltersModel,\n  DomainMetadataModel,\n  DomainTypeEnum,\n} from 'src/app/models/domains';\nimport { invalidChars } from 'src/app/configurations';\nimport { MiscUtilsService } from '../misc-utils';\nimport { CategoryModel } from 'src/app/models/category';\nimport { ethers } from 'ethers';\n\nconst REGISTER_GAS = 175000;\nconst REGISTER_CONFIG_GAS = 300000;\nconst COMMIT_GAS = 25000;\nconst COMMIT_SINGLE_GAS = 55000;\nconst RENEW_GAS = 150000;\nconst PREPUNK_TIME = 1498176000;\nconst PREPUNK_BLOCK = 15010210;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EnsService {\n  constructor(\n    private http: HttpClient,\n    protected miscUtils: MiscUtilsService\n  ) {}\n\n  getDomainMetadata(domainHash: string) {\n    const url = environment.networks[environment.defaultChain].ensMetadataAPI;\n    return this.http.get(url + domainHash);\n  }\n\n  getDomainContentHash(provider: Provider, ethName: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .getResolver(ethName)\n        .then((resolver) => {\n          return resolver.getContentHash();\n        })\n        .then((r) => {\n          let web2Link = 'https://';\n          if (r.indexOf('ipfs:') > -1) {\n            web2Link += 'ipfs.io/ipfs/' + r.replace('ipfs://', '');\n          } else if (r.indexOf('ipns:') > -1) {\n            web2Link += 'gateway.ipfs.io/ipns/' + r.replace('ipns://', '');\n          }\n          observer.next(web2Link);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getDomainContentHashPure(provider: Provider, ethName: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .getResolver(ethName)\n        .then((resolver) => {\n          return resolver.getContentHash();\n        })\n        .then((r) => {\n          let web2Link;\n          if (r.indexOf('ipfs:') > -1) {\n            web2Link = r.replace('ipfs://', '');\n          } else if (r.indexOf('ipns:') > -1) {\n            web2Link = r.replace('ipns://', '');\n          }\n          observer.next(web2Link);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  findDomains(\n    domains: string[],\n    prepunk = false,\n    expirationDate = '4102444800',\n    registrationDate = '1262300400'\n  ) {\n    if ((expirationDate as any) === 'NaN') {\n      expirationDate = '4102444800';\n    }\n    if ((registrationDate as any) === 'NaN') {\n      registrationDate = '1262300400';\n    }\n    const url = environment.networks[environment.defaultChain].ensGraphQLAPI;\n    return new Observable((observer) => {\n      const query = gql`\n        query (\n          $domainNames: [String!]\n          $expirationDate: BigInt,\n          $registrationDate: BigInt,\n          $prePunkBlock: Int\n        ) {\n          registrations(\n            first: 1000\n            where: {\n              labelName_in: $domainNames,\n              registrationDate_gte: $registrationDate,\n              expiryDate_lte: $expirationDate ${\n                prepunk === true\n                  ? ', events_: { blockNumber_lte: $prePunkBlock }'\n                  : ''\n              }\n            }\n          ) {\n            id\n            labelName\n            expiryDate\n            registrationDate\n            domain {\n              id\n              createdAt\n              labelName\n              labelhash\n              events {\n                id\n                blockNumber\n                transactionID\n              }\n            }\n          }\n        }\n      `;\n      request(url, query, {\n        domainNames: domains,\n        prePunkBlock: PREPUNK_BLOCK,\n        registrationDate,\n        expirationDate,\n      }).then((data) => {\n        observer.next(data);\n        observer.complete();\n      });\n    });\n  }\n\n  getDomain(domain: string) {\n    const url = environment.networks[environment.defaultChain].ensGraphQLAPI;\n    return new Observable((observer) => {\n      const query = gql`\n        query ($domainName: String!) {\n          registrations(first: 1, where: { labelName: $domainName }) {\n            id\n            labelName\n            expiryDate\n            registrationDate\n            registrant {\n              id\n            }\n            domain {\n              id\n              createdAt\n              labelhash\n            }\n            events {\n              blockNumber\n              transactionID\n            }\n          }\n        }\n      `;\n      request(url, query, { domainName: domain }).then((data) => {\n        observer.next(data);\n        observer.complete();\n      });\n    });\n  }\n\n  qlResultToDomainModel(n: any, domainType: DomainTypeEnum) {\n    const gPeriod = this.calculateGracePeriodPercentage(\n      parseInt(n.expiryDate, 10)\n    );\n    const fData = {\n      id: n.domain.id.toLowerCase(),\n      labelName: n.domain.labelName.toLowerCase(),\n      labelHash: n.domain.labelhash.toLowerCase(),\n      isNotAvailable: false,\n      domainType: domainType,\n      expiry: (parseInt(n.expiryDate) * 1000).toString(),\n      gracePeriodPercent: gPeriod < -100 ? undefined : 100 - Math.abs(gPeriod),\n      registrationDate: (parseInt(n.registrationDate) * 1000).toString(),\n      createdAt: (parseInt(n.domain.createdAt) * 1000).toString(),\n    } as DomainMetadataModel;\n    return fData;\n  }\n\n  downloadDomainsListNamesOnly(domains: DomainMetadataModel[]) {\n    let finalForm = '';\n    finalForm += domains\n      .map((d) => {\n        return d.labelName;\n      })\n      .join('\\n');\n    return finalForm;\n  }\n\n  downloadDomainsListCSV(domains: DomainMetadataModel[]) {\n    let finalForm = '';\n    finalForm +=\n      Object.keys(domains[0])\n        .filter((k) => {\n          if (k === 'events') {\n            return false;\n          }\n          return true;\n        })\n        .join(',') + '\\n';\n    finalForm += domains\n      .map((d) => {\n        const k = Object.keys(d);\n        return k\n          .map((kk) => {\n            return d[kk];\n          })\n          .join(',');\n      })\n      .join('\\n');\n    return finalForm;\n  }\n\n  calculateExpiry(expiryDate: string) {\n    const eDate = parseInt(expiryDate, 10) * 1000;\n    const now = new Date().getTime();\n    const remainingDate = now - eDate;\n    return remainingDate;\n  }\n\n  calculateGracePeriodPercentage(expiryDate: number) {\n    const now = new Date().getTime();\n    const gracePeriod = 7889400000;\n    const timeUtilGraceEnds = expiryDate * 1000 + gracePeriod;\n    const gracePeriodExact = timeUtilGraceEnds - now;\n    const gInPercent = gracePeriod / 100;\n    return gracePeriodExact / gInPercent;\n  }\n\n  isDomainNameNotValid(\n    name: string,\n    prefixedOrSuffixed = false,\n    prefixedAndSuffixed = false,\n    minLengthOverride = 3,\n    skipNormalisation = false\n  ) {\n    if (skipNormalisation === true) {\n      return true;\n    }\n    let minLength = minLengthOverride;\n    if (prefixedOrSuffixed === true) {\n      minLength = 2;\n    }\n    if (prefixedAndSuffixed === true) {\n      minLength = 1;\n    }\n    try {\n      if (name === '' || this.getNameLength(name) < minLength) {\n        return false;\n      }\n      const invalidCharsForcedFilter = invalidChars.join('');\n      const invalidCharDetect = [...name].filter((c) => {\n        if (invalidCharsForcedFilter.includes(c) === true) {\n          return true;\n        }\n        return false;\n      });\n      if (invalidCharDetect.length > 0) {\n        throw false;\n      }\n      const normed = ens_normalize(name);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  performNormalisation(name: string) {\n    return ens_normalize(name);\n  }\n\n  prettify(name: string) {\n    return ens_beautify(name);\n  }\n\n  calculateDomainsPrice(\n    name: string,\n    ethToUsdRate: string,\n    durationInYears: number = 1\n  ) {\n    const ethUsdRate = parseInt(ethToUsdRate, 10);\n    let nameCost = 5;\n    const count = this.getNameLength(name);\n    switch (count) {\n      case 3:\n        {\n          nameCost = 640;\n        }\n        break;\n      case 4:\n        {\n          nameCost = 160;\n        }\n        break;\n    }\n    return parseFloat((nameCost / ethUsdRate).toFixed(4)) * durationInYears;\n  }\n\n  getNameLength(name: string) {\n    const count = [...ens_normalize(name)].length;\n    return count;\n  }\n\n  extraFilters(\n    d: DomainMetadataModel,\n    filters: DomainFiltersModel,\n    baseFilter: any\n  ) {\n    const minL = baseFilter.minLength.value;\n    const maxL = baseFilter.maxLength.value;\n    const minD = this.miscUtils.getDateToStamp(baseFilter.creation.value);\n    const regD = this.miscUtils.getDateToStamp(baseFilter.registration.value);\n    const maxD = this.miscUtils.getDateToStamp(baseFilter.expiration.value);\n    let satisfied;\n    if (minD > 0 && minD !== null && parseInt(d.createdAt, 10) < minD) {\n      return false;\n    }\n    if (regD > 0 && regD !== null && parseInt(d.registrationDate, 10) < regD) {\n      return false;\n    }\n    if (maxD > 0 && maxD !== null && parseInt(d.expiry, 10) > maxD) {\n      return false;\n    }\n    if ((d.labelName.length >= minL && d.labelName.length <= maxL) === false) {\n      return false;\n    }\n    if (\n      filters.prepunk === true &&\n      parseInt(d.createdAt) / 1000 > PREPUNK_TIME\n    ) {\n      return false;\n    }\n    if (satisfied === undefined) {\n      return true;\n    }\n    return satisfied;\n  }\n\n  extraFiltersPure(\n    d: string,\n    filters: DomainFiltersModel,\n    baseFilter: any,\n    prefixOffset: number,\n    suffixOffset: number\n  ) {\n    if (d === null || this.isDomainNameNotValid(d) === false) {\n      return false;\n    }\n    const minL = baseFilter === null ? 0 : baseFilter.minLength.value;\n    const maxL = baseFilter === null ? 100 : baseFilter.maxLength.value;\n    const contains = baseFilter === null ? '' : baseFilter.contains.value;\n    const containEmoji = filters.emoji;\n    const containAlphabet = filters.alphabet;\n    const containNumber = filters.numbers;\n    const palindrome = filters.palindrome;\n    const repeating = filters.repeating;\n    const nameLen = this.getNameLength(d);\n    let satisfied;\n    if ((nameLen >= minL && nameLen <= maxL) === false) {\n      return false;\n    }\n    let nameToCheckForOffsets = [...d]\n      .filter((r) => r.codePointAt(0) !== 8419)\n      .join('');\n    const prefixOffsetRemoved = nameToCheckForOffsets.substring(prefixOffset);\n    const suffixOffsetRemoved = prefixOffsetRemoved.substring(\n      0,\n      prefixOffsetRemoved.length - suffixOffset\n    );\n    nameToCheckForOffsets = suffixOffsetRemoved;\n    if (contains !== '') {\n      if (nameToCheckForOffsets.indexOf(contains) > -1) {\n        satisfied = true;\n      } else {\n        return false;\n      }\n    }\n    if (repeating === true) {\n      if (this.miscUtils.testRepeating(nameToCheckForOffsets) === true) {\n        satisfied = true;\n      } else {\n        return false;\n      }\n    }\n    if (palindrome === true) {\n      if (this.miscUtils.testPalindrome(nameToCheckForOffsets) === true) {\n        satisfied = true;\n      } else {\n        return false;\n      }\n    }\n    if (containEmoji === true) {\n      if (this.isEmojiInLabel(d) === true) {\n        satisfied = true;\n      } else {\n        return false;\n      }\n    }\n    if (containAlphabet === false && containNumber === false) {\n      satisfied = true;\n    } else if (containAlphabet === true && containNumber === false) {\n      if (this.isAlphabetInLabel(d) === true) {\n        satisfied = true;\n      } else {\n        return false;\n      }\n    } else if (containNumber === true && containAlphabet === true) {\n      if (this.isAlphaNumericLabel(d) === true) {\n        satisfied = true;\n      } else {\n        return false;\n      }\n    } else if (containNumber === true) {\n      if (this.isNumberInLabel(d) === true) {\n        satisfied = true;\n      } else {\n        return false;\n      }\n    }\n    if (satisfied === undefined) {\n      return true;\n    }\n    return satisfied;\n  }\n\n  getNameCategory(\n    name: string,\n    nameHash: string,\n    dataSourceSets: CategoryModel[],\n    optimisedCategoryData: any\n  ) {\n    let categoryFound;\n    for (const c of dataSourceSets) {\n      if (categoryFound !== undefined) {\n        continue;\n      }\n      const isAlpha = this.miscUtils.testAlpha().test(name);\n      const isNumeric = this.miscUtils.testIntNumeric().test(name);\n      const isEmoji = this.miscUtils.testEmoji().test(name);\n      let nameLength;\n      try {\n        nameLength = this.getNameLength(name);\n      } catch (e) {\n        nameLength = name.length;\n      }\n      const nameFirstChar = name[0];\n      const nameSecondChar = name[1];\n      const nameCodeHash = ethers.BigNumber.from(nameHash).toString();\n      const idFirstChar = nameCodeHash[0];\n      const idSecondChar = nameCodeHash[1];\n      const pattern = new RegExp(c.pattern);\n      if (isEmoji === false && c.max_length < nameLength) {\n        continue;\n      }\n      if (\n        isEmoji === true &&\n        c.patterned === false &&\n        idFirstChar in optimisedCategoryData === true &&\n        idSecondChar in optimisedCategoryData === true &&\n        optimisedCategoryData[idFirstChar][idSecondChar].includes(\n          nameCodeHash\n        ) === true\n      ) {\n        categoryFound = c.category;\n        continue;\n      }\n      if (\n        c.patterned === false &&\n        nameFirstChar in optimisedCategoryData === true &&\n        nameSecondChar in optimisedCategoryData === true &&\n        optimisedCategoryData[nameFirstChar][nameSecondChar].includes(name) ===\n          true\n      ) {\n        categoryFound = c.category;\n        continue;\n      }\n      if (c.patterned === true && pattern.test(name) === true) {\n        categoryFound = c.category;\n        continue;\n      }\n    }\n    return categoryFound;\n  }\n\n  optimiseCategoryNamesList(data: string[]) {\n    let optimised = {};\n    for (const s of data) {\n      const firstChar = s.charAt(0);\n      const secondChar = s.charAt(1);\n      if (firstChar in optimised === false) {\n        optimised[firstChar] = {};\n      }\n      if (secondChar in optimised[firstChar] === false) {\n        optimised[firstChar][secondChar] = [];\n      }\n      optimised[firstChar][secondChar].push(s);\n    }\n    return optimised;\n  }\n\n  getDataOfObject(data: any) {\n    return Object.keys(data).map((d) => data[d]);\n  }\n\n  isEmojiInLabel(label: string) {\n    return this.miscUtils.testEmoji().test(label);\n  }\n\n  isNumberInLabel(label: string) {\n    return this.miscUtils.testIntNumeric().test(label);\n  }\n\n  isAlphabetInLabel(label: string) {\n    return this.miscUtils.testAlpha().test(label);\n  }\n\n  isAlphaNumericLabel(label: string) {\n    return this.miscUtils.testAlphaNumeric().test(label);\n  }\n\n  shuffleListOfNames(arr: string[]) {\n    let currentIndex = arr.length,\n      randomIndex;\n    while (currentIndex != 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [arr[currentIndex], arr[randomIndex]] = [\n        arr[randomIndex],\n        arr[currentIndex],\n      ];\n    }\n    return arr;\n  }\n\n  get commitSingleGasCost() {\n    return COMMIT_SINGLE_GAS;\n  }\n\n  get commitGasCost() {\n    return COMMIT_GAS;\n  }\n\n  get registerGasCost() {\n    return REGISTER_GAS;\n  }\n\n  get registerWithConfigGasCost() {\n    return REGISTER_CONFIG_GAS;\n  }\n\n  get renewGasCost() {\n    return RENEW_GAS;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FormValidationService {\n  constructor() {}\n\n  markFormGroupTouched(formGroup: FormGroup) {\n    (Object as any).values(formGroup.controls).forEach((control) => {\n      control.markAsTouched();\n\n      if (control.controls) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Resolve,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { routerPaths } from 'src/app/models/router-paths.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PathResolveService implements Resolve<string | null> {\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): string | null {\n    const typoPath = state.url.replace('/', '');\n    const threshold = this.getThreshold(typoPath);\n    const dictionary = Object.values(routerPaths).filter(\n      (path) => Math.abs(path.length - typoPath.length) < threshold\n    ) as string[];\n    if (!dictionary.length) {\n      return null;\n    }\n    this.sortByDistances(typoPath, dictionary);\n    return `/${dictionary[0]}`;\n  }\n\n  getThreshold(path: string): number {\n    if (path.length < 5) {\n      return 3;\n    }\n    return 5;\n  }\n\n  sortByDistances(typoPath: string, dictionary: string[]) {\n    const pathsDistance = {} as { [name: string]: number };\n    dictionary.sort((a, b) => {\n      if (!(a in pathsDistance)) {\n        pathsDistance[a] = this.levenshtein(a, typoPath);\n      }\n      if (!(b in pathsDistance)) {\n        pathsDistance[b] = this.levenshtein(b, typoPath);\n      }\n\n      return pathsDistance[a] - pathsDistance[b];\n    });\n  }\n\n  levenshtein(a: string, b: string): number {\n    if (a.length === 0) {\n      return b.length;\n    }\n    if (b.length === 0) {\n      return a.length;\n    }\n    const matrix = [];\n    for (let i = 0; i <= b.length; i++) {\n      matrix[i] = [i];\n    }\n    for (let j = 0; j <= a.length; j++) {\n      matrix[0][j] = j;\n    }\n    for (let i = 1; i <= b.length; i++) {\n      for (let j = 1; j <= a.length; j++) {\n        if (b.charAt(i - 1) === a.charAt(j - 1)) {\n          matrix[i][j] = matrix[i - 1][j - 1];\n        } else {\n          matrix[i][j] = Math.min(\n            matrix[i - 1][j - 1] + 1,\n            matrix[i][j - 1] + 1,\n            matrix[i - 1][j] + 1\n          );\n        }\n      }\n    }\n    return matrix[b.length][a.length];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport TrezorConnect from 'trezor-connect';\nimport { MiscUtilsService } from '../misc-utils';\nimport { PagesFacadeService } from '../../store/facades';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { BigNumber, utils } from 'ethers';\nimport { generalConfigurations } from 'src/app/configurations';\n\ninterface TrezorSignedTransactionModel {\n  id: number;\n  success: boolean;\n  payload: {\n    v: string;\n    r: string;\n    s: string;\n  };\n}\n\ninterface TrezorGetAccountInfoResultModel {\n  id: number;\n  success: boolean;\n  payload: {\n    availableBalance: string;\n    balance: string;\n    descriptor: string;\n    empty: boolean;\n    history: {\n      tokens: string[];\n      total: number;\n      transactions: any[];\n      unconfirmed: number;\n    };\n    misc: {\n      nonce: string;\n    };\n  };\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrezorService {\n  constructor(\n    public miscUtils: MiscUtilsService,\n    public pagesFacade: PagesFacadeService\n  ) {}\n\n  connect(time: number) {\n    return new Observable((observer) => {\n      TrezorConnect.init({\n        lazyLoad: false,\n        webusb: true,\n        popup: true,\n        manifest: generalConfigurations.trezorManifest,\n      })\n        .then((r) => {\n          return TrezorConnect.getAccountInfo({\n            path: \"m/44'/60'/0'/0/0\",\n            coin: 'eth',\n          });\n        })\n        .then((r) => {\n          const result = r as any as TrezorGetAccountInfoResultModel;\n          if (r === undefined) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(result.payload.descriptor);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n          return;\n        });\n    });\n  }\n\n  signPayment(payload: any) {\n    return new Observable((observer) => {\n      TrezorConnect.getAccountInfo({\n        path: \"m/44'/60'/0'/0/0\",\n        coin: 'eth',\n      })\n        .then((r) => {\n          const accountInfo = r as any as TrezorGetAccountInfoResultModel;\n          return TrezorConnect.ethereumSignTransaction({\n            path: \"m/44'/60'/0'/0/0\",\n            transaction: {\n              ...payload,\n              from: accountInfo.payload.descriptor,\n              nonce: BigNumber.from(payload.nonce).toHexString(),\n            },\n          });\n        })\n        .then((r) => {\n          const signed = r as any as TrezorSignedTransactionModel;\n          if (\n            signed === null ||\n            signed.success === false ||\n            signed === undefined\n          ) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(\n            utils.serializeTransaction(payload, {\n              v: BigNumber.from(signed.payload.v).toNumber(),\n              r: signed.payload.r,\n              s: signed.payload.s,\n            })\n          );\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getWeb3Provider() {\n    return new Observable((observer) => {\n      detectEthereumProvider()\n        .then((p) => {\n          observer.next(p);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(null);\n          observer.complete();\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { icons, imageToPreload } from 'src/app/configurations';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconRegistryService {\n  constructor() {}\n\n  injectCustomIcons() {\n    return icons;\n  }\n\n  perloadCustomIcons() {\n    const ic = this.injectCustomIcons();\n    for (const i of Object.keys(ic).map((ici) => ic[ici])) {\n      const ii = new Image();\n      ii.src = i;\n    }\n    const icc = imageToPreload;\n    for (const i of Object.keys(ic).map((ici) => ic[ici])) {\n      const ii = new Image();\n      ii.src = i;\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { MiscUtilsService } from \"../../misc-utils\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PaymentEffectsService {\n  constructor(protected miscUtils: MiscUtilsService) {}\n\n  recordLastConnectionAddress(connectionAddress: string) {\n    localStorage.setItem(\"ps-last-connection\", connectionAddress);\n  }\n\n  getLastConnectionAddress() {\n    const lConnectionAddres = localStorage.getItem(\"ps-last-connection\");\n    if (\n      lConnectionAddres === null ||\n      lConnectionAddres === \"\" ||\n      lConnectionAddres === undefined\n    ) {\n      return false;\n    }\n    return lConnectionAddres;\n  }\n}\n","import { Router } from '@angular/router';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { UserFacadeService } from '../../store/facades';\n\n@Injectable({ providedIn: 'root' })\nexport class Intercept implements HttpInterceptor {\n  constructor(router: Router, public userFacade: UserFacadeService) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(req);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MiscUtilsService } from '../misc-utils';\nimport TransportUSB from '@ledgerhq/hw-transport-webusb';\nimport LedgerEth from '@ledgerhq/hw-app-eth';\nimport { PagesFacadeService, UserFacadeService } from '../../store/facades';\nimport detectEthereumProvider from '@metamask/detect-provider';\n\ninterface LedgerSignResultModel {\n  v: number;\n  r: string;\n  s: string;\n}\n\ninterface LedgerGetAddressResultModel {\n  address: string;\n  chainCode: string;\n  publicKey: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LedgerService {\n  transport: any;\n  ledger: LedgerEth;\n\n  constructor(\n    public miscUtils: MiscUtilsService,\n    public pagesFacade: PagesFacadeService,\n    protected userFacadeService: UserFacadeService\n  ) {}\n\n  connect(time: number) {\n    return new Observable((observer) => {\n      this.ledger\n        .getAddress(\"m/44'/60'/0'/0/0\")\n        .then((r) => {\n          const result = r as any as LedgerGetAddressResultModel;\n          observer.next(result.address);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n          return;\n        });\n    });\n  }\n\n  createTransport() {\n    return new Observable((observer) => {\n      TransportUSB.create().then((r: any) => {\n        if (r === false) {\n          observer.next(false);\n          observer.complete();\n          return;\n        }\n        this.transport = r;\n        this.ledger = new LedgerEth(r);\n        observer.next(this.ledger);\n        observer.complete();\n        return;\n      });\n    });\n  }\n\n  signPayment(payload: string) {\n    return new Observable((observer) => {\n      this.ledger\n        .signTransaction(\"m/44'/60'/0'/0/0\", payload.substring(2))\n        .then((r) => {\n          if (r === null || r === undefined) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          const signed = r as any as LedgerSignResultModel;\n          observer.next(signed);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getWeb3Provider() {\n    return new Observable((observer) => {\n      detectEthereumProvider()\n        .then((p) => {\n          observer.next(p);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(null);\n          observer.complete();\n        });\n    });\n  }\n}\n","export const LNRABI = [\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'symbol',\n        type: 'bytes32',\n      },\n    ],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","import { Injectable } from '@angular/core';\nimport { Contract, ethers } from 'ethers';\nimport { forkJoin, from, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { LNRContracts } from 'src/app/configurations';\nimport { LNRABI } from 'src/app/configurations/contracts/lnr.abi';\nimport { payNoMarketAddress } from 'src/app/models';\nimport { DomainMetadataModel } from 'src/app/models/domains';\n\nconst gloablAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LnrService {\n  constructor() {}\n\n  findDomains(domains: string[]) {\n    const provider = gloablAny.canvasProvider;\n    const lnr = new Contract(LNRContracts.registrar, LNRABI, provider);\n    const nameSearch = domains.map((d) => {\n      const nameBytes = ethers.utils.formatBytes32String(d);\n      return from(lnr.owner(nameBytes)).pipe(\n        switchMap((r) => {\n          if (r === false || r === payNoMarketAddress) {\n            return of(false);\n          }\n          return of({\n            id: nameBytes,\n            labelName: d,\n            labelHash: nameBytes,\n            expiry: Number.MAX_SAFE_INTEGER.toString(),\n            isNotAvailable: r !== payNoMarketAddress,\n            gracePeriodPercent: 0,\n            registrationDate: null,\n            owner: r === payNoMarketAddress ? payNoMarketAddress : r,\n            createdAt: null,\n          } as DomainMetadataModel);\n        })\n      );\n    });\n    return forkJoin(nameSearch);\n  }\n}\n","import * as Ethers from 'ethers';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { MiscUtilsService } from '../misc-utils';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { PagesFacadeService, UserFacadeService } from '../../store/facades';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { UserModel } from 'src/app/models/states/user-interfaces';\n\ndeclare const ethereum;\n@Injectable({\n  providedIn: 'root',\n})\nexport class MetamaskService {\n  constructor(\n    public miscUtils: MiscUtilsService,\n    public userFacadeService: UserFacadeService,\n    public pagesFacade: PagesFacadeService\n  ) {}\n\n  connect(time: number) {\n    return this.getAccounts().pipe(\n      switchMap((a) => {\n        const accounts = a as any;\n        if (\n          accounts === undefined ||\n          accounts === null ||\n          accounts.length <= 0\n        ) {\n          return of(false);\n        }\n        return of(a[0]);\n      }),\n      catchError((e) => {\n        return of(false);\n      })\n    );\n  }\n\n  chainChangedDetectionDaemon() {\n    ethereum.on('chainChanged', (chainId) => {\n      this.pagesFacade.setNetworkChainCode(parseInt(chainId, 16));\n    });\n    ethereum.on('accountsChanged', (accounts) => {\n      this.userFacadeService.removeUser();\n    });\n  }\n\n  getChainId() {\n    return ethereum.networkVersion;\n  }\n\n  getAccounts() {\n    return new Observable((observer) => {\n      ethereum\n        .request({ method: 'eth_requestAccounts' })\n        .then((accounts) => {\n          if (\n            accounts === null ||\n            accounts.length <= 0 ||\n            accounts === undefined\n          ) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(\n            accounts.map((a) => {\n              return Ethers.utils.getAddress(a);\n            })\n          );\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  signPayment(payloadHash: any) {\n    return new Observable((observer) => {\n      detectEthereumProvider()\n        .then((p: any) => {\n          return p.request({\n            method: 'eth_sendTransaction',\n            params: payloadHash,\n          });\n        })\n        .then((tx) => {\n          if (tx === null || tx.length <= 0 || tx === undefined) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(tx);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getWeb3Provider() {\n    return new Observable((observer) => {\n      detectEthereumProvider()\n        .then((p) => {\n          observer.next(p);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(null);\n          observer.complete();\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ethers } from 'ethers';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MiscUtilsService {\n  constructor() {}\n\n  moveArray(arr: any[], oldIndex: number, newIndex: number) {\n    if (newIndex >= arr.length) {\n      let k = newIndex - arr.length + 1;\n      while (k--) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n    return arr;\n  }\n\n  shuffleArray(arr: any) {\n    if (typeof arr === 'object') {\n      return arr;\n    }\n    let currentIndex = arr.length,\n      randomIndex;\n    while (currentIndex != 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [arr[currentIndex], arr[randomIndex]] = [\n        arr[randomIndex],\n        arr[currentIndex],\n      ];\n    }\n    return arr;\n  }\n\n  roundUp(num: number, roundTo: number) {\n    return Math.round(num / roundTo) * roundTo;\n  }\n\n  testJSON(json) {\n    const str = json.toString();\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  testUrl() {\n    const expression =\n      /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi;\n    const test = new RegExp(expression);\n    return test;\n  }\n\n  checksumEtheruemAddress(address: string) {\n    try {\n      return (\n        ethers.utils.getAddress(address).toLowerCase() === address.toLowerCase()\n      );\n    } catch (e) {\n      return false;\n    }\n  }\n\n  commafied(num: string) {\n    if (num.toString().indexOf('.') <= -1) {\n      return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    } else {\n      const parts = num.toString().split('.');\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n      return parts.join('.');\n    }\n  }\n\n  prependToArray(value: any, array: any[]) {\n    var newArray = array.slice();\n    newArray.unshift(value);\n    return newArray;\n  }\n\n  toHex(str: string) {\n    const rb = new TextEncoder().encode(str);\n    let r = '';\n    for (const b of rb) {\n      r += ('0' + b.toString(16)).slice(-2);\n    }\n    return r;\n  }\n\n  testNumeric() {\n    const reg = new RegExp(/^(0|[1-9]\\d*)(\\.\\d+)?$/);\n    return reg;\n  }\n\n  testAlphaNumeric() {\n    const reg = new RegExp('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$');\n    return reg;\n  }\n\n  testAlpha() {\n    const reg = new RegExp('^[A-Za-z]+$');\n    return reg;\n  }\n\n  testEmoji() {\n    const reg = new RegExp(/\\p{Extended_Pictographic}/u);\n    return reg;\n  }\n\n  testIntNumeric() {\n    const reg = new RegExp('^[0-9]+$');\n    return reg;\n  }\n\n  testPalindrome(str: string) {\n    const len = str.length;\n    for (let i = 0; i < len / 2; i++) {\n      if (str[i] !== str[len - 1 - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  testRepeating(str: string) {\n    const chars = [...new Set(str)];\n    return chars.length === 1;\n  }\n\n  parseXml(xml) {\n    var dom = null;\n    try {\n      dom = new DOMParser().parseFromString(xml, 'text/xml');\n    } catch (e) {\n      dom = null;\n    }\n    return dom;\n  }\n\n  getDateToStamp(date: string) {\n    if (date === '') {\n      return null;\n    }\n    const d = new Date(date);\n    return d.getTime();\n  }\n}\n","export enum PaymentStoreErrorsEnum {\n  UNKOWN = \"UNKNOWN_PAYMENT\",\n  NO_NETWORK_CONNECTION = \"NO_NETWORK_CONNECTION\",\n  QRSCANNER_CAMERA_NO_PERMISSION = \"QRSCANNER_CAMERA_NO_PERMISSION\",\n  QRSCANNED_RESULT_ERROR = \"QRSCANNED_RESULT_ERROR\",\n  QRSCAN_CANCELLED = \"QRSCAN_CANCELLED\",\n  PIN_INVALID = \"PIN_INVALID\",\n  SIGNING_PAYMENT_ERROR = \"SIGNING_PAYMENT_ERROR\",\n  QRSCANNED_WALLET_ADDRESS_INVALID = \"QRSCANNED_WALLET_ADDRESS_INVALID\",\n  PAYMENT_RELAY_FAILED = \"PAYMENT_RELAY_FAILED\",\n  PAYMENT_FAILED_AMOUNT_ZERO = \"PAYMENT_FAILED_AMOUNT_ZERO\",\n  PAYMENT_FAILED_INSUFFICIENT_FUNDS = \"PAYMENT_FAILED_INSUFFICIENT_FUNDS\",\n  PAYMENT_FAILED_EXPIRED = \"PAYMENT_FAILED_EXPIRED\",\n  PAYMENT_FAILED_TOKEN_NOT_SUPPORTED = \"PAYMENT_FAILED_TOKEN_NOT_SUPPORTED\",\n  PAYMENT_FAILED_UNKNOWN = \"PAYMENT_FAILED_UNKNOWN\",\n  PAYMENT_FAILED_SIGNATURE_INVALID = \"PAYMENT_FAILED_SIGNATURE_INVALID\",\n  PAYMENT_FAILED_PAYEE_ADDRESS_INVALID = \"PAYMENT_FAILED_PAYEE_ADDRESS_INVALID\",\n  PAYMENT_FAILED_WITHDRAW_FAILURE = \"PAYMENT_FAILED_WITHDRAW_FAILURE\",\n  PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE = \"PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE\",\n  PAYMENT_FAILED_WALLET_RECOVERY_FAILURE = \"PAYMENT_FAILED_WALLET_RECOVERY_FAILURE\",\n  PAYMENT_FAILED_EXCHANGE_CURRENCIES_DUPLICATE = \"PAYMENT_FAILED_EXCHANGE_CURRENCIES_DUPLICATE\",\n  PAYMENT_FAILED_INSUFFICIENT_LIQUIDITY = \"PAYMENT_FAILED_INSUFFICIENT_LIQUIDITY\",\n  PAYMENT_FAILED_NONCE_COLLUSION = \"PAYMENT_FAILED_NONCE_COLLUSION\",\n  PAYMENT_FAILED_SERVER_BUSY = \"PAYMENT_FAILED_SERVER_BUSY\",\n  PAYMENT_FAILED_MARKET_CLOSED = \"PAYMENT_FAILED_MARKET_CLOSED\",\n  PAYMENT_FAILED_WALLET_ID_TAKEN = \"PAYMENT_FAILED_WALLET_ID_TAKEN\",\n  PAYMENT_FAILED_MARKET_NOT_SUPPORTED = \"PAYMENT_FAILED_MARKET_NOT_SUPPORTED\",\n  PAYMENT_FAILED_MULTISIG_QUORUM_FAILED = \"PAYMENT_FAILED_MULTISIG_QUORUM_FAILED\",\n  PAYMENT_FAILED_MULTISIG_STORAGE_FULL = \"PAYMENT_FAILED_MULTISIG_STORAGE_FULL\",\n  PAYMENT_FAILED_MULTISIG_NO_ENTRY = \"PAYMENT_FAILED_MULTISIG_NO_ENTRY\",\n  PAYMENT_HISTORY_REMOVAL_FAILED = \"PAYMENT_HISTORY_REMOVAL_FAILED\",\n  PAYMENT_FAILED_ALREADY_FULFILLED = \"PAYMENT_FAILED_ALREADY_FULFILLED\",\n}\n","import { Injectable } from \"@angular/core\";\nimport { PaymentStoreErrorsEnum } from \"../../models/error-enums\";\nimport { PaymentErrorCodes } from \"../../models/states/payment-interfaces\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PaymentErrorService {\n  constructor() {}\n\n  getPaymentErrorTranslatedTextKey(paymentError: PaymentStoreErrorsEnum) {\n    switch (paymentError) {\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_AMOUNT_ZERO:\n        {\n          return \"ERRORS.PAYMENT_FAILED_INSUFFICIENT_FUNDS\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_INSUFFICIENT_FUNDS:\n        {\n          return \"ERRORS.PAYMENT_FAILED_INSUFFICIENT_FUNDS\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_EXPIRED:\n        {\n          return \"ERRORS.PAYMENT_FAILED_EXPIRED\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_UNKNOWN:\n        {\n          return \"ERRORS.PAYMENT_FAILED_UNKNOWN\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_TOKEN_NOT_SUPPORTED:\n        {\n          return \"ERRORS.PAYMENT_FAILED_TOKEN_NOT_SUPPORTED\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE:\n        {\n          return \"ERRORS.PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_SIGNATURE_INVALID:\n        {\n          return \"ERRORS.PAYMENT_FAILED_SIGNATURE_INVALID\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_WITHDRAW_FAILURE:\n        {\n          return \"ERRORS.PAYMENT_FAILED_WITHDRAW_FAILURE\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_WALLET_ID_TAKEN:\n        {\n          return \"ERRORS.PAYMENT_FAILED_WALLET_ID_TAKEN\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_MULTISIG_QUORUM_FAILED:\n        {\n          return \"ERRORS.PAYMENT_FAILED_MULTISIG_QUORUM_FAILED\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_MULTISIG_STORAGE_FULL:\n        {\n          return \"ERRORS.PAYMENT_FAILED_MULTISIG_STORAGE_FULL\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_MULTISIG_NO_ENTRY:\n        {\n          return \"ERRORS.PAYMENT_FAILED_MULTISIG_NO_ENTRY\";\n        }\n        break;\n    }\n  }\n  getPaymentErrorEnumKey(errorCode: PaymentErrorCodes) {\n    switch (errorCode) {\n      case PaymentErrorCodes.AMOUNT_ZERO:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_AMOUNT_ZERO;\n        }\n        break;\n      case PaymentErrorCodes.INSUFFICIENT_FUNDS:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_INSUFFICIENT_FUNDS;\n        }\n        break;\n      case PaymentErrorCodes.PAYMENT_EXPIRED:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_EXPIRED;\n        }\n        break;\n      case PaymentErrorCodes.PAYMENT_FAILURE:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_UNKNOWN;\n        }\n        break;\n      case PaymentErrorCodes.TOKEN_NOT_SUPPORTED:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_TOKEN_NOT_SUPPORTED;\n        }\n        break;\n      case PaymentErrorCodes.SIGNATURE_INVALID:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE;\n        }\n        break;\n      case PaymentErrorCodes.MARKET_NOT_SUPPORTED:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_MARKET_NOT_SUPPORTED;\n        }\n        break;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PaymentModel } from 'src/app/models/states/payment-interfaces';\n\nconst globalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentStorageService {\n  constructor() {}\n\n  get networkName() {\n    return globalAny.networkName;\n  }\n\n  removePayments() {\n    localStorage.removeItem('canvas-payments-data');\n  }\n\n  savePayments(paymentData: PaymentModel[]) {\n    localStorage.setItem('canvas-payments-data', JSON.stringify(paymentData));\n  }\n\n  loadPayments() {\n    const l = localStorage.getItem('canvas-payments-data');\n    if (l === null || l === '[]' || l === '') {\n      return false;\n    }\n    return JSON.parse(l);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UserService } from '../user';\nimport { CurrencyService } from '../currency';\nimport { WalletService } from '../wallet';\nimport { PaymentModel } from 'src/app/models/states/payment-interfaces';\nimport { Observable } from 'rxjs';\nimport { BigNumber, ethers } from 'ethers';\nimport { Provider } from '@ethersproject/abstract-provider';\n\nconst globalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentService {\n  constructor(\n    protected userService: UserService,\n    protected currencyService: CurrencyService,\n    protected walletService: WalletService\n  ) {}\n\n  prepareTransaction(\n    chainId: number,\n    nonce: number,\n    toAddress: string,\n    gasLimit: string,\n    gasPrice: string,\n    payment: PaymentModel\n  ) {\n    const paymentLoad = {\n      chainId: chainId,\n      nonce: nonce,\n      to: toAddress,\n      gasPrice: gasPrice,\n      gas: gasLimit,\n      value: payment.paymentTotal,\n      data: payment.paymentAbstractBytesSlot,\n    };\n    return paymentLoad;\n  }\n\n  resolveAddressOfEth(provider: Provider, walletAddress: string) {\n    return new Observable((observer) => {\n      provider.resolveName(walletAddress).then((n) => {\n        observer.next(n);\n        observer.complete();\n      });\n    });\n  }\n\n  getWalletNonce(provider: Provider, walletAddress: string) {\n    return new Observable((observer) => {\n      provider.getTransactionCount(walletAddress).then((n) => {\n        observer.next(n);\n        observer.complete();\n      });\n    });\n  }\n\n  getGasPrice(provider: Provider) {\n    return new Observable((observer) => {\n      provider\n        .getFeeData()\n        .then((feeData) => {\n          observer.next(feeData);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gql, request } from 'graphql-request';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PoapService {\n  constructor() {}\n\n  getPoaps(walletAddress: string) {\n    const url = environment.networks[environment.defaultChain].poapGraphQLAPI;\n    return new Observable((observer) => {\n      const query = gql`\n        query ($id: String!) {\n          accounts(where: { id: $id }) {\n            id\n            tokens {\n              id\n              event {\n                id\n              }\n            }\n          }\n        }\n      `;\n      request(url, query, { id: walletAddress.toLowerCase() }).then((data) => {\n        observer.next(data);\n        observer.complete();\n      });\n    });\n  }\n\n  getPoapIds(poapResult: any) {\n    if ('accounts' in poapResult === false) {\n      return false;\n    }\n    if (poapResult.accounts.length <= 0) {\n      return false;\n    }\n    return poapResult.accounts[0].tokens.map((t) => {\n      return t.event.id;\n    });\n  }\n\n  getPoapTokens(poapResult: any) {\n    if ('accounts' in poapResult === false) {\n      return false;\n    }\n    if (poapResult.accounts.length <= 0) {\n      return false;\n    }\n    return poapResult.accounts[0].tokens;\n  }\n\n  getPoapTokensByPoapId(poapTokens: any, poapId) {\n    if (\n      poapTokens === false ||\n      poapTokens === undefined ||\n      poapTokens.length <= 0\n    ) {\n      return false;\n    }\n    return poapTokens\n      .filter((t) => {\n        return t.event.id === poapId;\n      })\n      .map((t) => {\n        return t.id;\n      });\n  }\n}\n","export const ENSBulkRegistrationContractMainnetABI = [\n  {\n    inputs: [],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'errorInfo',\n        type: 'bytes',\n      },\n    ],\n    name: 'error',\n    type: 'event',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'receive',\n    payable: true,\n  },\n  {\n    inputs: [],\n    name: 'recoverStuckETH',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'string',\n            name: 'name',\n            type: 'string',\n          },\n          {\n            internalType: 'address',\n            name: 'owner',\n            type: 'address',\n          },\n          {\n            internalType: 'uint256',\n            name: 'duration',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'secret',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'address',\n            name: 'resolver',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes[]',\n            name: 'data',\n            type: 'bytes[]',\n          },\n          {\n            internalType: 'bool',\n            name: 'reverseRecord',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint32',\n            name: 'fuses',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'wrapperExpiry',\n            type: 'uint64',\n          },\n        ],\n        internalType: 'struct ENSCommitment.Commitment[]',\n        name: 'commitments',\n        type: 'tuple[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bool',\n        name: 'withConfigs',\n        type: 'bool',\n      },\n    ],\n    name: 'createCommitmentsForRegistration',\n    outputs: [\n      {\n        internalType: 'bytes32[]',\n        name: '',\n        type: 'bytes32[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32[]',\n        name: 'commitments',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'requestRegistration',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'completeRegistration',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'completeRegistrationWithConfigs',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'getPriceRanges',\n    outputs: [\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n];\n","export const ENSBulkRegistrationContractTestnetABI = [\n  {\n    inputs: [],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'errorInfo',\n        type: 'bytes',\n      },\n    ],\n    name: 'error',\n    type: 'event',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'receive',\n    payable: true,\n  },\n  {\n    inputs: [],\n    name: 'recoverStuckETH',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'string',\n            name: 'name',\n            type: 'string',\n          },\n          {\n            internalType: 'address',\n            name: 'owner',\n            type: 'address',\n          },\n          {\n            internalType: 'uint256',\n            name: 'duration',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'secret',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'address',\n            name: 'resolver',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes[]',\n            name: 'data',\n            type: 'bytes[]',\n          },\n          {\n            internalType: 'bool',\n            name: 'reverseRecord',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint32',\n            name: 'fuses',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'wrapperExpiry',\n            type: 'uint64',\n          },\n        ],\n        internalType: 'struct ENSCommitment.Commitment[]',\n        name: 'commitments',\n        type: 'tuple[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bool',\n        name: 'withConfigs',\n        type: 'bool',\n      },\n    ],\n    name: 'createCommitmentsForRegistration',\n    outputs: [\n      {\n        internalType: 'bytes32[]',\n        name: '',\n        type: 'bytes32[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32[]',\n        name: 'commitments',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'requestRegistration',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'completeRegistration',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'completeRegistrationWithConfigs',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'getPriceRanges',\n    outputs: [\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n];\n","import { ens_normalize, ens_tokenize } from '@adraffy/ens-normalize';\nimport { Injectable } from '@angular/core';\nimport { BigNumber, Contract, ethers } from 'ethers';\nimport { Observable, of } from 'rxjs';\nimport {\n  bulkRegistrationMainnet,\n  bulkRegistrationTestnet,\n  generalConfigurations,\n} from 'src/app/configurations';\nimport { ENSBulkRegistrationContractMainnetABI } from 'src/app/configurations/contracts/ens-bulk-registration-mainnet.abi';\nimport { ENSBulkRegistrationContractTestnetABI } from 'src/app/configurations/contracts/ens-bulk-registration-testnet.abi';\nimport { payNoMarketAddress } from 'src/app/models';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport {\n  ENSRegistrationCommitmentModel,\n  ENSRegistrationCommmitmentRequestResultModel,\n} from 'src/app/models/states/ens-registration-interfaces';\nimport { environment } from 'src/environments/environment';\nimport { ContractService } from '../contract';\nimport { EnsService } from '../ens';\nimport { MiscUtilsService } from '../misc-utils';\nimport { PaymentService } from '../payment';\n\nconst gloalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegistrationFacilityService {\n  constructor(\n    protected miscUtilsService: MiscUtilsService,\n    protected paymentService: PaymentService,\n    protected ensService: EnsService,\n    protected contractService: ContractService\n  ) {}\n\n  registrationDomainsToCommitmentPacket(\n    owner: string,\n    duration: number,\n    secret: string,\n    resolver: string,\n    commitments: DomainMetadataModel[]\n  ) {\n    let compiled = [];\n    for (const c of commitments) {\n      const nc = {\n        name: c.labelName,\n        owner: owner,\n        duration: BigNumber.from(duration),\n        secret: secret,\n        resolver: resolver,\n        data: [],\n        reverseRecord: resolver !== payNoMarketAddress ? true : false,\n        fuses: 0,\n        wrapperExpiry: 0,\n        metadata: c,\n      } as ENSRegistrationCommitmentModel;\n      compiled.push(nc);\n    }\n    return compiled;\n  }\n\n  commitmentPacketToRegistrationDomains(\n    commitments: ENSRegistrationCommitmentModel[]\n  ) {\n    let decompiled = [];\n    for (const c of commitments) {\n      const nc = c.metadata as DomainMetadataModel;\n      decompiled.push(nc);\n    }\n    return decompiled;\n  }\n\n  createRegistrationCommitmentPacket(\n    commitments: ENSRegistrationCommitmentModel[],\n    payer: string,\n    provider\n  ) {\n    const contract = this.getEnsBulkRegistrationContract(provider);\n    const comitmentsPrepared = [];\n    for (const c of commitments) {\n      const nCP = [\n        c.name,\n        c.owner,\n        c.duration,\n        c.secret,\n        c.resolver,\n        c.data,\n        c.reverseRecord,\n        c.fuses,\n        c.wrapperExpiry,\n      ] as any;\n      nCP.name = c.name;\n      nCP.owner = c.owner;\n      nCP.duration = c.duration;\n      nCP.secret = c.secret;\n      nCP.resolver = c.resolver;\n      nCP.data = c.data;\n      nCP.reverseRecord = c.reverseRecord;\n      nCP.fuses = c.fuses;\n      nCP.wrapperExpiry = c.wrapperExpiry;\n      comitmentsPrepared.push(nCP);\n    }\n    const isResolverSet = comitmentsPrepared[0].resolver !== payNoMarketAddress;\n    const duration = comitmentsPrepared[0].duration;\n    let commitmentResult, gasLimit;\n    return new Observable((observer) => {\n      contract\n        .createCommitmentsForRegistration(\n          comitmentsPrepared,\n          duration,\n          isResolverSet\n        )\n        .then((r) => {\n          commitmentResult = r;\n          return this.contractService\n            .getGasLimitEstimation(\n              provider,\n              'requestRegistration',\n              [commitmentResult[0]],\n              payer,\n              this.bulkRegistrationContractAddress,\n              this.BulkRegistrationContractABI\n            )\n            .toPromise()\n            .catch((e) => {\n              return null;\n            });\n        })\n        .then((r) => {\n          if (\n            r === false ||\n            r === null ||\n            commitmentResult === false ||\n            commitmentResult === null\n          ) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = r as BigNumber;\n          let range = 0;\n          const priceRanges = commitmentResult[1].map((p) => {\n            const rangeP = ethers.BigNumber.from(p)\n              .mul(generalConfigurations.maxTotalCostBuffer[range])\n              .div(100);\n            range++;\n            return rangeP;\n          });\n          observer.next([\n            {\n              commitments: commitmentResult[0],\n              priceRanges: priceRanges,\n            } as ENSRegistrationCommmitmentRequestResultModel,\n            gasLimit,\n          ]);\n          observer.complete();\n          return;\n        });\n    });\n  }\n\n  createRegistrationRequestPaymentPacket(\n    commitmentsPrepared: string[],\n    provider\n  ) {\n    const contract = this.getEnsBulkRegistrationContract(provider);\n    const dataInput = contract.interface.encodeFunctionData(\n      'requestRegistration',\n      [commitmentsPrepared]\n    );\n    return dataInput;\n  }\n\n  decodeRegistrationPacket(abstractData: string, value: BigNumber) {\n    const contract = this.getEnsBulkRegistrationContract();\n    const dataInput = contract.interface.parseTransaction({\n      data: abstractData,\n      value,\n    });\n    return dataInput;\n  }\n\n  completeRegistration(\n    commitments: ENSRegistrationCommitmentModel[],\n    payer: string,\n    priceRanges: string[],\n    totalCost: string,\n    provider\n  ) {\n    const contract = this.getEnsBulkRegistrationContract(provider);\n    const names = [];\n    const namesLengths = [];\n    const secret = commitments[0].secret;\n    const resolver = commitments[0].resolver;\n    const owner = commitments[0].owner;\n    const duration = commitments[0].duration;\n    for (const c of commitments) {\n      names.push(c.name);\n      namesLengths.push(this.ensService.getNameLength(c.name));\n    }\n    const dataMethod =\n      commitments[0].resolver === payNoMarketAddress\n        ? 'completeRegistration'\n        : 'completeRegistrationWithConfigs';\n    const dataParams =\n      commitments[0].resolver === payNoMarketAddress\n        ? [names, namesLengths, priceRanges, owner, duration, secret]\n        : [names, namesLengths, priceRanges, duration, secret, resolver, owner];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    if (names.length === 1) {\n      return of([\n        dataInput,\n        ethers.BigNumber.from(\n          commitments[0].resolver === payNoMarketAddress ? '300000' : '350000'\n        ),\n      ]);\n    }\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          this.bulkRegistrationContractAddress,\n          this.BulkRegistrationContractABI,\n          false,\n          totalCost\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = (r as BigNumber).add(generalConfigurations.gasLimitBuffer);\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getEnsBulkRegistrationContract(provider = null) {\n    const c = new Contract(\n      this.bulkRegistrationContractAddress,\n      this.BulkRegistrationContractABI,\n      provider\n    );\n    return c;\n  }\n\n  get BulkRegistrationContractABI() {\n    if (environment.test === true) {\n      return ENSBulkRegistrationContractTestnetABI;\n    }\n    return ENSBulkRegistrationContractMainnetABI;\n  }\n\n  get bulkRegistrationContractAddress() {\n    if (environment.test === true) {\n      return bulkRegistrationTestnet;\n    }\n    return bulkRegistrationMainnet;\n  }\n}\n","export const EnsTestnetABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'NewOwner',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n    ],\n    name: 'NewResolver',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'NewTTL',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setRecord',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setSubnodeRecord',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'setSubnodeOwner',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n    ],\n    name: 'setResolver',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'setOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setTTL',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'ttl',\n    outputs: [\n      {\n        internalType: 'uint64',\n        name: '',\n        type: 'uint64',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'recordExists',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","export const EnsABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'NewOwner',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n    ],\n    name: 'NewResolver',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'NewTTL',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setRecord',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setSubnodeRecord',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'setSubnodeOwner',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n    ],\n    name: 'setResolver',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'setOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setTTL',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'ttl',\n    outputs: [\n      {\n        internalType: 'uint64',\n        name: '',\n        type: 'uint64',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'recordExists',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","export const EnsRegistrarControllerTestnetABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'cost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'expires',\n        type: 'uint256',\n      },\n    ],\n    name: 'NameRegistered',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'cost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'expires',\n        type: 'uint256',\n      },\n    ],\n    name: 'NameRenewed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oracle',\n        type: 'address',\n      },\n    ],\n    name: 'NewPriceOracle',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'rentPrice',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'valid',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'available',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'makeCommitment',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'makeCommitmentWithConfig',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'commitment',\n        type: 'bytes32',\n      },\n    ],\n    name: 'commit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'register',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'registerWithConfig',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'renew',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n];\n","export const EnsRegistrarControllerABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'cost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'expires',\n        type: 'uint256',\n      },\n    ],\n    name: 'NameRegistered',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'cost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'expires',\n        type: 'uint256',\n      },\n    ],\n    name: 'NameRenewed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oracle',\n        type: 'address',\n      },\n    ],\n    name: 'NewPriceOracle',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'rentPrice',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'valid',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'available',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'makeCommitment',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'makeCommitmentWithConfig',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'commitment',\n        type: 'bytes32',\n      },\n    ],\n    name: 'commit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'register',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'registerWithConfig',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'renew',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n];\n","import { Injectable } from '@angular/core';\nimport { Contract, ethers } from 'ethers';\nimport { ENSContracts } from 'src/app/configurations';\nimport { EnsTestnetABI } from 'src/app/configurations/contracts/ens-abi-testnet.model';\nimport { EnsABI } from 'src/app/configurations/contracts/ens-abi.model';\nimport { EnsRegistrarControllerTestnetABI } from 'src/app/configurations/contracts/ens-registrar-controller-abi-testnet.model';\nimport { EnsRegistrarControllerABI } from 'src/app/configurations/contracts/ens-registrar-controller-abi.model';\nimport { payNoMarketAddress } from 'src/app/models';\nimport { ENSEventModel, EnsEventsEnum } from 'src/app/models/ens';\nimport { environment } from 'src/environments/environment';\n\nexport const registrationTopic =\n  '0xca6abbe9d7f11422cb6ca7629fbf6fe9efb1c621f71ce8f02b9f2a230097404f';\nexport const nameRenewedTopicHash =\n  '0x3da24c024582931cfaf8267d8ed24d13a82a8068d5bd337d30ec45cea4e506ae';\nexport const martketSaleTopics = {\n  SEAPORT: '0xc4109843e0b7d514e4c093114b863f8e7d8d9a458c372cd51bfe526b588006c9',\n  RARIBLE: '0x9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f31',\n  X2Y2: '0xe2c49856b032c255ae7e325d18109bc4e22a2804e2e49a017ec0f59f19cd447b',\n  LOOKSRARE:\n    '0x95fb6205e23ff6bda16a2d1dba56b9ad7c783f67c96fa149785052f47696f2be',\n};\nexport enum SortableMarkets {\n  SEAPORT = 'SEAPORT',\n  RARIBLE = 'RARIBLE',\n  X2Y2 = 'X2Y2',\n  LOOKSRARE = 'LOOKSrare',\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegistrationDataService {\n  constructor() {}\n\n  resolevTxType(relatedNameLabelHash: string, owner: string, tx: any) {\n    const marketTopics = Object.values(martketSaleTopics);\n    const markets = Object.keys(martketSaleTopics);\n    let qualifiedTx = tx.logs.filter((e) => {\n      if (marketTopics.filter((t) => e.topics.includes(t)).length > 0) {\n        return true;\n      }\n      if (\n        e.topics.includes(owner) ||\n        e.topics.includes(relatedNameLabelHash) ||\n        e.topics.includes(ENSContracts.registrarController)\n      ) {\n        return true;\n      }\n      return false;\n    });\n    let resolvedEventType: ENSEventModel[] = [];\n    const labelHashInHex =\n      ethers.BigNumber.from(relatedNameLabelHash).toHexString();\n    const paymentNoAddressBytes =\n      ethers.BigNumber.from(payNoMarketAddress).toHexString();\n    for (const e of qualifiedTx) {\n      const topicNormalised = e.topics.map((x) => {\n        return ethers.BigNumber.from(x).toHexString();\n      });\n      if (marketTopics.includes(topicNormalised[0])) {\n        const whichMarket = markets[marketTopics.indexOf(topicNormalised[0])];\n        const marketBuyer = this.getMarketBuyer(\n          SortableMarkets[whichMarket],\n          e,\n          topicNormalised,\n          tx\n        );\n        const marketSeller = this.getMarketSeller(\n          SortableMarkets[whichMarket],\n          e,\n          topicNormalised,\n          tx\n        );\n        resolvedEventType.push({\n          type: EnsEventsEnum.SALE,\n          from: marketSeller.toLowerCase(),\n          to: marketBuyer.toLowerCase(),\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      } else if (\n        (topicNormalised[1] ===\n          ENSContracts.registrarController.toLowerCase() &&\n          topicNormalised[2] !== paymentNoAddressBytes) ||\n        (topicNormalised[0] === registrationTopic &&\n          topicNormalised[1] === labelHashInHex &&\n          topicNormalised[2] === owner)\n      ) {\n        const registrant = topicNormalised[2];\n        resolvedEventType.push({\n          type: EnsEventsEnum.REGISTRATION,\n          from: ENSContracts.registrarController.toLowerCase(),\n          to: registrant.toLowerCase(),\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      } else if (\n        (topicNormalised[1] === paymentNoAddressBytes &&\n          topicNormalised[2] ===\n            ENSContracts.registrarController.toLowerCase()) ||\n        (topicNormalised[1] === paymentNoAddressBytes &&\n          topicNormalised[2] === owner)\n      ) {\n        resolvedEventType.push({\n          type: EnsEventsEnum.MINT,\n          from: null,\n          to: ENSContracts.registrarController.toLowerCase(),\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      } else if (topicNormalised[2] === paymentNoAddressBytes) {\n        resolvedEventType.push({\n          type: EnsEventsEnum.BURN,\n          from: topicNormalised[1],\n          to: null,\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      } else if (\n        topicNormalised[1] !== ENSContracts.registrarController.toLowerCase() &&\n        topicNormalised[1] !== paymentNoAddressBytes &&\n        topicNormalised[2] !== ENSContracts.registrarController.toLowerCase() &&\n        topicNormalised[2] !== paymentNoAddressBytes &&\n        topicNormalised[1].length === 42 &&\n        topicNormalised[2].length === 42\n      ) {\n        resolvedEventType.push({\n          type: EnsEventsEnum.TRANSFER,\n          from: topicNormalised[1].toLowerCase(),\n          to: topicNormalised[2].toLowerCase(),\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      }\n    }\n    const uniqueSet = new Set();\n    let filteredEvents = resolvedEventType;\n    if (resolvedEventType.map((re) => re.type).includes(EnsEventsEnum.SALE)) {\n      filteredEvents = resolvedEventType.filter((r) => {\n        if (r.type === EnsEventsEnum.SALE) {\n          return true;\n        }\n        return false;\n      });\n    }\n    return filteredEvents.filter((r) => {\n      const isDuplicate = uniqueSet.has(r.type + r.txHash);\n      uniqueSet.add(r.type + r.txHash);\n      if (isDuplicate === false) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  txValueToEther(value: string) {\n    return parseFloat(\n      ethers.utils.formatEther(ethers.BigNumber.from(value).toString())\n    ).toFixed(5);\n  }\n\n  getMarketBuyer(\n    market: SortableMarkets,\n    eventWholeData: any,\n    event: any,\n    tx: any\n  ) {\n    switch (market) {\n      case SortableMarkets.SEAPORT:\n        {\n          return event[2];\n        }\n        break;\n      case SortableMarkets.LOOKSRARE:\n        {\n          return tx.from;\n        }\n        break;\n      case SortableMarkets.RARIBLE:\n        {\n          return tx.from;\n        }\n        break;\n      case SortableMarkets.X2Y2:\n        {\n          return tx.from;\n        }\n        break;\n    }\n  }\n\n  getMarketSeller(\n    market: SortableMarkets,\n    eventWholeData: any,\n    event: any,\n    tx: any\n  ) {\n    switch (market) {\n      case SortableMarkets.SEAPORT:\n        {\n          return event[1];\n        }\n        break;\n      case SortableMarkets.LOOKSRARE:\n        {\n          return event[2];\n        }\n        break;\n      case SortableMarkets.RARIBLE:\n        {\n          return event[1];\n        }\n        break;\n      case SortableMarkets.X2Y2:\n        {\n          const data = eventWholeData.data.substring(2).match(/.{1,64}/g);\n          return ethers.BigNumber.from('0x' + data[2]).toHexString();\n        }\n        break;\n    }\n  }\n\n  getENSContract(provider) {\n    const contract = new Contract(\n      ENSContracts.registrar,\n      this.ensContractABI,\n      provider\n    );\n    return contract;\n  }\n\n  getENSRegistrarControllerContract(provider) {\n    const contract = new Contract(\n      ENSContracts.registrarController,\n      this.ensRegistrarControllerContractABI,\n      provider\n    );\n    return contract;\n  }\n\n  get ensRegistrarControllerContractABI() {\n    if (environment.test === true) {\n      return EnsRegistrarControllerTestnetABI;\n    }\n    return EnsRegistrarControllerABI;\n  }\n\n  get ensContractABI() {\n    if (environment.test === true) {\n      return EnsTestnetABI;\n    }\n    return EnsABI;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DomainMetadataModel } from 'src/app/models/domains';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegistrationServiceService {\n  constructor(protected snackBar: MatSnackBar) {}\n\n  countRegistrations() {\n    const rs = this.loadRegistrationsAndFeed();\n    return rs.length;\n  }\n\n  loadRegistrations() {\n    return localStorage.getItem('canvas-registrations');\n  }\n\n  loadRegistrationsAndFeed() {\n    const sRegistrations = this.loadRegistrations();\n    if (\n      sRegistrations !== null &&\n      sRegistrations !== 'null' &&\n      sRegistrations !== '' &&\n      sRegistrations !== '[]'\n    ) {\n      return JSON.parse(sRegistrations);\n    }\n    return [];\n  }\n\n  saveAllRegistrations(domainsData: DomainMetadataModel[]) {\n    const registrationsRaw = this.loadRegistrationsAndFeed().reduce(\n      (accumulator, value) => {\n        return { ...accumulator, [value.labelName]: value };\n      },\n      {}\n    );\n    const bKeys = Object.keys(registrationsRaw);\n    let registrations = [...new Set(bKeys)].map((k) => registrationsRaw[k]);\n    registrations = registrations.concat(domainsData);\n    localStorage.setItem('canvas-registrations', JSON.stringify(registrations));\n    return registrations;\n  }\n\n  saveRegistrations(domainData: DomainMetadataModel) {\n    const registrationsRaw = this.loadRegistrationsAndFeed().reduce(\n      (accumulator, value) => {\n        return { ...accumulator, [value.labelName]: value };\n      },\n      {}\n    );\n    const bKeys = Object.keys(registrationsRaw);\n    const registrations = [...new Set(bKeys)].map((k) => registrationsRaw[k]);\n    registrations.push(domainData);\n    localStorage.setItem('canvas-registrations', JSON.stringify(registrations));\n    return registrations;\n  }\n\n  removeRegistration(registrations: DomainMetadataModel[], domainName: string) {\n    const registrationsUpdated = [];\n    registrations.filter((d) => {\n      if (d.labelName !== domainName) {\n        registrationsUpdated.push(d);\n      }\n    });\n    localStorage.setItem(\n      'canvas-registrations',\n      JSON.stringify(registrationsUpdated)\n    );\n    return registrationsUpdated;\n  }\n\n  removeAllRegistrations() {\n    return localStorage.setItem('canvas-registrations', '');\n  }\n\n  isDomainOnRegistrationList(\n    registrations: DomainMetadataModel[],\n    domainName: string\n  ) {\n    for (const d of registrations) {\n      if (d.labelName === domainName) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from './translation.service';\n\n@Pipe({\n  name: 'translate',\n})\nexport class TranslationPipe implements PipeTransform {\n  constructor(public translationService: TranslationService) {}\n  transform(value: any): any {\n    if (!value || value === undefined || value.length <= 0) {\n      return null;\n    }\n    const language = this.translationService.getLanguage();\n    const translations = this.translationService.getTranslation(language);\n    const keysSplit = value.split('.');\n    if (value.indexOf('.') <= -1 && value in translations.default) {\n      return translations.default[value];\n    }\n    let currentKey;\n    for (const key of keysSplit) {\n      if (!currentKey) {\n        if (key in translations.default === false) {\n          return value;\n        }\n        currentKey = translations.default[key];\n      } else {\n        if (key in currentKey === false) {\n          return value;\n        }\n        currentKey = currentKey[key];\n      }\n    }\n    return currentKey;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { generalConfigurations, validTranslations } from '../../configurations';\nimport { ValidLangEnum } from '../../models';\n\ndeclare const navigator: any;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TranslationService {\n  getTranslation(lang: ValidLangEnum) {\n    if (\n      lang in validTranslations === false ||\n      validTranslations[lang] === undefined\n    ) {\n      return validTranslations.en;\n    }\n    return validTranslations[lang];\n  }\n\n  getLanguage() {\n    const savedLanguage = this.loadLanguage();\n    if (\n      savedLanguage !== null &&\n      savedLanguage !== '' &&\n      savedLanguage !== undefined &&\n      savedLanguage in validTranslations === true\n    ) {\n      return savedLanguage;\n    } else if (navigator.language) {\n      return navigator.language.split('-')[0];\n    } else {\n      return generalConfigurations.defaultLanguage;\n    }\n  }\n\n  getLocale() {\n    return navigator.language.length <= 2 ? 'en-US' : navigator.language;\n  }\n\n  getCacheableLanguagekeys(key: string) {\n    const translation = this.getTranslation(this.getLanguage());\n    return translation.default[key];\n  }\n\n  getText(key: string) {\n    const translation = this.getTranslation(this.getLanguage());\n    return translation.default[key];\n  }\n\n  loadLanguage() {\n    return localStorage.getItem('canvas-language');\n  }\n\n  saveLanguage(language: string) {\n    localStorage.setItem('canvas-language', language);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet';\nimport { UserFacadeService } from '../../store/facades';\nimport { Provider } from '@ethersproject/abstract-provider';\nimport { Observable } from 'rxjs';\nimport { request, gql } from 'graphql-request';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(\n    public userFacade: UserFacadeService,\n    public walletService: WalletService\n  ) {}\n\n  getUserDomains(walletAddress: string, page = 0) {\n    const url = environment.networks[environment.defaultChain].ensGraphQLAPI;\n    return new Observable((observer) => {\n      const query = gql`\n        { \n          registrations(first: 1000, skip: ${\n            page * 1000\n          }, where: { registrant: \"${walletAddress}\" }) {\n            id\n            labelName\n            expiryDate\n            registrationDate\n            domain{\n              id\n              createdAt\n              labelName\n              labelhash\n              events{\n                id\n                blockNumber\n                transactionID\n              }\n            }\n          }\n        }\n      `;\n      request(url, query).then((data) => {\n        observer.next(data);\n        observer.complete();\n      });\n    });\n  }\n\n  getEthAddress(provider: Provider, ethName: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .resolveName(ethName)\n        .then((r) => {\n          observer.next(r);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getEthName(provider: Provider, walletAddress: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .lookupAddress(walletAddress)\n        .then((r) => {\n          observer.next(r);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getUserText(provider: Provider, ethName: string, text: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .getResolver(ethName)\n        .then((resolver) => {\n          return resolver.getText(text);\n        })\n        .then((r) => {\n          observer.next(r);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getUserContentHash(provider: Provider, ethName: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .getResolver(ethName)\n        .then((resolver) => {\n          return resolver.getContentHash();\n        })\n        .then((r) => {\n          let web2Link = 'https://';\n          if (r.indexOf('ipfs:') > -1) {\n            web2Link += 'dweb.link/ipfs/' + r.replace('ipfs://', '');\n          } else if (r.indexOf('ipns:') > -1) {\n            web2Link += 'dweb.link/ipns/' + r.replace('ipns://', '');\n          }\n          observer.next(web2Link);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { providers } from 'ethers';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\nimport { ValidRPCProvidersEnum } from 'src/app/models/rpc/valid-rpc-providers.enum';\nimport { environment } from '../../../environments/environment';\nimport { UserModel } from '../../models/states/user-interfaces';\nimport { MetamaskService } from '../metamask';\n\ndeclare const localStorage;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserSessionService {\n  constructor(public metamaskService: MetamaskService) {}\n\n  quitUserSession() {\n    localStorage.removeItem('canvas-user-session');\n    localStorage.removeItem('walletconnect');\n    localStorage.removeItem('WALLETCONNECT_DEEPLINK_CHOICE');\n  }\n\n  saveUserSession(userData: UserModel) {\n    localStorage.setItem('canvas-user-session', JSON.stringify(userData));\n  }\n\n  loadUserSession() {\n    return localStorage.getItem('canvas-user-session');\n  }\n\n  getUserSessionProvider(\n    chainId: number,\n    providerData: RPCProviderModel = null\n  ) {\n    let newProvider;\n    if (providerData === null) {\n      newProvider = this.createAlchemyFrontDefaultProvider(chainId);\n    } else if (providerData.type === ValidRPCProvidersEnum.ALCHEMY) {\n      newProvider = this.createAlchemyFrontProvider(\n        chainId,\n        providerData.secret\n      );\n    } else if (providerData.type === ValidRPCProvidersEnum.INFURA) {\n      newProvider = this.createInfuraFrontProvider(\n        chainId,\n        providerData.id,\n        providerData.secret\n      );\n    } else if (providerData.type === ValidRPCProvidersEnum.CUSTOM) {\n      newProvider = this.createJSONFrontProvider(chainId, providerData.url);\n    }\n    return newProvider;\n  }\n\n  getDefaultChainId() {\n    return environment.networks[environment.defaultChain].chainId;\n  }\n\n  createAlchemyFrontDefaultProvider(chain: number) {\n    const providerKeys = JSON.parse(\n      environment.networks[environment.defaultChain].providerKey\n    );\n    const providerKeyPicked = Math.floor(Math.random() * providerKeys.length);\n    return new providers.AlchemyWebSocketProvider(\n      chain,\n      providerKeys[providerKeyPicked]\n    );\n  }\n\n  createAlchemyFrontProvider(chain: number, secret: string) {\n    return new providers.AlchemyWebSocketProvider(chain, secret);\n  }\n\n  createInfuraFrontProvider(chain: number, id: string, secret: string) {\n    return new providers.InfuraProvider(chain, {\n      projectId: id,\n      projectSecret: secret,\n    });\n  }\n\n  createJSONFrontProvider(chain: number, url: string) {\n    return new providers.JsonRpcProvider(url, chain);\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { PagesFacadeService, UserFacadeService } from '../../store/facades';\nimport { MiscUtilsService } from '../misc-utils';\nimport { UserRegistrationModel } from 'src/app/models/states/user-interfaces';\nimport { WalletTypesEnum } from 'src/app/models/states/wallet-interfaces';\nimport WalletConnect from '@walletconnect/client';\nimport QRCodeModal from '@walletconnect/qrcode-modal';\nimport { PagesEnum } from 'src/app/models/states/pages-interfaces';\nimport { UserStoreErrorsEnum } from 'src/app/models/error-enums';\nimport { generalConfigurations } from 'src/app/configurations';\n\nconst globalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WalletConnectService {\n  constructor(\n    public miscUtils: MiscUtilsService,\n    public userFacadeService: UserFacadeService,\n    public pagesFacade: PagesFacadeService,\n    public userFacade: UserFacadeService,\n    protected ngZone: NgZone\n  ) {\n    const dateNow = new Date().getTime();\n    if (globalAny.walletConnect === undefined) {\n      const connector = new WalletConnect({\n        bridge: 'https://bridge.walletconnect.org',\n        qrcodeModal: QRCodeModal,\n        qrcodeModalOptions: {\n          mobileLinks: generalConfigurations.wallectConnectSupportedWallets,\n          desktopLinks: [],\n        },\n        clientMeta: generalConfigurations.appMeta,\n      });\n      connector.on('connect', (error, payload) => {\n        if (error) {\n          throw error;\n        }\n        const { accounts, chainId } = payload.params[0];\n        const currentChainId = globalAny.chainId;\n        if (currentChainId !== chainId) {\n          this.userFacadeService.removeUser();\n          const wc = globalAny.walletConnect as WalletConnect;\n          wc.killSession();\n          this.userFacade.setErrorState(UserStoreErrorsEnum.CONNECT_ERROR);\n          this.pagesFacade.setNetworkChainCode(parseInt(chainId, 16));\n          return;\n        }\n        this.connect(dateNow, accounts[0]);\n      });\n      connector.on('session_update', (error, payload) => {\n        if (error) {\n          throw error;\n        }\n        const { accounts, chainId } = payload.params[0];\n        const currentChainId = globalAny.chainId;\n        const currentAccount = globalAny.chainAccount;\n        if (\n          currentChainId !== chainId ||\n          currentAccount.walletAddress.toLowerCase() !==\n            accounts[0].toLowerCase()\n        ) {\n          this.userFacadeService.removeUser();\n          const wc = globalAny.walletConnect as WalletConnect;\n          wc.killSession();\n          this.pagesFacade.setNetworkChainCode(parseInt(chainId, 16));\n          this.userFacadeService.removeUser();\n          this.pagesFacade.gotoPageRoute('home', PagesEnum.HOME);\n          return;\n        }\n      });\n      connector.on('disconnect', (error, payload) => {\n        if (error) {\n          throw error;\n        }\n      });\n      globalAny.walletConnect = connector;\n    }\n  }\n\n  createSession() {\n    globalAny.walletConnect.createSession();\n  }\n\n  connect(time: number, account: string) {\n    this.userFacade.registerUser({\n      walletType: WalletTypesEnum.WALLET_CONNECT,\n      address: account,\n    } as UserRegistrationModel);\n  }\n\n  getChainId() {\n    return globalAny.chainId;\n  }\n\n  signPayment(payloadHash: any) {\n    return new Observable((observer) => {\n      globalAny.walletConnect\n        .sendTransaction(payloadHash)\n        .then((tx) => {\n          if (tx === null || tx.length <= 0 || tx === undefined) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(tx);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Wallet, utils } from 'ethers';\nimport { UserFacadeService } from '../../store/facades';\nimport { NonceTypesEnum } from '../../models/states/wallet-interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WalletService {\n  constructor(public userFacade: UserFacadeService, public http: HttpClient) {}\n\n  produceNonce(type: NonceTypesEnum = NonceTypesEnum.TOKEN): string {\n    const nonceLength = type === NonceTypesEnum.TOKEN ? 32 : 15;\n    const charLibrary =\n      '0123456789' +\n      (type === NonceTypesEnum.TOKEN\n        ? 'ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'\n        : '');\n    let nonceString = '';\n    for (let i = 0; i < nonceLength; i++) {\n      const rnum = Math.floor(Math.random() * charLibrary.length);\n      nonceString += charLibrary.substring(rnum, rnum + 1);\n    }\n    return nonceString;\n  }\n\n  checksumEtheruemAddress(address: string) {\n    try {\n      utils.getAddress(address);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  validateWalletAddress(address: string) {\n    if (this.checksumEtheruemAddress(address) === false) {\n      return false;\n    }\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n      return false;\n    } else if (\n      /^(0x)?[0-9a-f]{40}$/.test(address) ||\n      /^(0x)?[0-9A-F]{40}$/.test(address)\n    ) {\n      return true;\n    } else {\n      return true;\n    }\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { CategoriesRootModel, CategoryModel } from 'src/app/models/category';\nimport { CategoriesStoreErrorsEnum } from 'src/app/models/error-enums';\nexport const InitEffectsCategory = '[CategoryState] Init effects category.';\nexport const SetCategoriesMetadata = '[CategoryState] Set category metadata.';\nexport const SetCategoriesRootVolumeData =\n  '[CategoryState] Set category root volume data.';\nexport const AddOneCategory = '[CategoryState] Add category.';\nexport const UpdateCategory = '[CategoryState] Update category.';\nexport const UpsertOneCategory = '[CategoryState] Upsert one category.';\nexport const UpsertManyCategory = '[CategoryState] Upsert many category.';\nexport const GetOneCategory = '[CategoryState] Get one category.';\nexport const GetAllCategory = '[CategoryState] Get all category.';\nexport const RemoveOneCategory = '[CategoryState] Remove one category.';\nexport const RemoveManyCategory = '[CategoryState] Remove many category.';\nexport const RemoveAllCategory = '[CategoryState] Remove all category.';\nexport const SetCategoryError = '[CategoryState] Category error set.';\n\nexport class CategoryEffectsInit implements Action {\n  readonly type = InitEffectsCategory;\n  constructor() {}\n}\n\nexport class CategoryMetadataSet implements Action {\n  readonly type = SetCategoriesMetadata;\n  constructor(public payload: CategoriesRootModel) {}\n}\n\nexport class CategoryRootVolumeDataSet implements Action {\n  readonly type = SetCategoriesRootVolumeData;\n  constructor(public payload: CategoriesRootModel) {}\n}\n\nexport class CategoryErrorSet implements Action {\n  readonly type = SetCategoryError;\n  constructor(public payload: CategoriesStoreErrorsEnum) {}\n}\n\nexport class CategoryAddOne implements Action {\n  readonly type = AddOneCategory;\n  constructor(public payload: CategoryModel, public toSave = true) {}\n}\n\nexport class CategoryUpsertOne implements Action {\n  readonly type = UpsertOneCategory;\n  constructor(public payload: CategoryModel, public toSave = true) {}\n}\n\nexport class CategoryUpsertMany implements Action {\n  readonly type = UpsertManyCategory;\n  constructor(public payload: CategoryModel[], public toSave = true) {}\n}\n\nexport class CategoryGetOne implements Action {\n  readonly type = GetOneCategory;\n  constructor(public payload: string) {}\n}\n\nexport class CategoryGetAll implements Action {\n  readonly type = GetAllCategory;\n  constructor(public payload: string) {}\n}\n\nexport class CategoryRemoveOne implements Action {\n  readonly type = RemoveOneCategory;\n  constructor(public payload: string, public toSave = true) {}\n}\n\nexport class CategoryRemoveMany implements Action {\n  readonly type = RemoveManyCategory;\n  constructor(public payload: string[], public toSave = true) {}\n}\n\nexport class CategoryRemoveAll implements Action {\n  readonly type = RemoveAllCategory;\n  constructor(public toSave = true) {}\n}\n\nexport class CategoryUpdate implements Action {\n  readonly type = UpdateCategory;\n  constructor(public payload: CategoryModel, public toSave = true) {}\n}\n\nexport type CategoryActions =\n  | CategoryRootVolumeDataSet\n  | CategoryMetadataSet\n  | CategoryAddOne\n  | CategoryRemoveOne\n  | CategoryRemoveMany\n  | CategoryGetAll\n  | CategoryGetOne\n  | CategoryUpsertOne\n  | CategoryUpsertMany\n  | CategoryErrorSet\n  | CategoryRemoveAll\n  | CategoryUpdate;\n","import { Action } from '@ngrx/store';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSBookmarkStoreErrorsEnum } from '../../models/error-enums';\nexport const InitEffectsENSBookmark =\n  '[ENSBookmarkState] Init effects bookmark.';\nexport const AddOneENSBookmark = '[ENSBookmarkState] Add bookmark.';\nexport const UpdateENSBookmark = '[ENSBookmarkState] Update bookmark.';\nexport const UpsertOneENSBookmark = '[ENSBookmarkState] Upsert one bookmark.';\nexport const UpsertManyENSBookmark = '[ENSBookmarkState] Upsert many bookmark.';\nexport const GetOneENSBookmark = '[ENSBookmarkState] Get one bookmark.';\nexport const GetAllENSBookmark = '[ENSBookmarkState] Get all bookmark.';\nexport const RemoveOneENSBookmark = '[ENSBookmarkState] Remove one bookmark.';\nexport const RemoveManyENSBookmark = '[ENSBookmarkState] Remove many bookmark.';\nexport const RemoveAllENSBookmark = '[ENSBookmarkState] Remove all bookmark.';\nexport const SetENSBookmarkError = '[ENSBookmarkState] ENSBookmark error set.';\n\nexport class ENSBookmarkEffectsInit implements Action {\n  readonly type = InitEffectsENSBookmark;\n  constructor() {}\n}\n\nexport class ENSBookmarkErrorSet implements Action {\n  readonly type = SetENSBookmarkError;\n  constructor(public payload: ENSBookmarkStoreErrorsEnum) {}\n}\n\nexport class ENSBookmarkAddOne implements Action {\n  readonly type = AddOneENSBookmark;\n  constructor(public payload: DomainMetadataModel, public toSave = true) {}\n}\n\nexport class ENSBookmarkUpsertOne implements Action {\n  readonly type = UpsertOneENSBookmark;\n  constructor(public payload: DomainMetadataModel, public toSave = true) {}\n}\n\nexport class ENSBookmarkUpsertMany implements Action {\n  readonly type = UpsertManyENSBookmark;\n  constructor(public payload: DomainMetadataModel[], public toSave = true) {}\n}\n\nexport class ENSBookmarkGetOne implements Action {\n  readonly type = GetOneENSBookmark;\n  constructor(public payload: string) {}\n}\n\nexport class ENSBookmarkGetAll implements Action {\n  readonly type = GetAllENSBookmark;\n  constructor(public payload: string) {}\n}\n\nexport class ENSBookmarkRemoveOne implements Action {\n  readonly type = RemoveOneENSBookmark;\n  constructor(public payload: string, public toSave = true) {}\n}\n\nexport class ENSBookmarkRemoveMany implements Action {\n  readonly type = RemoveManyENSBookmark;\n  constructor(public payload: string[], public toSave = true) {}\n}\n\nexport class ENSBookmarkRemoveAll implements Action {\n  readonly type = RemoveAllENSBookmark;\n  constructor(public toSave = true) {}\n}\n\nexport class ENSBookmarkUpdate implements Action {\n  readonly type = UpdateENSBookmark;\n  constructor(public payload: DomainMetadataModel, public toSave = true) {}\n}\n\nexport type ENSBookmarkActions =\n  | ENSBookmarkAddOne\n  | ENSBookmarkRemoveOne\n  | ENSBookmarkRemoveMany\n  | ENSBookmarkGetAll\n  | ENSBookmarkGetOne\n  | ENSBookmarkUpsertOne\n  | ENSBookmarkUpsertMany\n  | ENSBookmarkErrorSet\n  | ENSBookmarkRemoveAll\n  | ENSBookmarkUpdate;\n","import { Action } from '@ngrx/store';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSRegistrationStoreErrorsEnum } from '../../models/error-enums';\nexport const InitEffectsENSRegistration =\n  '[ENSRegistrationState] Init effects registration.';\nexport const AddOneENSRegistration = '[ENSRegistrationState] Add registration.';\nexport const UpdateENSRegistration =\n  '[ENSRegistrationState] Update registration.';\nexport const UpsertOneENSRegistration =\n  '[ENSRegistrationState] Upsert one registration.';\nexport const UpsertManyENSRegistration =\n  '[ENSRegistrationState] Upsert many registration.';\nexport const GetOneENSRegistration =\n  '[ENSRegistrationState] Get one registration.';\nexport const GetAllENSRegistration =\n  '[ENSRegistrationState] Get all registration.';\nexport const RemoveOneENSRegistration =\n  '[ENSRegistrationState] Remove one registration.';\nexport const RemoveManyENSRegistration =\n  '[ENSRegistrationState] Remove many registration.';\nexport const RemoveAllENSRegistration =\n  '[ENSRegistrationState] Remove all registration.';\nexport const SetENSRegistrationError =\n  '[ENSRegistrationState] ENSRegistration error set.';\n\nexport class ENSRegistrationEffectsInit implements Action {\n  readonly type = InitEffectsENSRegistration;\n  constructor() {}\n}\n\nexport class ENSRegistrationErrorSet implements Action {\n  readonly type = SetENSRegistrationError;\n  constructor(public payload: ENSRegistrationStoreErrorsEnum) {}\n}\n\nexport class ENSRegistrationAddOne implements Action {\n  readonly type = AddOneENSRegistration;\n  constructor(public payload: DomainMetadataModel, public toSave = true) {}\n}\n\nexport class ENSRegistrationUpsertOne implements Action {\n  readonly type = UpsertOneENSRegistration;\n  constructor(public payload: DomainMetadataModel, public toSave = true) {}\n}\n\nexport class ENSRegistrationUpsertMany implements Action {\n  readonly type = UpsertManyENSRegistration;\n  constructor(public payload: DomainMetadataModel[], public toSave = true) {}\n}\n\nexport class ENSRegistrationGetOne implements Action {\n  readonly type = GetOneENSRegistration;\n  constructor(public payload: string) {}\n}\n\nexport class ENSRegistrationGetAll implements Action {\n  readonly type = GetAllENSRegistration;\n  constructor(public payload: string) {}\n}\n\nexport class ENSRegistrationRemoveOne implements Action {\n  readonly type = RemoveOneENSRegistration;\n  constructor(public payload: string, public toSave = true) {}\n}\n\nexport class ENSRegistrationRemoveMany implements Action {\n  readonly type = RemoveManyENSRegistration;\n  constructor(public payload: string[], public toSave = true) {}\n}\n\nexport class ENSRegistrationRemoveAll implements Action {\n  readonly type = RemoveAllENSRegistration;\n  constructor() {}\n}\n\nexport class ENSRegistrationUpdate implements Action {\n  readonly type = UpdateENSRegistration;\n  constructor(public payload: DomainMetadataModel, public toSave = true) {}\n}\n\nexport type ENSRegistrationActions =\n  | ENSRegistrationEffectsInit\n  | ENSRegistrationAddOne\n  | ENSRegistrationRemoveOne\n  | ENSRegistrationRemoveMany\n  | ENSRegistrationGetAll\n  | ENSRegistrationGetOne\n  | ENSRegistrationUpsertOne\n  | ENSRegistrationUpsertMany\n  | ENSRegistrationErrorSet\n  | ENSRegistrationRemoveAll\n  | ENSRegistrationUpdate;\n","import { Action } from '@ngrx/store';\nimport { NavigatorButtonsStateModel } from '../../models/states/navigator-interfaces';\n\nexport const SetNavigatorButtonsState =\n  '[NavigatorButtonsState] New state set.';\nexport const GetNavigatorButtonsState =\n  '[NavigatorButtonsState] Latest state retrieved.';\n\nexport class NavigatorButtonsStateSet implements Action {\n  readonly type = SetNavigatorButtonsState;\n  constructor(public payload: NavigatorButtonsStateModel) {}\n}\n\nexport class NavigatorButtonsStateGet implements Action {\n  readonly type = GetNavigatorButtonsState;\n  constructor() {}\n}\n\nexport type NavigatorButtonActions =\n  | NavigatorButtonsStateSet\n  | NavigatorButtonsStateGet;\n","import { Action } from '@ngrx/store';\nimport { NavigatorStateModel } from '../../models/states/navigator-interfaces';\n\nexport const SetNavigatorState = '[NavigatorState] New state set.';\nexport const SetNavigatorStateDisabledButtons =\n  '[NavigatorState] Disabled buttons set.';\nexport const GetNavigatorState = '[NavigatorState] Latest state retrieved.';\n\nexport class NavigatorStateSet implements Action {\n  readonly type = SetNavigatorState;\n  constructor(public payload: NavigatorStateModel) {}\n}\n\nexport class NavigatorStateGet implements Action {\n  readonly type = GetNavigatorState;\n  constructor() {}\n}\n\nexport type NavigatorActions = NavigatorStateSet | NavigatorStateGet;\n","import { Action } from '@ngrx/store';\nimport { IpfsErrorsEnum } from 'src/app/models/error-enums';\nimport { IpfsStatesEnum } from 'src/app/models/ipfs';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\nimport {\n  GotoPageRouteActionPayloadModel,\n  PageModesEnum,\n  PagesStateModel,\n} from '../../models/states/pages-interfaces';\n\nexport const InitEffectsPages = '[PagesState] Init effects pages.';\nexport const ShowLoadingProgressBarOnLoad = '[PagesState] Spinner dialog set.';\nexport const HideLoadingProgressBarOnLoadFinished =\n  '[PagesState] Spinner dialog unset.';\nexport const SetPagesCriticalError = '[PagesState] critical error set.';\nexport const SetPagesMode = '[PagesState] page mode set.';\nexport const SetPagesPageSlide = '[PagesState] New page slide set.';\nexport const SetPagesState = '[PagesState] New state set.';\nexport const SetPageIpfsErrors = '[PagesState] ipfs error state set.';\nexport const SetPageIpfsState = '[PagesState] ipfs state set.';\nexport const SetPageChainCode = '[PagesState] chain code set.';\nexport const SetPagesNewPageState = '[PagesState] New state set.';\nexport const SetPagesNetworkState = '[PagesState] New network state set.';\nexport const SetPagesVisibility = '[PagesState] visibility state set.';\nexport const SetRPCProvider = '[PagesState] rpc provider set.';\nexport const SetPagesNetworkStateOffline =\n  '[PagesState] Offline network state procedure invoke.';\nexport const GetPagesState = '[PagesState] Latest state retrieved.';\nexport const GotoPageRoute = '[PagesState] Going to page route.';\n\nexport class PagesEffectsInit implements Action {\n  readonly type = InitEffectsPages;\n  constructor() {}\n}\nexport class PagesSetRPCProvider implements Action {\n  readonly type = SetRPCProvider;\n  constructor(public payload: RPCProviderModel) {}\n}\n\nexport class PagesSetMode implements Action {\n  readonly type = SetPagesMode;\n  constructor(public payload: PageModesEnum) {}\n}\n\nexport class PagesSetVisibility implements Action {\n  readonly type = SetPagesVisibility;\n  constructor(public payload: boolean) {}\n}\n\nexport class PagesSetCriticalError implements Action {\n  readonly type = SetPagesCriticalError;\n  constructor(public payload: boolean, public redirect = true) {}\n}\n\nexport class PagesSetIpfsError implements Action {\n  readonly type = SetPageIpfsErrors;\n  constructor(public payload: IpfsErrorsEnum) {}\n}\n\nexport class PagesSetIpfsState implements Action {\n  readonly type = SetPageIpfsState;\n  constructor(public payload: IpfsStatesEnum) {}\n}\n\nexport class PagesShowLoadingProgressBarOnLoad implements Action {\n  readonly type = ShowLoadingProgressBarOnLoad;\n  constructor() {}\n}\n\nexport class PagesHideLoadingProgressBarOnLoadFinished implements Action {\n  readonly type = HideLoadingProgressBarOnLoadFinished;\n  constructor() {}\n}\n\nexport class PagesSetChainCode implements Action {\n  readonly type = SetPageChainCode;\n  constructor(public payload: number, public firstTimeSet = false) {}\n}\n\nexport class PagesSetPageSlide implements Action {\n  readonly type = SetPagesPageSlide;\n  constructor(public payload: number) {}\n}\n\nexport class PagesStateSet implements Action {\n  readonly type = SetPagesState;\n  constructor(public payload: PagesStateModel) {}\n}\n\nexport class PagesNewPageStateSet implements Action {\n  readonly type = SetPagesNewPageState;\n  constructor(public payload: PagesStateModel) {}\n}\n\nexport class PagesNetworkStateSet implements Action {\n  readonly type = SetPagesNetworkState;\n  constructor(public payload: PagesStateModel) {}\n}\n\nexport class PagesNetworkOfflineStateInvoke implements Action {\n  readonly type = SetPagesNetworkStateOffline;\n  constructor() {}\n}\n\nexport class PagesStateGet implements Action {\n  readonly type = GetPagesState;\n  constructor() {}\n}\n\nexport class PageGotoRoute implements Action {\n  readonly type = GotoPageRoute;\n  constructor(public payload: GotoPageRouteActionPayloadModel) {}\n}\n\nexport type PagesActions =\n  | PagesEffectsInit\n  | PagesSetMode\n  | PagesSetRPCProvider\n  | PagesSetChainCode\n  | PagesSetIpfsError\n  | PagesSetIpfsState\n  | PagesSetPageSlide\n  | PagesHideLoadingProgressBarOnLoadFinished\n  | PagesShowLoadingProgressBarOnLoad\n  | PagesStateSet\n  | PagesStateGet\n  | PagesNewPageStateSet\n  | PagesNetworkOfflineStateInvoke\n  | PageGotoRoute\n  | PagesNetworkStateSet\n  | PagesSetCriticalError;\n","import { Action } from '@ngrx/store';\nimport { PaymentStoreErrorsEnum } from '../../models/error-enums';\nimport { PaymentModel } from '../../models/states/payment-interfaces/payment.model';\n\nexport const InitEffectsPayments = '[PaymentState] Init effects payments.';\nexport const PaymentCheckFulfilled =\n  '[PaymentState] Payment checking status if fulfilled.';\nexport const PaymentTriggerStatusChecking =\n  '[PaymentState] Payment checking status triggered.';\nexport const CancelledPayment = '[PaymentState] payment cancelled.';\nexport const AddOnePayment = '[PaymentState] Add payment.';\nexport const UpdatePayment = '[PaymentState] Update payment.';\nexport const UpsertOnePayment = '[PaymentState] Upsert one payment.';\nexport const UpsertManyPayment = '[PaymentState] Upsert many payment.';\nexport const GetOnePayment = '[PaymentState] Get one payment.';\nexport const GetAllPayment = '[PaymentState] Get all payment.';\nexport const SetEthUSDRates = '[PaymentState] ETHUSD rate set.';\nexport const RemoveOnePayment = '[PaymentState] Remove one payment.';\nexport const RemoveManyPayment = '[PaymentState] Remove many payment.';\nexport const RemoveAllPayment = '[PaymentState] Remove all payment.';\nexport const ArchiveAllPayment = '[PaymentState] Archive all payment.';\nexport const SetPaymentError = '[PaymentState] Payment error set.';\n\nexport class PaymentsEffectsInit implements Action {\n  readonly type = InitEffectsPayments;\n  constructor() {}\n}\nexport class PaymentCancelled implements Action {\n  readonly type = CancelledPayment;\n  constructor() {}\n}\n\nexport class PaymentArchiveAll implements Action {\n  readonly type = ArchiveAllPayment;\n  constructor() {}\n}\n\nexport class PaymentETHUSDRatesSet implements Action {\n  readonly type = SetEthUSDRates;\n  constructor(public payload: string) {}\n}\n\nexport class PaymentErrorSet implements Action {\n  readonly type = SetPaymentError;\n  constructor(public payload: PaymentStoreErrorsEnum) {}\n}\n\nexport class PaymentAddOne implements Action {\n  readonly type = AddOnePayment;\n  constructor(public payload: PaymentModel) {}\n}\n\nexport class PaymentUpsertOne implements Action {\n  readonly type = UpsertOnePayment;\n  constructor(public payload: PaymentModel) {}\n}\n\nexport class PaymentUpsertMany implements Action {\n  readonly type = UpsertManyPayment;\n  constructor(public payload: PaymentModel[]) {}\n}\n\nexport class PaymentGetOne implements Action {\n  readonly type = GetOnePayment;\n  constructor(public payload: string) {}\n}\n\nexport class PaymentGetAll implements Action {\n  readonly type = GetAllPayment;\n  constructor(public payload: string) {}\n}\n\nexport class PaymentRemoveOne implements Action {\n  readonly type = RemoveOnePayment;\n  constructor(public payload: string) {}\n}\n\nexport class PaymentRemoveMany implements Action {\n  readonly type = RemoveManyPayment;\n  constructor(public payload: string[]) {}\n}\n\nexport class PaymentRemoveAll implements Action {\n  readonly type = RemoveAllPayment;\n  constructor() {}\n}\n\nexport class CheckPaymentFulfilled implements Action {\n  readonly type = PaymentCheckFulfilled;\n  constructor(public payload: PaymentModel) {}\n}\n\nexport class PaymentUpdate implements Action {\n  readonly type = UpdatePayment;\n  constructor(public payload: PaymentModel) {}\n}\n\nexport type PaymentActions =\n  | PaymentsEffectsInit\n  | PaymentCancelled\n  | PaymentAddOne\n  | PaymentRemoveOne\n  | PaymentRemoveMany\n  | PaymentGetAll\n  | PaymentGetOne\n  | PaymentUpsertOne\n  | PaymentUpsertMany\n  | PaymentErrorSet\n  | PaymentRemoveAll\n  | PaymentETHUSDRatesSet\n  | CheckPaymentFulfilled\n  | PaymentUpdate\n  | PaymentArchiveAll;\n","import { Action } from '@ngrx/store';\nimport { UserStoreErrorsEnum } from '../../models/error-enums';\nimport {\n  UserModel,\n  UserRegistrationModel,\n} from '../../models/states/user-interfaces';\n\nexport const InitEffectsUserState = '[UserState] Init effects users.';\nexport const SetUserPoaps = '[UserState] New poaps state set.';\nexport const SetUserState = '[UserState] New state set.';\nexport const SetUserError = '[UserState] An error has occured.';\nexport const GetUserState = '[UserState] Latest state retrieved.';\nexport const RemoveUserError = '[UserState] Error removed.';\nexport const RemoveUserState =\n  '[UserState] Latest state replaced (with Empty).';\nexport const RemoveUser = '[UserState] Latest user replaced (with Empty).';\nexport const AddUser = '[UserState] New user added.';\nexport const UpdateUser = '[UserState] User updated added.';\nexport const RegisterUser = '[UserState] New user registration.';\n\nexport class UserEffectsInit implements Action {\n  readonly type = InitEffectsUserState;\n  constructor() {}\n}\n\nexport class UserErrorSet implements Action {\n  readonly type = SetUserError;\n  constructor(public payload: UserStoreErrorsEnum) {}\n}\n\nexport class UserPoapsSet implements Action {\n  readonly type = SetUserPoaps;\n  constructor(\n    public payload: {\n      poapsResolved: boolean;\n      poaps: string[];\n      poapTokens: any[];\n    }\n  ) {}\n}\n\nexport class UserUpdate implements Action {\n  readonly type = UpdateUser;\n  constructor(public payload: UserModel) {}\n}\n\nexport class UserStateSet implements Action {\n  readonly type = SetUserState;\n  constructor(public payload: UserModel) {}\n}\n\nexport class UserStateGet implements Action {\n  readonly type = GetUserState;\n  constructor(public payload: number) {}\n}\n\nexport class UserStateRemove implements Action {\n  readonly type = RemoveUserState;\n  constructor() {}\n}\n\nexport class UserErrorRemove implements Action {\n  readonly type = RemoveUserError;\n  constructor() {}\n}\n\nexport class UserRemove implements Action {\n  readonly type = RemoveUser;\n  constructor() {}\n}\n\nexport class UserRegister implements Action {\n  readonly type = RegisterUser;\n  constructor(public payload: UserRegistrationModel) {}\n}\n\nexport class UserAdd implements Action {\n  readonly type = AddUser;\n  constructor(public payload: UserModel) {}\n}\n\nexport type UserActions =\n  | UserPoapsSet\n  | UserEffectsInit\n  | UserStateSet\n  | UserUpdate\n  | UserErrorSet\n  | UserStateGet\n  | UserStateRemove\n  | UserErrorRemove\n  | UserRemove\n  | UserRegister\n  | UserAdd;\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { getCurrentUserState, getCurrentUser } from '../selectors';\nimport {\n  UserStateSet,\n  UserStateRemove,\n  UserAdd,\n  UserErrorRemove,\n  UserErrorSet,\n  UserUpdate,\n  UserRemove,\n  UserRegister,\n  UserEffectsInit,\n} from '../actions';\nimport {\n  UserModel,\n  UserRegistrationModel,\n  UserStateModel,\n} from '../../models/states/user-interfaces';\nimport { UserStoreErrorsEnum } from '../../models/error-enums';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserFacadeService {\n  userState$: Observable<UserStateModel>;\n  user$: Observable<UserModel>;\n\n  constructor(public store: Store<UserStateModel>) {\n    this.userState$ = this.store.pipe(select(getCurrentUserState));\n    this.user$ = this.store.pipe(select(getCurrentUser));\n  }\n\n  startEffects() {\n    this.store.dispatch(new UserEffectsInit());\n  }\n\n  registerUser(userData: UserRegistrationModel) {\n    this.store.dispatch(new UserRegister(userData));\n  }\n\n  newUserState(userState: UserModel) {\n    this.store.dispatch(new UserStateSet(userState));\n  }\n\n  removeUserState() {\n    this.store.dispatch(new UserStateRemove());\n  }\n\n  removeUser() {\n    this.store.dispatch(new UserRemove());\n  }\n\n  removeUserStateError() {\n    this.store.dispatch(new UserErrorRemove());\n  }\n\n  setErrorState(error: UserStoreErrorsEnum) {\n    this.store.dispatch(new UserErrorSet(error));\n  }\n\n  addUser(userAddData: UserModel) {\n    this.store.dispatch(new UserAdd(userAddData));\n  }\n\n  updateUser(userData: UserModel) {\n    this.store.dispatch(new UserUpdate(userData));\n  }\n}\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport {\n  PaymentModel,\n  PaymentStateModel,\n} from '../../models/states/payment-interfaces';\nimport {\n  getEthUsdPrice,\n  getPayments,\n  getPaymentState,\n  getPaymentStateError,\n  getPaymentStateLoading,\n  getPendingPayments,\n  selectPayment,\n} from '../selectors';\nimport {\n  PaymentErrorSet,\n  PaymentUpdate,\n  PaymentUpsertOne,\n  PaymentRemoveOne,\n  PaymentRemoveMany,\n  PaymentAddOne,\n  ArchiveAllPayment,\n  PaymentArchiveAll,\n  PaymentETHUSDRatesSet,\n  PaymentRemoveAll,\n  PaymentsEffectsInit,\n} from '../actions';\nimport { PaymentStoreErrorsEnum } from '../../models/error-enums';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentFacadeService {\n  paymentState$: Observable<PaymentStateModel>;\n  pendingPayments$: Observable<PaymentModel[]>;\n  approvablePayments$: Observable<PaymentModel[]>;\n  paymentsStored$: Observable<PaymentModel[]>;\n  paymentsStoreError$: Observable<PaymentStoreErrorsEnum>;\n  paymentsStoreLoading$: Observable<boolean>;\n  ethUsdPrice$: Observable<string>;\n\n  constructor(protected store: Store<PaymentModel>) {\n    this.paymentState$ = this.store.pipe(select(getPaymentState));\n    this.pendingPayments$ = this.store.pipe(select(getPendingPayments));\n    this.paymentsStoreError$ = this.store.pipe(select(getPaymentStateError));\n    this.paymentsStoreLoading$ = this.store.pipe(\n      select(getPaymentStateLoading)\n    );\n    this.ethUsdPrice$ = this.store.pipe(select(getEthUsdPrice));\n  }\n\n  startEffects() {\n    this.store.dispatch(new PaymentsEffectsInit());\n  }\n\n  setEthUsdRate(usdRate: string) {\n    this.store.dispatch(new PaymentETHUSDRatesSet(usdRate as string));\n  }\n\n  createPayment(payment: PaymentModel) {\n    this.store.dispatch(new PaymentAddOne(payment));\n  }\n\n  removeAllPayment() {\n    this.store.dispatch(new PaymentRemoveAll());\n  }\n\n  removePayment(payment: PaymentModel) {\n    this.store.dispatch(new PaymentRemoveOne(payment.paymentSerial));\n  }\n\n  removePayments(payments: PaymentModel[]) {\n    this.store.dispatch(\n      new PaymentRemoveMany(payments.map((n) => n.paymentSerial))\n    );\n  }\n\n  archiveAllPayment() {\n    this.store.dispatch(new PaymentArchiveAll());\n  }\n\n  upsertPayment(payment: PaymentModel) {\n    this.store.dispatch(new PaymentUpsertOne(payment));\n  }\n\n  updatePayment(payment: PaymentModel) {\n    this.store.dispatch(new PaymentUpdate(payment));\n  }\n\n  getPayment(paymentId: number) {\n    return this.store.pipe(select(selectPayment(paymentId)));\n  }\n\n  getPayments() {\n    return this.store.pipe(select(getPayments));\n  }\n\n  removePaymentStateError() {\n    this.store.dispatch(new PaymentErrorSet(undefined));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSBookmarkStateModel } from 'src/app/models/states/ens-bookmark-interfaces';\nimport {\n  ENSBookmarkAddOne,\n  ENSBookmarkEffectsInit,\n  ENSBookmarkErrorSet,\n  ENSBookmarkRemoveAll,\n  ENSBookmarkRemoveMany,\n  ENSBookmarkRemoveOne,\n  ENSBookmarkUpdate,\n  ENSBookmarkUpsertMany,\n  ENSBookmarkUpsertOne,\n} from '../actions';\nimport {\n  getENSBookmarks,\n  getENSBookmarkState,\n  selectENSBookmark,\n} from '../selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ENSBookmarkFacadeService {\n  getENSBookmarkState$: Observable<ENSBookmarkStateModel>;\n\n  constructor(public store: Store<ENSBookmarkStateModel>) {\n    this.getENSBookmarkState$ = this.store.pipe(select(getENSBookmarkState));\n  }\n\n  startEffects() {\n    this.store.dispatch(new ENSBookmarkEffectsInit());\n  }\n\n  addBookmark(bookmark: DomainMetadataModel) {\n    this.store.dispatch(new ENSBookmarkAddOne(bookmark));\n  }\n\n  removeBookmark(bookmark: DomainMetadataModel) {\n    this.store.dispatch(new ENSBookmarkRemoveOne(bookmark.id));\n  }\n\n  removeAllBookmarks() {\n    this.store.dispatch(new ENSBookmarkRemoveAll());\n  }\n\n  removeBookmarks(bookmark: DomainMetadataModel[]) {\n    this.store.dispatch(new ENSBookmarkRemoveMany(bookmark.map((n) => n.id)));\n  }\n\n  upsertBookmark(bookmark: DomainMetadataModel) {\n    this.store.dispatch(new ENSBookmarkUpsertOne(bookmark));\n  }\n\n  upsertAllBookmark(bookmarks: DomainMetadataModel[]) {\n    this.store.dispatch(new ENSBookmarkUpsertMany(bookmarks));\n  }\n\n  updateBookmark(bookmark: DomainMetadataModel) {\n    this.store.dispatch(new ENSBookmarkUpdate(bookmark));\n  }\n\n  getBookmark(bookmarkId: number) {\n    return this.store.pipe(select(selectENSBookmark(bookmarkId)));\n  }\n\n  getBookmarks() {\n    return this.store.pipe(select(getENSBookmarks));\n  }\n\n  removeBookmarkStateError() {\n    this.store.dispatch(new ENSBookmarkErrorSet(undefined));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSRegistrationStateModel } from 'src/app/models/states/ens-registration-interfaces';\nimport {\n  ENSRegistrationAddOne,\n  ENSRegistrationEffectsInit,\n  ENSRegistrationErrorSet,\n  ENSRegistrationRemoveAll,\n  ENSRegistrationRemoveMany,\n  ENSRegistrationRemoveOne,\n  ENSRegistrationUpdate,\n  ENSRegistrationUpsertMany,\n  ENSRegistrationUpsertOne,\n} from '../actions';\nimport {\n  getENSRegistrations,\n  getENSRegistrationState,\n  selectENSRegistration,\n} from '../selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ENSRegistrationFacadeService {\n  getENSRegistrationState$: Observable<ENSRegistrationStateModel>;\n\n  constructor(public store: Store<ENSRegistrationStateModel>) {\n    this.getENSRegistrationState$ = this.store.pipe(\n      select(getENSRegistrationState)\n    );\n  }\n\n  startEffects() {\n    this.store.dispatch(new ENSRegistrationEffectsInit());\n  }\n\n  addRegistration(registration: DomainMetadataModel) {\n    this.store.dispatch(new ENSRegistrationAddOne(registration));\n  }\n\n  removeRegistration(registration: DomainMetadataModel) {\n    this.store.dispatch(new ENSRegistrationRemoveOne(registration.id));\n  }\n\n  removeRegistrations(registration: DomainMetadataModel[]) {\n    this.store.dispatch(\n      new ENSRegistrationRemoveMany(registration.map((n) => n.id))\n    );\n  }\n\n  removeAllRegistrations() {\n    this.store.dispatch(new ENSRegistrationRemoveAll());\n  }\n\n  upsertRegistration(registration: DomainMetadataModel) {\n    this.store.dispatch(new ENSRegistrationUpsertOne(registration));\n  }\n\n  upsertAllRegistration(registrations: DomainMetadataModel[]) {\n    this.store.dispatch(new ENSRegistrationUpsertMany(registrations));\n  }\n\n  updateRegistration(registration: DomainMetadataModel) {\n    this.store.dispatch(new ENSRegistrationUpdate(registration));\n  }\n\n  getRegistration(registrationId: number) {\n    return this.store.pipe(select(selectENSRegistration(registrationId)));\n  }\n\n  getRegistrations() {\n    return this.store.pipe(select(getENSRegistrations));\n  }\n\n  removeRegistrationStateError() {\n    this.store.dispatch(new ENSRegistrationErrorSet(undefined));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { CategoryModel } from 'src/app/models/category';\nimport { CategoriesStateModel } from 'src/app/models/states/categories-interfaces';\nimport {\n  CategoryAddOne,\n  CategoryEffectsInit,\n  CategoryErrorSet,\n  CategoryRemoveAll,\n  CategoryRemoveMany,\n  CategoryRemoveOne,\n  CategoryUpdate,\n  CategoryUpsertMany,\n  CategoryUpsertOne,\n} from '../actions';\nimport { getCategorys, getCategoryState, selectCategory } from '../selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryFacadeService {\n  getCategoryState$: Observable<CategoriesStateModel>;\n\n  constructor(public store: Store<CategoriesStateModel>) {\n    this.getCategoryState$ = this.store.pipe(select(getCategoryState));\n  }\n\n  startEffects() {\n    this.store.dispatch(new CategoryEffectsInit());\n  }\n\n  addBookmark(category: CategoryModel) {\n    this.store.dispatch(new CategoryAddOne(category));\n  }\n\n  removeBookmark(category: CategoryModel) {\n    this.store.dispatch(new CategoryRemoveOne(category.id));\n  }\n\n  removeAllBookmarks() {\n    this.store.dispatch(new CategoryRemoveAll());\n  }\n\n  removeBookmarks(categories: CategoryModel[]) {\n    this.store.dispatch(new CategoryRemoveMany(categories.map((n) => n.id)));\n  }\n\n  upsertBookmark(category: CategoryModel) {\n    this.store.dispatch(new CategoryUpsertOne(category));\n  }\n\n  upsertAllBookmark(categories: CategoryModel[]) {\n    this.store.dispatch(new CategoryUpsertMany(categories));\n  }\n\n  updateBookmark(category: CategoryModel) {\n    this.store.dispatch(new CategoryUpdate(category));\n  }\n\n  getBookmark(bookmarkId: number) {\n    return this.store.pipe(select(selectCategory(bookmarkId)));\n  }\n\n  getBookmarks() {\n    return this.store.pipe(select(getCategorys));\n  }\n\n  removeBookmarkStateError() {\n    this.store.dispatch(new CategoryErrorSet(undefined));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { NavigatorButtonsStateModel } from '../../models/states/navigator-interfaces';\nimport { NavigatorButtonsStateSet } from '../actions';\nimport { initialNavigatorButtonsState } from '../reducers';\nimport { getCurrentNavigatorButtonsState } from '../selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigatorButtonsFacadeService {\n  disabledButtonnavigatorState$: Observable<NavigatorButtonsStateModel>;\n\n  constructor(public store: Store<NavigatorButtonsStateModel>) {\n    this.disabledButtonnavigatorState$ = this.store.pipe(\n      select(getCurrentNavigatorButtonsState)\n    );\n  }\n\n  newNavigatorButtonsState(navigatorState: NavigatorButtonsStateModel) {\n    setTimeout(() => {\n      this.store.dispatch(new NavigatorButtonsStateSet(navigatorState));\n    }, 100);\n  }\n\n  resetNavigatorButtonState() {\n    setTimeout(() => {\n      this.store.dispatch(\n        new NavigatorButtonsStateSet(initialNavigatorButtonsState)\n      );\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { NavigatorStateModel } from '../../models/states/navigator-interfaces';\nimport { NavigatorStateSet } from '../actions';\nimport { initialNavigatorState } from '../reducers';\nimport { getCurrentNavigatorState } from '../selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigatorFacadeService {\n  navigatorState$: Observable<NavigatorStateModel>;\n\n  constructor(public store: Store<NavigatorStateModel>) {\n    this.navigatorState$ = this.store.pipe(select(getCurrentNavigatorState));\n  }\n\n  newNavigatorState(navigatorState: NavigatorStateModel) {\n    setTimeout(() => {\n      this.store.dispatch(new NavigatorStateSet(navigatorState));\n    });\n  }\n\n  resetNavigatorState() {\n    setTimeout(() => {\n      this.store.dispatch(new NavigatorStateSet(initialNavigatorState));\n    });\n  }\n}\n","import { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { NavigatorFacadeService } from './navigator.facades';\nimport { NavigatorButtonsFacadeService } from './navigator-buttons.facades';\nimport {\n  getCriticalErrorState,\n  getCurrentErrorCode,\n  getCurrentPageLoadState,\n  getCurrentPageMode,\n  getCurrentPagesState,\n  getCurrentPageVisibility,\n  getIpfsError,\n  getIpfsState,\n} from '../selectors';\nimport {\n  PageGotoRoute,\n  PagesNetworkOfflineStateInvoke,\n  PagesNetworkStateSet,\n  PagesNewPageStateSet,\n  PagesShowLoadingProgressBarOnLoad,\n  PagesHideLoadingProgressBarOnLoadFinished,\n  PagesSetPageSlide,\n  PagesSetChainCode,\n  PagesSetIpfsError,\n  PagesSetIpfsState,\n  PagesSetCriticalError,\n  PagesSetRPCProvider,\n  PagesEffectsInit,\n  PagesSetMode,\n} from '../actions';\nimport {\n  GotoPageRouteActionPayloadModel,\n  PageModesEnum,\n  PagesEnum,\n  PagesStateModel,\n} from '../../models/states/pages-interfaces';\nimport { MatDialog } from '@angular/material/dialog';\nimport { environment } from '../../../environments/environment';\nimport { IpfsErrorsEnum } from 'src/app/models/error-enums';\nimport { IpfsStatesEnum } from 'src/app/models/ipfs';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\nimport { GenericDialogComponent } from 'src/app/widgets/generic-dialog';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PagesFacadeService {\n  pageMode$: Observable<PageModesEnum>;\n  pagesState$: Observable<PagesStateModel>;\n  pagesIpfsState$: Observable<IpfsStatesEnum>;\n  pagesIpfsError$: Observable<IpfsErrorsEnum>;\n  pageErrorCode$: Observable<string>;\n  pageLoadingState$: Observable<boolean>;\n  pageCritiaclError$: Observable<boolean>;\n  pageVisibility$: Observable<boolean>;\n\n  constructor(\n    public router: Router,\n    public store: Store<PagesStateModel>,\n    public navigatorFacade: NavigatorFacadeService,\n    public navigatorButtonFacade: NavigatorButtonsFacadeService,\n    public dialog: MatDialog,\n    public ngZone: NgZone\n  ) {\n    this.pageMode$ = this.store.pipe(select(getCurrentPageMode));\n    this.pagesState$ = this.store.pipe(select(getCurrentPagesState));\n    this.pageErrorCode$ = this.store.pipe(select(getCurrentErrorCode));\n    this.pagesIpfsState$ = this.store.pipe(select(getIpfsState));\n    this.pagesIpfsError$ = this.store.pipe(select(getIpfsError));\n    this.pageLoadingState$ = this.store.pipe(select(getCurrentPageLoadState));\n    this.pageCritiaclError$ = this.store.pipe(select(getCriticalErrorState));\n    this.pageVisibility$ = this.store.pipe(select(getCurrentPageVisibility));\n  }\n\n  startEffects() {\n    this.store.dispatch(new PagesEffectsInit());\n  }\n\n  showLoadingProgressBar() {\n    document.getElementById('app-splash-container').style.display = 'flex';\n    this.store.dispatch(new PagesShowLoadingProgressBarOnLoad());\n  }\n\n  showNotEnabledToolDialog() {\n    this.dialog.open(GenericDialogComponent, {\n      data: {\n        titleText: 'HEADER.FEATURE_DISABLED',\n        subText: 'LABELS.FEATURE_DISABLED',\n      },\n      panelClass: 'cos-generic-dialog',\n    });\n  }\n\n  setPageMode(pageMode: PageModesEnum) {\n    this.store.dispatch(new PagesSetMode(pageMode));\n  }\n\n  setPageCriticalError(errorOccured: boolean, redirect = true) {\n    this.store.dispatch(new PagesSetCriticalError(errorOccured, redirect));\n  }\n\n  setRpcProvider(providerData: RPCProviderModel) {\n    this.store.dispatch(new PagesSetRPCProvider(providerData));\n  }\n\n  setIpfsError(error: IpfsErrorsEnum) {\n    this.store.dispatch(new PagesSetIpfsError(error));\n  }\n\n  setIpfsState(state: IpfsStatesEnum) {\n    this.store.dispatch(new PagesSetIpfsState(state));\n  }\n\n  hideLoadingProgressBar() {\n    document.getElementById('app-splash-container').style.display = 'none';\n    this.store.dispatch(new PagesHideLoadingProgressBarOnLoadFinished());\n  }\n\n  newPagesState(pagesState: PagesStateModel) {\n    this.store.dispatch(new PagesNewPageStateSet(pagesState));\n    this.navigatorFacade.resetNavigatorState();\n  }\n\n  newNetworkState(networkState: PagesStateModel) {\n    this.store.dispatch(new PagesNetworkStateSet(networkState));\n  }\n\n  setNetworkChainCode(chainCode: number, firstTimeSet = false) {\n    this.store.dispatch(new PagesSetChainCode(chainCode, firstTimeSet));\n  }\n\n  setChainCodeByNetworkName(networkName: string, firstTimeSet = false) {\n    const networkData = environment.networks[networkName];\n    const chainCode = networkData.chainId;\n    this.store.dispatch(new PagesSetChainCode(chainCode, firstTimeSet));\n  }\n\n  triggerNetworkOfflineDialog() {\n    this.store.dispatch(new PagesNetworkOfflineStateInvoke());\n  }\n\n  setPageSlide(pageSlide: number) {\n    this.store.dispatch(new PagesSetPageSlide(pageSlide));\n  }\n\n  gotoPageRoute(pageRoute: string, toPageId: PagesEnum) {\n    this.store.dispatch(\n      new PageGotoRoute({\n        route: pageRoute,\n        pageId: toPageId,\n      } as GotoPageRouteActionPayloadModel)\n    );\n    this.navigatorFacade.resetNavigatorState();\n    this.navigatorButtonFacade.resetNavigatorButtonState();\n  }\n}\n","import { NavigatorButtonsStateModel } from \"../../models/states/navigator-interfaces\";\nimport { GetNavigatorButtonsState, SetNavigatorButtonsState } from \"../actions\";\n\nexport const initialNavigatorButtonsState: NavigatorButtonsStateModel = {\n  disabledButtons: undefined,\n};\n\nexport function NavigatorButtonsReducers(\n  state: NavigatorButtonsStateModel = initialNavigatorButtonsState,\n  action: any\n) {\n  switch (action.type) {\n    case SetNavigatorButtonsState: {\n      return action.payload;\n    }\n\n    case GetNavigatorButtonsState: {\n      return state;\n    }\n\n    default:\n      return state;\n  }\n}\n","import { NavigatorStateModel } from \"../../models/states/navigator-interfaces\";\nimport { GetNavigatorState, SetNavigatorState } from \"../actions\";\n\nexport const initialNavigatorState: NavigatorStateModel = {\n  navigatorActiveButtonId: undefined,\n  navigatorData: undefined,\n};\n\nexport function NavigatorReducers(\n  state: NavigatorStateModel = initialNavigatorState,\n  action: any\n) {\n  switch (action.type) {\n    case SetNavigatorState: {\n      return action.payload;\n    }\n\n    case GetNavigatorState: {\n      return state;\n    }\n\n    default:\n      return state;\n  }\n}\n","export enum IpfsStatesEnum {\n  IPFS_READY = 'IPFS.READY',\n  IPFS_INITIALISING = 'IPFS.INITIALISING',\n  IPFS_FINDING = 'IPFS.FINDING_PEERS',\n  IPFS_FAILED = 'IPFS.FAILED',\n  IPFS_PUBLISHING = 'IPFS.PUBLISHING',\n}\n","import { IpfsStatesEnum } from 'src/app/models/ipfs';\nimport { generalConfigurations } from '../../configurations';\nimport {\n  PageModesEnum,\n  PagesStateModel,\n} from '../../models/states/pages-interfaces';\nimport {\n  GetPagesState,\n  GotoPageRoute,\n  HideLoadingProgressBarOnLoadFinished,\n  SetPageChainCode,\n  SetPageIpfsErrors,\n  SetPageIpfsState,\n  SetPagesCriticalError,\n  SetPagesMode,\n  SetPagesNewPageState,\n  SetPagesPageSlide,\n  SetPagesState,\n  SetPagesVisibility,\n  SetRPCProvider,\n  ShowLoadingProgressBarOnLoad,\n} from '../actions';\n\nconst initialPagesState: PagesStateModel = {\n  optionalProvider: undefined,\n  pageVisibility: true,\n  criticalErrorOccured: false,\n  currentPageId: generalConfigurations.defaultPage,\n  currentPageSlide: 0,\n  errorCode: undefined,\n  ipfsError: undefined,\n  ipfsReady: IpfsStatesEnum.IPFS_INITIALISING,\n  networkStatus: undefined,\n  networkChainCode: undefined,\n  isPageLoading: false,\n  pageMode: undefined,\n};\n\nexport function PagesReducers(\n  state: PagesStateModel = initialPagesState,\n  action: any\n) {\n  switch (action.type) {\n    case SetPagesState: {\n      const newState = {\n        ...state,\n        currentPageId:\n          'currentPageId' in action.payload\n            ? action.payload.currentPageId\n            : state.currentPageId,\n        networkStatus:\n          'networkStatus' in action.payload\n            ? action.payload.networkStatus\n            : state.networkStatus,\n        networkChainCode:\n          'networkChainCode' in action.payload\n            ? action.payload.networkChainCode\n            : state.networkChainCode,\n        currentPageSlide: state.currentPageSlide,\n        errorCode:\n          'errorCode' in action.payload ? action.payload.errorCode : undefined,\n      };\n      return newState;\n    }\n\n    case SetPagesMode: {\n      const newState = {\n        ...state,\n        pageMode: action.payload,\n      };\n      return newState;\n    }\n\n    case SetRPCProvider: {\n      const newState = {\n        ...state,\n        optionalProvider: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPagesVisibility: {\n      const newState = {\n        ...state,\n        pageVisibility: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPagesCriticalError: {\n      const newState = {\n        ...state,\n        criticalErrorOccured: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPageIpfsErrors: {\n      const newState = {\n        ...state,\n        ipfsError: action.payload,\n        ipfsReady: IpfsStatesEnum.IPFS_FAILED,\n      };\n      return newState;\n    }\n\n    case SetPageIpfsState: {\n      const newState = {\n        ...state,\n        ipfsReady: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPagesPageSlide: {\n      const newState = {\n        ...state,\n        currentPageSlide: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPagesNewPageState: {\n      const newState = {\n        ...state,\n        pageId: action.payload.currentPageId,\n        currentPageSlide: state.currentPageSlide,\n      };\n      return newState;\n    }\n\n    case SetPagesPageSlide: {\n      const newState = {\n        ...state,\n        currentPageSlide: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPageChainCode: {\n      const newState = {\n        ...state,\n        networkChainCode: action.payload,\n      };\n      return newState;\n    }\n\n    case ShowLoadingProgressBarOnLoad: {\n      const newState = {\n        ...state,\n        isPageLoading: true,\n      };\n      return newState;\n    }\n\n    case HideLoadingProgressBarOnLoadFinished: {\n      const newState = {\n        ...state,\n        isPageLoading: false,\n      };\n      return newState;\n    }\n\n    case GetPagesState: {\n      return state;\n    }\n\n    case GotoPageRoute: {\n      return {\n        ...state,\n        currentPageId: action.payload.pageId,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { UserModel, UserStateModel } from '../../models/states/user-interfaces';\nimport {\n  AddUser,\n  GetUserState,\n  RegisterUser,\n  RemoveUser,\n  RemoveUserError,\n  RemoveUserState,\n  SetUserError,\n  SetUserPoaps,\n  SetUserState,\n  UpdateUser,\n} from '../actions';\n\nconst initialUserState: UserStateModel = {\n  error: undefined,\n  loading: false,\n  success: undefined,\n  user: {} as UserModel,\n};\n\nexport function UserReducers(\n  state: UserStateModel = initialUserState,\n  action: any\n) {\n  switch (action.type) {\n    case SetUserError: {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    }\n\n    case SetUserPoaps: {\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          poapsResolved: action.payload.poapsResolved,\n          poaps: action.payload.poaps,\n          poapTokens: action.payload.poapTokens,\n        },\n        loading: false,\n      };\n    }\n\n    case SetUserState: {\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    }\n\n    case AddUser: {\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    }\n\n    case UpdateUser: {\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    }\n\n    case GetUserState: {\n      const newState = {\n        ...state,\n      };\n      return newState;\n    }\n\n    case RemoveUserError: {\n      return {\n        ...state,\n        loading: false,\n        error: undefined,\n      };\n    }\n\n    case RegisterUser: {\n      return {\n        ...state,\n        loading: true,\n        error: undefined,\n      };\n    }\n\n    case RemoveUser: {\n      return {\n        ...state,\n        user: {},\n      };\n    }\n\n    case RemoveUserState: {\n      return initialUserState;\n    }\n\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport {\n  PaymentModel,\n  PaymentStateModel,\n} from '../../models/states/payment-interfaces';\nimport {\n  UpsertOnePayment,\n  UpsertManyPayment,\n  RemoveOnePayment,\n  RemoveManyPayment,\n  RemoveAllPayment,\n  SetPaymentError,\n  UpdatePayment,\n  AddOnePayment,\n  SetEthUSDRates,\n  ArchiveAllPayment,\n  CancelledPayment,\n} from '../actions';\n\nexport function selectPaymentId(payment: PaymentModel): string {\n  return payment.id;\n}\n\nexport const adapter: EntityAdapter<PaymentModel> =\n  createEntityAdapter<PaymentModel>({\n    selectId: selectPaymentId,\n  });\n\nexport const initialPaymentState: PaymentStateModel = adapter.getInitialState({\n  error: undefined,\n  loading: false,\n  ethUsdPrice: '0.00',\n  paymentCancelled: false,\n});\n\nexport function PaymentReducers(\n  state: PaymentStateModel = initialPaymentState,\n  action: any\n) {\n  switch (action.type) {\n    case UpsertOnePayment:\n    case UpdatePayment: {\n      const stateChange = adapter.upsertOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case SetEthUSDRates: {\n      return {\n        ...state,\n        ethUsdPrice: action.payload,\n      };\n    }\n\n    case AddOnePayment: {\n      const stateChange = adapter.addOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: true,\n        paymentCancelled: false,\n      };\n    }\n\n    case UpsertManyPayment: {\n      const stateChange = adapter.upsertMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case RemoveOnePayment: {\n      const stateChange = adapter.removeOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case RemoveManyPayment: {\n      const stateChange = adapter.removeMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case RemoveAllPayment: {\n      const stateChange = adapter.removeAll(state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case ArchiveAllPayment: {\n      const payments = state.entities;\n      const updatedPayments = [];\n      for (const p of Object.keys(payments)) {\n        updatedPayments.push({ ...payments[p], archived: true });\n      }\n      const stateChange = adapter.upsertMany(updatedPayments, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case SetPaymentError: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case UpdatePayment: {\n      return {\n        ...state,\n        error: undefined,\n        loading: true,\n        paymentCancelled: false,\n      };\n    }\n\n    case CancelledPayment: {\n      return {\n        ...state,\n        error: undefined,\n        loading: false,\n        paymentCancelled: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSRegistrationStateModel } from '../../models/states/ens-registration-interfaces';\nimport {\n  UpsertOneENSRegistration,\n  UpsertManyENSRegistration,\n  RemoveOneENSRegistration,\n  RemoveManyENSRegistration,\n  RemoveAllENSRegistration,\n  SetENSRegistrationError,\n  UpdateENSRegistration,\n  AddOneENSRegistration,\n} from '../actions';\n\nexport function selectENSRegistrationId(\n  registration: DomainMetadataModel\n): string {\n  return registration.id;\n}\n\nexport const ensRegistrationAdapter: EntityAdapter<DomainMetadataModel> =\n  createEntityAdapter<DomainMetadataModel>({\n    selectId: selectENSRegistrationId,\n  });\n\nexport const initialENSRegistrationState: ENSRegistrationStateModel =\n  ensRegistrationAdapter.getInitialState({\n    error: undefined,\n    loading: false,\n  });\n\nexport function ENSRegistrationReducers(\n  state: ENSRegistrationStateModel = initialENSRegistrationState,\n  action: any\n) {\n  switch (action.type) {\n    case UpsertOneENSRegistration:\n    case UpdateENSRegistration: {\n      const stateChange = ensRegistrationAdapter.upsertOne(\n        action.payload,\n        state\n      );\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case AddOneENSRegistration: {\n      const stateChange = ensRegistrationAdapter.addOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    case UpsertManyENSRegistration: {\n      const stateChange = ensRegistrationAdapter.upsertMany(\n        action.payload,\n        state\n      );\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveOneENSRegistration: {\n      const stateChange = ensRegistrationAdapter.removeOne(\n        action.payload,\n        state\n      );\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveManyENSRegistration: {\n      const stateChange = ensRegistrationAdapter.removeMany(\n        action.payload,\n        state\n      );\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveAllENSRegistration: {\n      const stateChange = ensRegistrationAdapter.removeAll(state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case SetENSRegistrationError: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    }\n\n    case UpdateENSRegistration: {\n      return {\n        ...state,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSBookmarkStateModel } from '../../models/states/ens-bookmark-interfaces';\nimport {\n  UpsertOneENSBookmark,\n  UpsertManyENSBookmark,\n  RemoveOneENSBookmark,\n  RemoveManyENSBookmark,\n  RemoveAllENSBookmark,\n  SetENSBookmarkError,\n  UpdateENSBookmark,\n  AddOneENSBookmark,\n} from '../actions';\n\nexport function selectENSBookmarkId(bookmark: DomainMetadataModel): string {\n  return bookmark.id;\n}\n\nexport const ensBookmarkAdapter: EntityAdapter<DomainMetadataModel> =\n  createEntityAdapter<DomainMetadataModel>({\n    selectId: selectENSBookmarkId,\n  });\n\nexport const initialENSBookmarkState: ENSBookmarkStateModel =\n  ensBookmarkAdapter.getInitialState({\n    error: undefined,\n    loading: false,\n  });\n\nexport function ENSBookmarkReducers(\n  state: ENSBookmarkStateModel = initialENSBookmarkState,\n  action: any\n) {\n  switch (action.type) {\n    case UpsertOneENSBookmark:\n    case UpdateENSBookmark: {\n      const stateChange = ensBookmarkAdapter.upsertOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case AddOneENSBookmark: {\n      const stateChange = ensBookmarkAdapter.addOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    case UpsertManyENSBookmark: {\n      const stateChange = ensBookmarkAdapter.upsertMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveOneENSBookmark: {\n      const stateChange = ensBookmarkAdapter.removeOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveManyENSBookmark: {\n      const stateChange = ensBookmarkAdapter.removeMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveAllENSBookmark: {\n      const stateChange = ensBookmarkAdapter.removeAll(state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case SetENSBookmarkError: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    }\n\n    case UpdateENSBookmark: {\n      return {\n        ...state,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { CategoryModel } from 'src/app/models/category';\nimport { CategoriesStateModel } from 'src/app/models/states/categories-interfaces';\nimport {\n  UpsertOneCategory,\n  UpsertManyCategory,\n  RemoveOneCategory,\n  RemoveManyCategory,\n  RemoveAllCategory,\n  SetCategoryError,\n  UpdateCategory,\n  AddOneCategory,\n  SetCategoriesMetadata,\n  SetCategoriesRootVolumeData,\n} from '../actions';\n\nexport function selectCategoryId(category: CategoryModel): string {\n  return category.id;\n}\n\nexport const CategoryAdapter: EntityAdapter<CategoryModel> =\n  createEntityAdapter<CategoryModel>({\n    selectId: selectCategoryId,\n  });\n\nexport const initialCategoryState: CategoriesStateModel =\n  CategoryAdapter.getInitialState({\n    categoriesMetadata: undefined,\n    categoriesRootVolumeData: undefined,\n    error: undefined,\n    loading: false,\n  });\n\nexport function CategoryReducers(\n  state: CategoriesStateModel = initialCategoryState,\n  action: any\n) {\n  switch (action.type) {\n    case SetCategoriesRootVolumeData: {\n      return {\n        ...state,\n        categoriesRootVolumeData: action.payload,\n        loading: false,\n      };\n    }\n\n    case SetCategoriesMetadata: {\n      return {\n        ...state,\n        categoriesMetadata: action.payload,\n        loading: false,\n      };\n    }\n\n    case UpsertOneCategory:\n    case UpdateCategory: {\n      const stateChange = CategoryAdapter.upsertOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case AddOneCategory: {\n      const stateChange = CategoryAdapter.addOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    case UpsertManyCategory: {\n      const stateChange = CategoryAdapter.upsertMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveOneCategory: {\n      const stateChange = CategoryAdapter.removeOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveManyCategory: {\n      const stateChange = CategoryAdapter.removeMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveAllCategory: {\n      const stateChange = CategoryAdapter.removeAll(state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case SetCategoryError: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    }\n\n    case UpdateCategory: {\n      return {\n        ...state,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { NavigatorButtonsStateModel } from \"../../models/states/navigator-interfaces\";\n\nexport const getNavigatorButtonsState =\n  createFeatureSelector<NavigatorButtonsStateModel>(\"NavigatorButtonsState\");\n\nexport const getCurrentNavigatorButtonsState = createSelector(\n  getNavigatorButtonsState,\n  (state: NavigatorButtonsStateModel) => state\n);\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { NavigatorStateModel } from \"../../models/states/navigator-interfaces\";\n\nexport const getNavigatorState =\n  createFeatureSelector<NavigatorStateModel>(\"NavigatorState\");\n\nexport const getCurrentNavigatorState = createSelector(\n  getNavigatorState,\n  (state: NavigatorStateModel) => state\n);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { PagesStateModel } from '../../models/states/pages-interfaces';\n\nexport const getPagesState =\n  createFeatureSelector<PagesStateModel>('PagesState');\n\nexport const getCurrentPagesState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state\n);\n\nexport const getCurrentNetworkState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.networkStatus\n);\n\nexport const getCurrentPageMode = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.pageMode\n);\n\nexport const getCurrentPageVisibility = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.pageVisibility\n);\n\nexport const getCurrentNetworkChainId = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.networkChainCode\n);\n\nexport const getCurrentPageLoadState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.isPageLoading\n);\n\nexport const getCriticalErrorState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.criticalErrorOccured\n);\n\nexport const getIpfsState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.ipfsReady\n);\n\nexport const getIpfsError = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.ipfsError\n);\n\nexport const getCurrentErrorCode = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => {\n    if ('errorCode' in state === false) {\n      return undefined;\n    }\n    if (state.errorCode === undefined) {\n      return undefined;\n    }\n    return state.errorCode;\n  }\n);\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { UserStateModel } from \"../../models/states/user-interfaces\";\n\nexport const getUserState = createFeatureSelector<UserStateModel>(\"UserState\");\nexport const getUser = createSelector(getUserState, (state) => state);\nexport const getCurrentUserState = createSelector(\n  getUserState,\n  (state: UserStateModel) => state\n);\nexport const getCurrentUser = createSelector(\n  getUser,\n  (state: UserStateModel) => state.user\n);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport {\n  PaymentModel,\n  PaymentStateModel,\n} from '../../models/states/payment-interfaces';\n\nexport const getPaymentStateFull =\n  createFeatureSelector<PaymentStateModel>('PaymentState');\n\nexport const getPaymentState = createSelector(\n  getPaymentStateFull,\n  (state) => state\n);\n\nexport const getEthUsdPrice = createSelector(\n  getPaymentStateFull,\n  (state) => state.ethUsdPrice\n);\n\nexport const getPayments = createSelector(getPaymentStateFull, (state) =>\n  Object.values(state.entities)\n);\n\nexport const getPaymentIds = createSelector(\n  getPaymentStateFull,\n  (state) => state.ids\n);\n\nexport const selectPayment = (id: number) =>\n  createSelector(getPaymentStateFull, (state) => {\n    if ((state.ids as number[]).indexOf(id) <= -1) {\n      return undefined;\n    }\n    return state.entities[id] as PaymentModel;\n  });\n\nexport const getPaymentStateError = createSelector(\n  getPaymentStateFull,\n  (state) => state.error\n);\n\nexport const getPaymentStateLoading = createSelector(\n  getPaymentStateFull,\n  (state) => state.loading\n);\n\nexport const getPendingPayments = createSelector(\n  getPaymentStateFull,\n  (state) => {\n    const pendingPs: PaymentModel[] = [];\n    const ps = Object.values(state.entities) as PaymentModel[];\n    for (const p of ps) {\n      if (p.paymentStatus === false) {\n        pendingPs.push(p);\n      }\n    }\n    if (pendingPs.length <= 0) {\n      return null;\n    }\n    return pendingPs;\n  }\n);\n\nexport const getArchivedPayments = createSelector(\n  getPaymentStateFull,\n  (state) => {\n    const archivedPs: PaymentModel[] = [];\n    const ps = Object.values(state.entities) as PaymentModel[];\n    for (const p of ps) {\n      if (p.archived === true) {\n        archivedPs.push(p);\n      }\n    }\n    if (archivedPs.length <= 0) {\n      return null;\n    }\n    return archivedPs;\n  }\n);\n\nexport const isPaymentDuplicate = (id: string) =>\n  createSelector(getPaymentStateFull, (state) => {\n    if (Object.keys(state.entities).indexOf(id) > -1) {\n      return state.entities[id] as PaymentModel;\n    }\n    return false;\n  });\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSRegistrationStateModel } from '../../models/states/ens-registration-interfaces';\n\nexport const getENSRegistrationStateFull =\n  createFeatureSelector<ENSRegistrationStateModel>('ENSRegistrationState');\n\nexport const getENSRegistrationState = createSelector(\n  getENSRegistrationStateFull,\n  (state) => state\n);\n\nexport const getENSRegistrations = createSelector(\n  getENSRegistrationStateFull,\n  (state) => Object.values(state.entities)\n);\n\nexport const getENSRegistrationIds = createSelector(\n  getENSRegistrationStateFull,\n  (state) => state.ids\n);\n\nexport const selectENSRegistration = (id: number) =>\n  createSelector(getENSRegistrationStateFull, (state) => {\n    if ((state.ids as number[]).indexOf(id) <= -1) {\n      return undefined;\n    }\n    return state.entities[id] as DomainMetadataModel;\n  });\n\nexport const getENSRegistrationStateError = createSelector(\n  getENSRegistrationStateFull,\n  (state) => state.error\n);\n\nexport const getENSRegistrationStateLoading = createSelector(\n  getENSRegistrationStateFull,\n  (state) => state.loading\n);\n\nexport const isENSRegistrationDuplicate = (id: string) =>\n  createSelector(getENSRegistrationStateFull, (state) => {\n    if (Object.keys(state.entities).indexOf(id) > -1) {\n      return state.entities[id] as DomainMetadataModel;\n    }\n    return false;\n  });\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { ENSBookmarkStateModel } from '../../models/states/ens-bookmark-interfaces';\n\nexport const getENSBookmarkStateFull =\n  createFeatureSelector<ENSBookmarkStateModel>('ENSBookmarkState');\n\nexport const getENSBookmarkState = createSelector(\n  getENSBookmarkStateFull,\n  (state) => state\n);\n\nexport const getENSBookmarks = createSelector(\n  getENSBookmarkStateFull,\n  (state) => Object.values(state.entities)\n);\n\nexport const getENSBookmarkIds = createSelector(\n  getENSBookmarkStateFull,\n  (state) => state.ids\n);\n\nexport const selectENSBookmark = (id: number) =>\n  createSelector(getENSBookmarkStateFull, (state) => {\n    if ((state.ids as number[]).indexOf(id) <= -1) {\n      return undefined;\n    }\n    return state.entities[id] as DomainMetadataModel;\n  });\n\nexport const getENSBookmarkStateError = createSelector(\n  getENSBookmarkStateFull,\n  (state) => state.error\n);\n\nexport const getENSBookmarkStateLoading = createSelector(\n  getENSBookmarkStateFull,\n  (state) => state.loading\n);\n\nexport const isENSBookmarkDuplicate = (id: string) =>\n  createSelector(getENSBookmarkStateFull, (state) => {\n    if (Object.keys(state.entities).indexOf(id) > -1) {\n      return state.entities[id] as DomainMetadataModel;\n    }\n    return false;\n  });\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DomainMetadataModel } from 'src/app/models/domains';\nimport { CategoriesStateModel } from 'src/app/models/states/categories-interfaces';\n\nexport const getCategoryStateFull =\n  createFeatureSelector<CategoriesStateModel>('CategoriesState');\n\nexport const getCategoryState = createSelector(\n  getCategoryStateFull,\n  (state) => state\n);\n\nexport const getCategorys = createSelector(getCategoryStateFull, (state) =>\n  Object.values(state.entities)\n);\n\nexport const getCategoryIds = createSelector(\n  getCategoryStateFull,\n  (state) => state.ids\n);\n\nexport const selectCategory = (id: number) =>\n  createSelector(getCategoryStateFull, (state) => {\n    if ((state.ids as number[]).indexOf(id) <= -1) {\n      return undefined;\n    }\n    return state.entities[id] as DomainMetadataModel;\n  });\n\nexport const getCategoryStateError = createSelector(\n  getCategoryStateFull,\n  (state) => state.error\n);\n\nexport const getCategoryStateLoading = createSelector(\n  getCategoryStateFull,\n  (state) => state.loading\n);\n\nexport const isCategoryDuplicate = (id: string) =>\n  createSelector(getCategoryStateFull, (state) => {\n    if (Object.keys(state.entities).indexOf(id) > -1) {\n      return state.entities[id] as DomainMetadataModel;\n    }\n    return false;\n  });\n","<div mat-dialog-content>\n  <ng-container *ngIf=\"data.showSpinner === true\">\n    <app-icon\n      *ngIf=\"data.customIcon !== undefined && data.lightColour === true\"\n      [iconSize]=\"data.spinnerSize\"\n      class=\"cos-padding-3\"\n    >\n      <ng-container\n        *ngIf=\"\n          data.customIcon !== undefined &&\n          data.customIcon === '' &&\n          data.matIcon !== undefined &&\n          data.matIcon === ''\n        \"\n      >\n        lspin\n      </ng-container>\n      <ng-container\n        *ngIf=\"data.customIcon !== undefined && data.customIcon !== ''\"\n      >\n        {{ data.customIcon }}\n      </ng-container>\n    </app-icon>\n    <ng-container *ngIf=\"data.matIcon !== undefined && data.matIcon !== ''\">\n      <div\n        fxLayoutAlign=\"center center\"\n        fxFlexAlign=\"center\"\n        class=\"cos-fluid-width cos-fluid-height cos-padding-4\"\n      >\n        <mat-icon color=\"primary\" class=\"cos-large-icon\">\n          {{ data.matIcon }}\n        </mat-icon>\n      </div>\n    </ng-container>\n    <app-icon\n      *ngIf=\"data.customIcon !== undefined && data.lightColour === false\"\n      [iconSize]=\"data.spinnerSize\"\n      class=\"cos-padding-3\"\n    >\n      <ng-container *ngIf=\"data.customIcon === ''\"> spin </ng-container>\n      <ng-container *ngIf=\"data.customIcon !== ''\">\n        {{ data.customIcon }}\n      </ng-container>\n    </app-icon>\n  </ng-container>\n  <div\n    [ngClass]=\"textAlign\"\n    *ngIf=\"data.titleText !== undefined && data.titleText !== ''\"\n    class=\"cos-margin-1 cos-no-margin-top cos-no-margin-left cos-no-margin-right cos-body-0\"\n  >\n    <b>\n      {{ data.titleText | translate }}\n    </b>\n  </div>\n  <div\n    *ngIf=\"data.titleText === undefined || data.titleText === ''\"\n    [ngClass]=\"textAlign\"\n    class=\"cos-margin-1 cos-no-margin-top cos-no-margin-left cos-no-margin-right\"\n  >\n    {{ data.message | translate }}\n  </div>\n  <div\n    [ngClass]=\"textAlign\"\n    *ngIf=\"data.subText !== ''\"\n    class=\"cos-margin-4 cos-no-margin-top cos-no-margin-left cos-no-margin-right\"\n  >\n    {{ data.subText | translate }}\n  </div>\n</div>\n<div\n  mat-dialog-actions\n  [fxLayoutAlign]=\"data.textAlign === 'center' ? 'center center' : 'end center'\"\n>\n  <ng-container *ngIf=\"data.showYesNo !== undefined && data.showYesNo === true\">\n    <div fxFlex fxLayout=\"row\">\n      <button\n        (click)=\"yesNoPressed(false)\"\n        fxFlex\n        mat-button\n        class=\"cos-body-4\"\n      >\n        <b>\n          {{ \"BUTTON.CANCEL\" | translate }}\n        </b>\n      </button>\n      <button (click)=\"yesNoPressed(true)\" fxFlex mat-button class=\"cos-body-4\">\n        <b>\n          {{ \"BUTTON.PROCEED\" | translate }}\n        </b>\n      </button>\n    </div>\n  </ng-container>\n  <ng-container\n    *ngIf=\"\n      data.showYesNo === undefined ||\n      (data.showYesNo !== undefined && data.showYesNo === false)\n    \"\n  >\n    <button fxFlex (click)=\"goToLink()\" mat-button class=\"cos-body-4\">\n      <b>\n        {{\n          (data.buttonTitle !== undefined && data.buttonTitle !== \"\"\n            ? data.buttonTitle\n            : \"BUTTON.CLOSE\"\n          ) | translate\n        }}\n      </b>\n    </button>\n  </ng-container>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { PagesEnum } from 'src/app/models/states/pages-interfaces';\nimport { PagesFacadeService } from 'src/app/store/facades';\n\n@Component({\n  selector: 'app-generic-dialog',\n  templateUrl: './generic-dialog.component.html',\n  styleUrls: ['./generic-dialog.component.scss'],\n})\nexport class GenericDialogComponent implements OnInit {\n  overlaysCountOnInit = 0;\n  closedByButton = false;\n  yesNoButton: Subject<boolean> = new Subject();\n\n  constructor(\n    protected router: Router,\n    protected pagesFacadeService: PagesFacadeService,\n    public genericDialogRef: MatDialogRef<GenericDialogComponent>,\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      message: string;\n      showYesNo?: boolean;\n      showSpinner?: boolean;\n      lightColour?: boolean;\n      spinnerSize?: number;\n      customIcon?: string;\n      matIcon?: string;\n      subText?: string;\n      titleText?: string;\n      textAlign?: string;\n      buttonTitle?: string;\n      buttonLink?: string;\n      buttonLinkPageRef?: PagesEnum;\n      goToOnExit?: string;\n      goToOnExitPage?: PagesEnum;\n    }\n  ) {}\n\n  ngOnInit() {\n    this.genericDialogRef.backdropClick().subscribe(() => {\n      if (this.closedByButton === true) {\n        return;\n      }\n      this.closeDialog();\n    });\n    const overlays = document.getElementsByClassName(\n      'cdk-overlay-dark-backdrop'\n    );\n    const wrappers = document.getElementsByClassName(\n      'cdk-global-overlay-wrapper'\n    );\n    this.overlaysCountOnInit = overlays.length;\n    if (overlays.length > 1) {\n      for (let i = 1; i < overlays.length; i++) {\n        overlays[i].remove();\n      }\n      const attr = document.createAttribute('style');\n      attr.value = 'z-index: 1001 !important;';\n      overlays[0].attributes.setNamedItem(attr);\n      const existingAttr =\n        wrappers[wrappers.length - 1].attributes.getNamedItem('style');\n      const newAttr = document.createAttribute('style');\n      newAttr.value = existingAttr.value + ' z-index: 1001 !important;';\n      wrappers[wrappers.length - 1].attributes.setNamedItem(newAttr);\n      return;\n    }\n  }\n\n  closeDialog() {\n    const overlays = document.getElementsByClassName(\n      'cdk-overlay-dark-backdrop'\n    );\n    const wrappers = document.getElementsByClassName(\n      'cdk-global-overlay-wrapper'\n    );\n    if (this.overlaysCountOnInit > 1) {\n      const attr = document.createAttribute('style');\n      attr.value = 'z-index: 1000 !important;';\n      overlays[0].attributes.setNamedItem(attr);\n      const existingAttr =\n        wrappers[wrappers.length - 1].attributes.getNamedItem('style');\n      const newAttr = document.createAttribute('style');\n      newAttr.value = existingAttr.value + ' z-index: 1001 !important;';\n      wrappers[wrappers.length - 1].attributes.setNamedItem(newAttr);\n      this.genericDialogRef.close();\n      return;\n    }\n    if (this.closedByButton === false && this.data.goToOnExit !== undefined) {\n      this.pagesFacadeService.gotoPageRoute(\n        this.data.goToOnExit,\n        this.data.goToOnExitPage\n      );\n    }\n  }\n\n  yesNoPressed(type: boolean) {\n    this.yesNoButton.next(type);\n    this.yesNoButton.complete();\n  }\n\n  goToLink() {\n    this.closedByButton = true;\n    if (this.data.buttonLink !== undefined) {\n      this.pagesFacadeService.gotoPageRoute(\n        this.data.buttonLink,\n        this.data.buttonLinkPageRef\n      );\n    }\n    this.genericDialogRef.close();\n  }\n\n  get textAlign() {\n    if (this.data.textAlign === '') {\n      return '';\n    } else if (this.data.textAlign === 'right') {\n      return 'cos-right-text';\n    } else if (this.data.textAlign === 'center') {\n      return 'cos-center-text';\n    }\n  }\n}\n","import {\n  AfterViewChecked,\n  Component,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport { from, interval, of, Subject } from 'rxjs';\nimport { map, switchMap, takeUntil } from 'rxjs/operators';\nimport { infiniteLoopedIcons } from 'src/app/configurations';\nimport { NonceTypesEnum } from 'src/app/models/states/wallet-interfaces';\nimport { IconRegistryService, WalletService } from 'src/app/services';\n\ndeclare const APNG: any;\n\n@Component({\n  selector: 'app-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent implements OnDestroy, AfterViewChecked {\n  @Input() iconSize = 24;\n  @ViewChild('icon', { static: false }) icon: any;\n  isVisible = false;\n  setIcon;\n  iconsRegistry;\n  iconAnimation;\n  checkIconSubscription;\n  iconId;\n\n  constructor(\n    public iconRegistryService: IconRegistryService,\n    public walletService: WalletService\n  ) {\n    this.iconsRegistry = this.iconRegistryService.injectCustomIcons();\n    this.iconId = walletService.produceNonce(NonceTypesEnum.SERIAL);\n    const stopCheck: Subject<boolean> = new Subject<boolean>();\n    this.checkIconSubscription = interval(1)\n      .pipe(\n        takeUntil(stopCheck),\n        switchMap((i) => {\n          if (this.icon === undefined) {\n            return of(false);\n          }\n          if (\n            'nativeElement' in this.icon === false ||\n            this.icon.nativeElement.innerText === ''\n          ) {\n            return of(false);\n          }\n          this.setIcon = this.icon.nativeElement.innerText.replaceAll(' ', '');\n          const canvas = document.getElementById(\n            'canvas-icon-' + this.setIcon + this.iconId\n          ) as HTMLCanvasElement;\n          if (canvas === null) {\n            return of(false);\n          }\n          return from(\n            APNG.parseURL('../../../' + this.iconsRegistry[this.setIcon])\n          );\n        }),\n        map((apng: any) => {\n          if (apng === false) {\n            return;\n          }\n          const canvas = document.getElementById(\n            'canvas-icon-' + this.setIcon + this.iconId\n          ) as HTMLCanvasElement;\n          canvas.width = apng.width;\n          canvas.height = apng.height;\n          this.iconAnimation = apng;\n          this.iconAnimation.addContext(canvas.getContext('2d'));\n          this.playIcon();\n          stopCheck.next(false);\n          stopCheck.complete();\n          return;\n        })\n      )\n      .subscribe();\n  }\n\n  playIcon() {\n    this.iconAnimation.play();\n    if (infiniteLoopedIcons.indexOf(this.setIcon) > -1) {\n      return;\n    }\n    setTimeout(() => {\n      this.iconAnimation.rewind();\n    }, this.iconAnimation.frames.length * 25);\n    return;\n  }\n\n  ngAfterViewChecked() {\n    if (this.iconAnimation === undefined && this.icon !== undefined) {\n      return;\n    }\n\n    if (\n      this.isVisible == false &&\n      this.icon.nativeElement.offsetParent != null\n    ) {\n      this.isVisible = true;\n      this.playIcon();\n    } else if (\n      this.isVisible == true &&\n      this.icon.nativeElement.offsetParent == null\n    ) {\n      this.isVisible = false;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.checkIconSubscription) {\n      this.checkIconSubscription.unsubscribe();\n      this.checkIconSubscription = undefined;\n    }\n  }\n}\n","<div #icon style=\"overflow: hidden; width: 0; height: 0\">\n  <ng-content></ng-content>\n</div>\n<div\n  id=\"canvas-icon-container\"\n  class=\"co-icon\"\n  [style.height]=\"iconSize + 'px'\"\n  [style.width]=\"iconSize + 'px'\"\n>\n  <canvas\n    id=\"{{ 'canvas-icon-' + setIcon + iconId }}\"\n    [style.height]=\"iconSize + 'px'\"\n    [style.width]=\"iconSize + 'px'\"\n  >\n  </canvas>\n</div>\n","import { Subject } from \"rxjs\";\n\nexport class BootController {\n  private static instance: BootController;\n  private _reboot: Subject<boolean> = new Subject();\n  private reboot$ = this._reboot.asObservable();\n\n  static getbootControl() {\n    if (!BootController.instance) {\n      BootController.instance = new BootController();\n    }\n    return BootController.instance;\n  }\n\n  public watchReboot() {\n    return this.reboot$;\n  }\n\n  public restart() {\n    this._reboot.next(true);\n  }\n}\n","export const environment = { production: true, development: false, deployed: true, test: false, local: false, chrome: false, defaultChain: 'homestead', baseUrl: 'https://predomain.eth.limo', validChainIds: { '5': 'goerli', '1': 'homestead', }, networks: { goerli: { networkId: 'goerli', networkName: 'Goerli Testnet', chainId: 5, providerKey: '[ \"8R44ckgzRQzE9kFCtp7QtGQHU6JcAbdy\", \"r82XAy-r3Q6quUsMViJzfGF5CcnKfKWz\", \"MzyOIUDKmR27GrfIFOLe0MKDHSRWvS4x\", \"tNtGnCC2yhXCcYeSQtNArj9RiITWp8aB\", \"RBfJZTGtvAKmZtzgxJsZX9N4UqkfN6Yc\", \"quPdmnozs0xsQsV-z7joxh28JZ1ZNZUj\", \"cDE_nnY3Cmulv6bcBHpUYoPZNl7gO-gt\", \"axpK6yj_VfQ8D7aP3F1l5js9X_fMg3Iw\", \"gn1-taCzEPP-L6zxsjLDT19lgFELique\", \"SbakDEKRcQwdl5JC-nJigVXLlnupyrTa\" ]', ensApp: 'https://app.ens.domains', ensMetadataAPI: 'https://metadata.ens.domains/goerli/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/', ensGraphQLAPI: 'https://api.thegraph.com/subgraphs/name/ensdomains/ensgoerli', poapGraphQLAPI: 'https://api.thegraph.com/subgraphs/name/poap-xyz/poap-xdai', }, homestead: { networkId: 'homestead', networkName: 'Mainnet', chainId: 1, providerKey: '[ \"8R44ckgzRQzE9kFCtp7QtGQHU6JcAbdy\", \"r82XAy-r3Q6quUsMViJzfGF5CcnKfKWz\", \"MzyOIUDKmR27GrfIFOLe0MKDHSRWvS4x\", \"tNtGnCC2yhXCcYeSQtNArj9RiITWp8aB\", \"RBfJZTGtvAKmZtzgxJsZX9N4UqkfN6Yc\", \"quPdmnozs0xsQsV-z7joxh28JZ1ZNZUj\", \"cDE_nnY3Cmulv6bcBHpUYoPZNl7gO-gt\", \"axpK6yj_VfQ8D7aP3F1l5js9X_fMg3Iw\", \"gn1-taCzEPP-L6zxsjLDT19lgFELique\", \"SbakDEKRcQwdl5JC-nJigVXLlnupyrTa\" ]', ensApp: 'https://app.ens.domains', ensMetadataAPI: 'https://metadata.ens.domains/mainnet/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/', ensGraphQLAPI: 'https://api.thegraph.com/subgraphs/name/ensdomains/ens', poapGraphQLAPI: 'https://api.thegraph.com/subgraphs/name/poap-xyz/poap-xdai', }, }, };\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PathResolveService } from './services';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full',\n  },\n  {\n    path: 'home',\n    loadChildren: () =>\n      import('./modules/home.module').then((m) => m.HomeModule),\n  },\n  {\n    path: 'domain/:domain',\n    loadChildren: () =>\n      import('./modules/domain.module').then((m) => m.DomainModule),\n  },\n  {\n    path: 'profile/:user',\n    loadChildren: () =>\n      import('./modules/profile.module').then((m) => m.ProfileModule),\n  },\n  {\n    path: 'checkout',\n    loadChildren: () =>\n      import('./modules/checkout.module').then((m) => m.CheckoutModule),\n  },\n  {\n    path: 'category/:category',\n    loadChildren: () =>\n      import('./modules/category.module').then((m) => m.CategoryModule),\n  },\n  {\n    path: 'checkout/:serial',\n    loadChildren: () =>\n      import('./modules/checkout.module').then((m) => m.CheckoutModule),\n  },\n  {\n    path: '**',\n    resolve: {\n      path: PathResolveService,\n    },\n    loadChildren: () =>\n      import('./modules/not-found.module').then((m) => m.NotFoundModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","export enum NetworkStatusEnum {\n\tOFFLINE,\n\tONLINE,\n}\n","<div\n  *ngIf=\"(pageLoadingState | async) === true\"\n  class=\"co-progress-bar cos-fluid-width cos-pos-fixed cos-pos-top-reset\"\n>\n  <mat-progress-bar\n    class=\"cos-main-progress-bar\"\n    mode=\"indeterminate\"\n    [value]=\"0\"\n  ></mat-progress-bar>\n</div>\n<div [style.height]=\"getHeight()\">\n  <router-outlet> </router-outlet>\n</div>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  HostListener,\n  AfterViewInit,\n  HostBinding,\n  DoCheck,\n} from '@angular/core';\nimport { MatTab } from '@angular/material/tabs';\nimport {\n  ActivatedRoute,\n  ActivatedRouteSnapshot,\n  Router,\n} from '@angular/router';\nimport { PagesFacadeService } from './store/facades/pages.facades';\nimport { NetworkStatusEnum } from './models/states/pages-interfaces/network-status.enum';\nimport { IconRegistryService, UserSessionService } from './services';\nimport { of } from 'rxjs';\nimport { PageModesEnum, PagesEnum } from './models/states/pages-interfaces';\nimport { generalConfigurations } from './configurations';\n\nconst globalAny: any = global;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, DoCheck, AfterViewInit {\n  @HostBinding('class') className = '';\n  @ViewChild('navigation', { static: true }) navigation: MatTab;\n  lightMode = false;\n\n  @HostListener('window:online', ['$event'])\n  onNetworkOnline(target) {\n    this.pagesFacade.newNetworkState({\n      networkStatus: NetworkStatusEnum.ONLINE,\n    });\n  }\n\n  @HostListener('window:offline', ['$event'])\n  onNetworkOffline(target) {\n    this.pagesFacade.newNetworkState({\n      networkStatus: NetworkStatusEnum.OFFLINE,\n    });\n  }\n\n  constructor(\n    protected router: Router,\n    protected activatedRoute: ActivatedRoute,\n    protected userSessionService: UserSessionService,\n    protected iconsRegistryService: IconRegistryService,\n    protected pagesFacade: PagesFacadeService\n  ) {\n    this.pagesFacade.startEffects();\n  }\n\n  ngOnInit() {\n    const cId = this.userSessionService.getDefaultChainId();\n    this.pagesFacade.setNetworkChainCode(cId, false);\n    let routeArr = document.location.href.split('/');\n    routeArr = routeArr.slice(4, routeArr.length);\n    let primaryDomain;\n    if (document.location.href.indexOf('//localhost') <= -1) {\n      primaryDomain = document.location.href.split('https://')[1].split('.')[0];\n    }\n    if (\n      primaryDomain !== undefined &&\n      primaryDomain !== generalConfigurations.appName &&\n      document.location.href.indexOf(\n        'https://' + generalConfigurations.appStagingName + '.eth'\n      ) <= -1\n    ) {\n      this.pagesFacade.setPageMode(PageModesEnum.PROFILE);\n      this.pagesFacade.gotoPageRoute(\n        'profile/' + primaryDomain + '.eth',\n        PagesEnum.PROFILE\n      );\n      return;\n    }\n    this.pagesFacade.setPageMode(PageModesEnum.DEFAULT);\n    this.pagesFacade.gotoPageRoute(\n      routeArr.join('/'),\n      routeArr[0].toUpperCase() as any\n    );\n  }\n\n  ngDoCheck(): void {\n    const cdk = document.getElementsByClassName('cdk-overlay-container');\n    if (cdk.length > 0 && this.lightMode === true) {\n      cdk[0].classList.add('light-mode');\n    }\n  }\n\n  ngAfterViewInit() {\n    if (navigator.onLine === true) {\n      this.pagesFacade.newNetworkState({\n        networkStatus: NetworkStatusEnum.ONLINE,\n      });\n    } else {\n      this.pagesFacade.newNetworkState({\n        networkStatus: NetworkStatusEnum.OFFLINE,\n      });\n    }\n  }\n\n  getHeight() {\n    return window.innerHeight + 'px';\n  }\n\n  get pageLoadingState() {\n    if (this.pagesFacade === undefined) {\n      return of(true);\n    }\n    return this.pagesFacade.pageLoadingState$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { NavigatorStateModel } from '../../models/states/navigator-interfaces';\n\n@Injectable()\nexport class NavigatorEffects {\n  constructor(\n    private actions$: Actions,\n    public store: Store<NavigatorStateModel>\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RpcService {\n  constructor() {}\n\n  loadRpc() {\n    return localStorage.getItem('canvas-rpc');\n  }\n\n  saveRpc(rpcData: RPCProviderModel) {\n    localStorage.setItem('canvas-rpc', JSON.stringify(rpcData));\n  }\n\n  removeRPC() {\n    localStorage.removeItem('canvas-rpc');\n  }\n}\n","import { of } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\nimport { Injectable, NgZone } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  Router,\n  ActivatedRoute,\n  NavigationStart,\n  NavigationEnd,\n  NavigationError,\n} from '@angular/router';\nimport {\n  GotoPageRoute,\n  InitEffectsCategory,\n  InitEffectsENSBookmark,\n  InitEffectsENSRegistration,\n  InitEffectsPages,\n  InitEffectsPayments,\n  InitEffectsUserState,\n  PageGotoRoute,\n  PagesEffectsInit,\n  PagesNetworkOfflineStateInvoke,\n  PagesNetworkStateSet,\n  PagesSetChainCode,\n  PagesSetCriticalError,\n  PagesSetRPCProvider,\n  PagesSetVisibility,\n  SetPageChainCode,\n  SetPagesCriticalError,\n  SetPagesNetworkState,\n  SetPagesNetworkStateOffline,\n  SetRPCProvider,\n  UserRemove,\n} from '../actions';\nimport { getCurrentPagesState, getCurrentUser } from '../selectors';\nimport {\n  NetworkStatusEnum,\n  PagesStateModel,\n} from '../../models/states/pages-interfaces';\nimport { BootController } from '../../../boot-control';\nimport {\n  CategoryFacadeService,\n  ENSBookmarkFacadeService,\n  ENSRegistrationFacadeService,\n  PagesFacadeService,\n  PaymentFacadeService,\n  UserFacadeService,\n} from '../facades';\nimport { GenericDialogComponent } from '../../widgets/generic-dialog';\nimport { environment } from '../../../environments/environment';\nimport { UserService, UserSessionService } from '../../services';\nimport {\n  catchError,\n  delay,\n  filter,\n  map,\n  switchMap,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\nimport { RpcService } from 'src/app/services/rpc';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class PagesEffects {\n  constructor(\n    protected actions$: Actions,\n    protected route: Router,\n    protected activatedRoute: ActivatedRoute,\n    protected store: Store<PagesStateModel>,\n    protected userSessionService: UserSessionService,\n    protected pagesFacade: PagesFacadeService,\n    protected paymentFacade: PaymentFacadeService,\n    protected ensBookmarksFacade: ENSBookmarkFacadeService,\n    protected ensRegistrationFacade: ENSRegistrationFacadeService,\n    protected categoriesFacade: CategoryFacadeService,\n    protected userFacade: UserFacadeService,\n    protected userService: UserService,\n    protected rpcService: RpcService,\n    public dialog: MatDialog,\n    public ngZone: NgZone\n  ) {\n    document.addEventListener(\n      'visibilitychange',\n      () => {\n        if (document.hidden) {\n          this.store.dispatch(new PagesSetVisibility(false));\n        } else {\n          this.store.dispatch(new PagesSetVisibility(true));\n        }\n      },\n      false\n    );\n  }\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesEffectsInit>(InitEffectsPages),\n        switchMap((p) => {\n          return this.route.events.pipe(\n            takeUntil(\n              this.ngZone.runOutsideAngular(() => {\n                return BootController.getbootControl().watchReboot();\n              })\n            )\n          );\n        }),\n        map((e: any) => {\n          if (e instanceof NavigationStart) {\n            if ((e as NavigationStart).url !== '/') {\n              this.pagesFacade.showLoadingProgressBar();\n            }\n          }\n          if (e instanceof NavigationEnd) {\n            setTimeout(() => {\n              this.pagesFacade.hideLoadingProgressBar();\n            }, 1500);\n          }\n          if (e instanceof NavigationError) {\n            setTimeout(() => {\n              this.pagesFacade.hideLoadingProgressBar();\n            }, 1500);\n          }\n          const chainId =\n            environment.networks[environment.defaultChain].chainId;\n          if (chainId !== globalAny.chainId) {\n            this.assessProviderChanges(chainId);\n          }\n        })\n      ),\n    { dispatch: false }\n  );\n\n  provideRPCSet$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesSetRPCProvider>(SetRPCProvider),\n        map((action) => {\n          const chainId =\n            environment.networks[environment.defaultChain].chainId;\n          if (action.payload === undefined) {\n            this.createProvider(chainId);\n            this.rpcService.removeRPC();\n            return;\n          }\n          this.createProvider(chainId, action.payload);\n          this.rpcService.saveRpc(action.payload);\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  networkStatus$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesNetworkStateSet>(SetPagesNetworkState),\n        map((networkState) => {\n          if (\n            networkState.payload.networkStatus === NetworkStatusEnum.OFFLINE\n          ) {\n            this.store.dispatch(new PagesNetworkOfflineStateInvoke());\n          }\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  networkStatusOffline$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesNetworkOfflineStateInvoke>(SetPagesNetworkStateOffline),\n        withLatestFrom(this.store.pipe(select(getCurrentPagesState)) as any),\n        map((networkAndPageState) => {\n          const [network, pageState] = networkAndPageState;\n          if (this.dialog.openDialogs.length > 0) {\n            return;\n          }\n          return;\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  networkChangedId$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesSetChainCode>(SetPageChainCode),\n        withLatestFrom(\n          this.store.pipe(select(getCurrentPagesState)),\n          this.store.pipe(select(getCurrentUser))\n        ),\n        delay(250),\n        map((networkAndPageState) => {\n          const [action, pageState, userData] = networkAndPageState;\n          if (\n            action.payload === undefined ||\n            action.payload in environment.validChainIds === false ||\n            action.payload !==\n              environment.networks[environment.defaultChain].chainId\n          ) {\n            this.ngZone.run(() => {\n              const dialogRef = this.dialog.open(GenericDialogComponent, {\n                data: {\n                  message: 'GENERIC.NETWORK_CHANGED_INCOMPATIBLE',\n                },\n                panelClass: 'cos-generic-dialog',\n              });\n            });\n            this.store.dispatch(new UserRemove());\n            return;\n          }\n          this.assessProviderChanges(action.payload);\n          return;\n        })\n      ),\n    { dispatch: false }\n  );\n\n  pageCriticalError$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesSetCriticalError>(SetPagesCriticalError),\n        filter((action) => action.redirect === true),\n        map((action) => {\n          this.route.navigateByUrl('not-found');\n          return;\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  gotoPageRoute$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PageGotoRoute>(GotoPageRoute),\n        map((route) => {\n          if (route.payload.route !== 'not-found') {\n            this.pagesFacade.setPageCriticalError(false, false);\n          }\n          this.route.navigateByUrl(route.payload.route);\n          return;\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  createProvider(chainId: number, providerData: RPCProviderModel = null) {\n    const newProvider = this.userSessionService.getUserSessionProvider(\n      chainId,\n      providerData\n    );\n    globalAny.chainId = chainId;\n    globalAny.canvasProvider = newProvider;\n    this.initiateOtherEffects();\n  }\n\n  assessProviderChanges(chainId: number) {\n    const providerData = this.rpcService.loadRpc();\n    if (\n      (providerData === null || providerData === undefined) &&\n      globalAny.canvasProvider === undefined\n    ) {\n      this.createProvider(chainId);\n    } else {\n      this.store.dispatch(new PagesSetRPCProvider(JSON.parse(providerData)));\n    }\n  }\n\n  initiateOtherEffects() {\n    this.paymentFacade.startEffects();\n    this.ensBookmarksFacade.startEffects();\n    this.ensRegistrationFacade.startEffects();\n    this.categoriesFacade.startEffects();\n    this.userFacade.startEffects();\n    globalAny.canvasEffectsInitialised = {\n      [InitEffectsPages]: false,\n      [InitEffectsPayments]: false,\n      [InitEffectsUserState]: false,\n      [InitEffectsENSBookmark]: false,\n      [InitEffectsENSRegistration]: false,\n      [InitEffectsCategory]: false,\n    };\n  }\n}\n","import { of } from 'rxjs';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport {\n  map,\n  switchMap,\n  catchError,\n  delay,\n  timeout,\n  filter,\n} from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Router } from '@angular/router';\nimport {\n  TranslationService,\n  TrezorService,\n  UserService,\n  UserSessionService,\n} from '../../services';\nimport {\n  InitEffectsUserState,\n  RegisterUser,\n  RemoveUser,\n  UserAdd,\n  UserEffectsInit,\n  UserErrorSet,\n  UserPoapsSet,\n  UserRegister,\n  UserRemove,\n} from '../actions';\nimport { UserModel } from '../../models/states/user-interfaces';\nimport { UserStoreErrorsEnum } from '../../models/error-enums';\nimport { MatDialog } from '@angular/material/dialog';\nimport { WalletTypesEnum } from '../../models/states/wallet-interfaces';\nimport { MetamaskService } from '../../services/metamask/metamask.service';\nimport { LedgerService } from '../../services/ledger/ledger.service';\nimport { GenericDialogComponent } from '../../widgets/generic-dialog';\nimport { PoapService } from 'src/app/services/poap';\nimport { generalConfigurations } from 'src/app/configurations';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class UserEffects {\n  constructor(\n    private actions$: Actions,\n    public route: Router,\n    public userService: UserService,\n    public translationService: TranslationService,\n    public userSessionService: UserSessionService,\n    public metamaskService: MetamaskService,\n    public trezorService: TrezorService,\n    public ledgerService: LedgerService,\n    public poapService: PoapService,\n    public store: Store<UserModel>,\n    public ngZone: NgZone,\n    public dialog: MatDialog\n  ) {}\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<UserEffectsInit>(InitEffectsUserState),\n        filter((r) => {\n          if (\n            globalAny.canvasEffectsInitialised === undefined ||\n            globalAny.canvasEffectsInitialised[InitEffectsUserState] === true\n          ) {\n            return false;\n          }\n          return true;\n        }),\n        switchMap((r) => {\n          const timeNow = new Date().getTime();\n          const userSessionStored = this.userSessionService.loadUserSession();\n          if (userSessionStored === undefined || userSessionStored === null) {\n            return of(false);\n          }\n          const userData = JSON.parse(userSessionStored) as UserModel;\n          const defaultChainId = this.userSessionService.getDefaultChainId();\n          if (userData.connectType === WalletTypesEnum.METAMASK) {\n            this.metamaskService.chainChangedDetectionDaemon();\n          }\n          if (\n            userData.connectType === WalletTypesEnum.METAMASK &&\n            this.metamaskService.getChainId() != defaultChainId\n          ) {\n            const dialogRef = this.dialog.open(GenericDialogComponent, {\n              data: {\n                message: 'GENERIC.NETWORK_CHANGED_INCOMPATIBLE',\n              },\n              panelClass: 'cos-generic-dialog',\n            });\n            this.store.dispatch(new UserRemove());\n            return of(false);\n          }\n          const userDataParsed = JSON.parse(userSessionStored as string);\n          this.store.dispatch(new UserAdd(userDataParsed));\n          globalAny.canvasEffectsInitialised[InitEffectsUserState] = true;\n          if (generalConfigurations.enablePoapResolution === false) {\n            return of(false);\n          }\n          return this.poapService.getPoaps(userDataParsed.walletAddress);\n        }),\n        map((r) => {\n          if (r === false) {\n            this.store.dispatch(\n              new UserPoapsSet({\n                poapsResolved: true,\n                poaps: [],\n                poapTokens: [],\n              })\n            );\n            return;\n          }\n          const userPoaps = this.poapService.getPoapIds(r);\n          const userPoapTokens = this.poapService.getPoapTokens(r);\n          if (userPoaps === false) {\n            this.store.dispatch(\n              new UserPoapsSet({\n                poapsResolved: true,\n                poaps: [],\n                poapTokens: [],\n              })\n            );\n            return;\n          }\n          this.store.dispatch(\n            new UserPoapsSet({\n              poapsResolved: true,\n              poaps: userPoaps,\n              poapTokens: userPoapTokens,\n            })\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n\n  userRemove$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<UserRemove>(RemoveUser),\n        map((action) => {\n          this.userSessionService.quitUserSession();\n        })\n      ),\n    { dispatch: false }\n  );\n\n  userRegister$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<UserRegister>(RegisterUser),\n        delay(1000),\n        switchMap((action) => {\n          const timeNow = new Date().getTime();\n          const defaultChainId = this.userSessionService.getDefaultChainId();\n          if (\n            action.payload.walletType === WalletTypesEnum.METAMASK &&\n            this.metamaskService.getChainId() != defaultChainId\n          ) {\n            this.store.dispatch(new UserRemove());\n            return of(false);\n          }\n          switch (action.payload.walletType) {\n            case WalletTypesEnum.WALLET_CONNECT:\n              {\n                return of([\n                  timeNow,\n                  action.payload.address,\n                  action.payload.walletType,\n                ]);\n              }\n              break;\n            case WalletTypesEnum.METAMASK:\n              {\n                return this.metamaskService.connect(timeNow).pipe(\n                  switchMap((r: any) => {\n                    if (r === false) {\n                      return of(false);\n                    }\n                    return of([timeNow, r, action.payload.walletType]);\n                  })\n                );\n              }\n              break;\n            case WalletTypesEnum.TREZOR:\n              {\n                return this.trezorService.connect(timeNow).pipe(\n                  switchMap((r: any) => {\n                    if (r === false) {\n                      return of(false);\n                    }\n                    return of([timeNow, r, action.payload.walletType]);\n                  })\n                );\n              }\n              break;\n            case WalletTypesEnum.LEDGER:\n              {\n                return this.ledgerService.createTransport().pipe(\n                  timeout(5000),\n                  delay(500),\n                  switchMap((t) => {\n                    if (t === false) {\n                      return of(UserStoreErrorsEnum.LEDGER_NO_DEVICE_SELECTED);\n                    }\n                    return this.ledgerService.connect(timeNow);\n                  }),\n                  switchMap((r: any) => {\n                    if (r === false) {\n                      return of(UserStoreErrorsEnum.LEDGER_NO_DEVICE_SELECTED);\n                    }\n                    return of([timeNow, r, action.payload.walletType]);\n                  }),\n                  catchError((e) => {\n                    return of(UserStoreErrorsEnum.LEDGER_NO_DEVICE_SELECTED);\n                  })\n                );\n              }\n              break;\n          }\n        }),\n        map((r: any) => {\n          if (r === UserStoreErrorsEnum.LEDGER_NO_DEVICE_SELECTED) {\n            this.store.dispatch(new UserErrorSet(r));\n            return;\n          }\n          if (r === false) {\n            this.store.dispatch(\n              new UserErrorSet(UserStoreErrorsEnum.CONNECT_ERROR)\n            );\n            return;\n          }\n          const [timestamp, address, walletType] = r;\n          const userSession = {\n            connectSignature: undefined,\n            timestamp: timestamp,\n            walletAddress: address,\n            originalConnectAddress: address,\n            deviceLanguage: navigator.language || 'en-US',\n            connectType: walletType,\n          } as UserModel;\n          globalAny.chainAccount = userSession;\n          this.store.dispatch(new UserAdd(userSession));\n          if (walletType === WalletTypesEnum.METAMASK) {\n            this.metamaskService.chainChangedDetectionDaemon();\n          }\n          this.userSessionService.saveUserSession(userSession);\n          return;\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport * as ethers from 'ethers';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  CurrencyExchangeService,\n  CurrencyService,\n  LedgerService,\n  MiscUtilsService,\n  PaymentEffectsService,\n  PaymentErrorService,\n  PaymentService,\n  PaymentStorageService,\n  TranslationService,\n  TrezorService,\n  UserService,\n  WalletService,\n} from '../../services';\nimport {\n  PaymentErrorCodes,\n  PaymentModel,\n  PaymentStateModel,\n  PaymentTypesEnum,\n} from '../../models/states/payment-interfaces';\nimport { PagesFacadeService, UserFacadeService } from '../facades';\nimport { MetamaskService } from '../../services/metamask';\nimport {\n  AddOnePayment,\n  ArchiveAllPayment,\n  CheckPaymentFulfilled,\n  InitEffectsPayments,\n  PaymentAddOne,\n  PaymentArchiveAll,\n  PaymentCancelled,\n  PaymentCheckFulfilled,\n  PaymentRemoveAll,\n  PaymentRemoveOne,\n  PaymentsEffectsInit,\n  PaymentUpsertMany,\n  PaymentUpsertOne,\n  RemoveAllPayment,\n  UpsertOnePayment,\n} from '../actions';\nimport {\n  catchError,\n  filter,\n  map,\n  mergeMap,\n  switchMap,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { from, interval, of, Subject } from 'rxjs';\nimport {\n  getCurrentNetworkChainId,\n  getCurrentUser,\n  getPayments,\n} from '../selectors';\nimport { WalletTypesEnum } from 'src/app/models/states/wallet-interfaces';\nimport { BigNumber, utils } from 'ethers';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { generalConfigurations } from 'src/app/configurations';\nimport { WalletConnectService } from 'src/app/services/wallet-connect';\nimport { getTransactionByNonce } from 'find-replacement-tx';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class PaymentEffects {\n  staticPaymentTranslatedTexts;\n  staticGenericTranslatedTexts;\n  constructor(\n    private actions$: Actions,\n    protected paymentService: PaymentService,\n    protected walletService: WalletService,\n    protected userService: UserService,\n    protected pagesFacade: PagesFacadeService,\n    protected paymentErrorService: PaymentErrorService,\n    protected userFacadeService: UserFacadeService,\n    protected store: Store<PaymentStateModel>,\n    protected translationService: TranslationService,\n    protected currencyService: CurrencyService,\n    protected currencyExchangeService: CurrencyExchangeService,\n    protected metamaskService: MetamaskService,\n    protected walletConnectService: WalletConnectService,\n    protected trezorService: TrezorService,\n    protected paymentStorageService: PaymentStorageService,\n    protected ledgerService: LedgerService,\n    protected miscUtils: MiscUtilsService,\n    protected snackBar: MatSnackBar,\n    protected paymentEffectsService: PaymentEffectsService,\n    protected ngZone: NgZone\n  ) {\n    this.staticPaymentTranslatedTexts =\n      this.translationService.getCacheableLanguagekeys('PAYMENT');\n    this.staticGenericTranslatedTexts =\n      this.translationService.getCacheableLanguagekeys('GENERIC');\n  }\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PaymentsEffectsInit>(InitEffectsPayments),\n        filter((r) => {\n          if (\n            globalAny.canvasEffectsInitialised === undefined ||\n            globalAny.canvasEffectsInitialised[InitEffectsPayments] === true\n          ) {\n            return false;\n          }\n          return true;\n        }),\n        switchMap((r) => {\n          const payments = this.paymentStorageService.loadPayments();\n          if (payments !== false) {\n            this.store.dispatch(\n              new PaymentUpsertMany(payments as any as PaymentModel[])\n            );\n          }\n          if (payments === false || payments === null || payments.length <= 0) {\n            return this.currencyExchangeService.getPrices();\n          }\n          for (const p of payments) {\n            if (\n              p.paymentHash !== null &&\n              p.paymentHash !== '' &&\n              p.paymentStatus === false\n            ) {\n              this.store.dispatch(new CheckPaymentFulfilled(p));\n            }\n          }\n          globalAny.canvasEffectsInitialised[InitEffectsPayments] = true;\n          return this.currencyExchangeService.getPrices();\n        })\n      ),\n    { dispatch: false }\n  );\n\n  addPayment$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PaymentAddOne>(AddOnePayment),\n        withLatestFrom(\n          this.store.pipe(select(getPayments)),\n          this.store.pipe(select(getCurrentUser)),\n          this.store.pipe(select(getCurrentNetworkChainId))\n        ),\n        switchMap(([action, payments, user, chainId]: any[]) => {\n          const provider = globalAny.canvasProvider;\n          return this.paymentService.getGasPrice(provider).pipe(\n            switchMap((gasPrice) => {\n              return of([action, user, provider, chainId, gasPrice]);\n            })\n          );\n        }),\n        switchMap(([action, user, provider, chainId, gasPrice]: any[]) => {\n          return this.paymentService\n            .getWalletNonce(provider, user.walletAddress)\n            .pipe(\n              switchMap((nonce) => {\n                return of([action, user, provider, chainId, gasPrice, nonce]);\n              })\n            );\n        }),\n        switchMap(\n          ([action, user, provider, chainId, gasPrice, nonce]: any[]) => {\n            const preparedTx = this.paymentService.prepareTransaction(\n              chainId,\n              nonce,\n              action.payload.paymentMarketAddress,\n              action.payload.paymentGasLimit,\n              gasPrice.gasPrice,\n              action.payload\n            );\n            this.snackBar.open(\n              this.staticGenericTranslatedTexts.PENDING_TRANSACTION_CERATED,\n              'close',\n              {\n                horizontalPosition: 'center',\n                verticalPosition: 'bottom',\n                duration: 5000,\n              }\n            );\n            if (user.connectType === WalletTypesEnum.LEDGER) {\n              const txToFilter = {\n                ...preparedTx,\n                gasLimit: preparedTx.gas,\n                value:\n                  preparedTx.value === '0'\n                    ? '0x0'\n                    : ethers.BigNumber.from(preparedTx.value).toHexString(),\n              };\n              delete txToFilter.gas;\n              const txHex = utils.serializeTransaction(txToFilter);\n              return this.ledgerService.signPayment(txHex).pipe(\n                switchMap((signed: any) => {\n                  const signedPacked = utils.serializeTransaction(txToFilter, {\n                    v: BigNumber.from('0x' + signed.v).toNumber(),\n                    r: '0x' + signed.r,\n                    s: '0x' + signed.s,\n                  });\n                  return from(provider.sendTransaction(signedPacked));\n                }),\n                switchMap((r) => {\n                  return of([action, (r as any).hash, nonce]);\n                })\n              );\n            }\n            if (user.connectType === WalletTypesEnum.WALLET_CONNECT) {\n              const txToFilter = {\n                ...preparedTx,\n                from: user.walletAddress,\n              };\n              delete txToFilter.gasPrice;\n              delete txToFilter.nonce;\n              return this.walletConnectService.signPayment(txToFilter).pipe(\n                switchMap((r) => {\n                  return of([action, r, nonce]);\n                })\n              );\n            }\n            if (user.connectType === WalletTypesEnum.METAMASK) {\n              const txToFilter = {\n                ...preparedTx,\n                from: user.walletAddress,\n              };\n              delete txToFilter.gasPrice;\n              delete txToFilter.nonce;\n              return this.metamaskService.signPayment([txToFilter]).pipe(\n                switchMap((r) => {\n                  return of([action, r, nonce]);\n                })\n              );\n            }\n            if (user.connectType === WalletTypesEnum.TREZOR) {\n              return this.trezorService.signPayment(preparedTx).pipe(\n                switchMap((signed: any) => {\n                  return from(provider.sendTransaction(signed as string));\n                }),\n                switchMap((r) => {\n                  return of([action, r, nonce]);\n                })\n              );\n            }\n          }\n        ),\n        switchMap(([action, hash, nonce]) => {\n          if (hash === false) {\n            this.store.dispatch(new PaymentRemoveOne(action.payload.id));\n            this.snackBar.open(\n              this.staticPaymentTranslatedTexts['PAYMENT_CANCELLED'],\n              'close',\n              {\n                horizontalPosition: 'center',\n                verticalPosition: 'bottom',\n                duration: 15000,\n              }\n            );\n            this.store.dispatch(new PaymentCancelled());\n            this.store.dispatch(new PaymentRemoveOne(action.payload.id));\n            return of(false);\n          }\n          this.store.dispatch(\n            new PaymentUpsertOne({\n              ...action.payload,\n              paymentStatus: false,\n              paymentHash: hash,\n              paymentNonce: nonce,\n            })\n          );\n          const paymentResolved = new Subject<boolean>();\n          return this.pagesFacade.pageVisibility$.pipe(\n            withLatestFrom(this.store.pipe(select(getPayments))),\n            takeUntil(paymentResolved),\n            map((pvp) => {\n              const [pv, payments] = pvp;\n              const payment = payments[action.payload.id];\n              if (\n                payment &&\n                'paymentStatus' in payment &&\n                payment.paymentStatus === true\n              ) {\n                paymentResolved.next(false);\n                return;\n              }\n              if (pv === true) {\n                this.store.dispatch(\n                  new CheckPaymentFulfilled({\n                    ...action.payload,\n                    paymentHash: hash,\n                    paymentNonce: nonce,\n                  })\n                );\n              }\n            })\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n\n  upsertPayment$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PaymentUpsertOne>(UpsertOnePayment),\n        withLatestFrom(this.store.pipe(select(getPayments))),\n        switchMap(([a, paymentState]) => {\n          const payments = paymentState as PaymentModel[];\n          let payment;\n          for (const p of payments) {\n            if (p.id === a.payload.id) {\n              payment = a.payload;\n            }\n          }\n          return of(payments);\n        }),\n        map((p) => {\n          return this.paymentStorageService.savePayments(p);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  archiveAllPayment$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PaymentArchiveAll>(ArchiveAllPayment),\n        withLatestFrom(this.store.pipe(select(getPayments))),\n        map(([action, payments]) => {\n          this.paymentStorageService.savePayments(payments);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  removeAllPayment$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PaymentRemoveAll>(RemoveAllPayment),\n        map((action) => {\n          this.paymentStorageService.removePayments();\n        })\n      ),\n    { dispatch: false }\n  );\n\n  userCheckPaymentStatus$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CheckPaymentFulfilled>(PaymentCheckFulfilled),\n        mergeMap((action) => {\n          const hasResolved = new Subject<boolean>();\n          return interval(generalConfigurations.timeToUpdateCheckoutPipe).pipe(\n            takeUntil(hasResolved),\n            switchMap((i) => {\n              const provider = globalAny.canvasProvider;\n              if (provider === undefined) {\n                return of(false);\n              }\n              return from(provider.getBlockNumber()).pipe(\n                switchMap((blockNumber) => {\n                  if (\n                    blockNumber === null ||\n                    blockNumber === false ||\n                    blockNumber === undefined\n                  ) {\n                    throw false;\n                  }\n                  const searchTxFromBlock = (blockNumber as number) - 5;\n                  const tx = {\n                    from: action.payload.paymentPayer,\n                    to: action.payload.paymentPayee,\n                    nonce: action.payload.paymentNonce,\n                  };\n                  return from(\n                    provider.getTransactionReceipt(action.payload.paymentHash)\n                  ).pipe(\n                    switchMap((foundTx) => {\n                      if (foundTx === null || foundTx === false) {\n                        return from(\n                          getTransactionByNonce(\n                            provider,\n                            searchTxFromBlock,\n                            tx.from,\n                            tx.nonce\n                          )\n                        ).pipe(\n                          switchMap((r) => {\n                            if (r === null) {\n                              return of(null);\n                            }\n                            return from(provider.getTransactionReceipt(r.hash));\n                          })\n                        );\n                      }\n                      return of(foundTx);\n                    }),\n                    catchError((e) => {\n                      return of(null);\n                    })\n                  );\n                }),\n                map((r: any) => {\n                  if (r === null || r === undefined) {\n                    return;\n                  }\n                  if (r.status === 0) {\n                    this.store.dispatch(\n                      new PaymentUpsertOne({\n                        id: action.payload.id,\n                        paymentHash: action.payload.paymentHash,\n                        paymentStatus: false,\n                        paymentError: PaymentErrorCodes.PAYMENT_FAILURE,\n                      })\n                    );\n                    hasResolved.next(false);\n                    return;\n                  }\n                  if (\n                    r.status === 1 &&\n                    r.confirmations >=\n                      generalConfigurations.maxConfirmationsUntilTxFinal\n                  ) {\n                    this.store.dispatch(\n                      new PaymentUpsertOne({\n                        id: action.payload.id,\n                        paymentDate:\n                          action.payload.paymentType === PaymentTypesEnum.COMMIT\n                            ? new Date().getTime()\n                            : action.payload.paymentDate,\n                        paymentHash: action.payload.paymentHash,\n                        paymentStatus: true,\n                        paymentError: PaymentErrorCodes.NONE,\n                      })\n                    );\n                    hasResolved.next(false);\n                    return;\n                  }\n                })\n              );\n            })\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { filter, map, withLatestFrom } from 'rxjs/operators';\nimport { ENSBookmarkStateModel } from 'src/app/models/states/ens-bookmark-interfaces';\nimport { BookmarksServiceService } from 'src/app/services/bookmarks';\nimport {\n  AddOneENSBookmark,\n  ENSBookmarkAddOne,\n  ENSBookmarkEffectsInit,\n  ENSBookmarkRemoveAll,\n  ENSBookmarkRemoveOne,\n  ENSBookmarkUpsertMany,\n  ENSBookmarkUpsertOne,\n  InitEffectsENSBookmark,\n  RemoveAllENSBookmark,\n  RemoveOneENSBookmark,\n  UpsertManyENSBookmark,\n  UpsertOneENSBookmark,\n} from '../actions';\nimport { getENSBookmarks } from '../selectors';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class ENSBookmarkEffects {\n  constructor(\n    private actions$: Actions,\n    protected bookMarkService: BookmarksServiceService,\n    public store: Store<ENSBookmarkStateModel>\n  ) {}\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkEffectsInit>(InitEffectsENSBookmark),\n        filter((r) => {\n          if (\n            globalAny.canvasEffectsInitialised === undefined ||\n            globalAny.canvasEffectsInitialised[InitEffectsENSBookmark] === true\n          ) {\n            return false;\n          }\n          return true;\n        }),\n        map((p) => {\n          const bookmarks = this.bookMarkService.loadBookmarksAndFeed();\n          for (const b of Object.keys(bookmarks)) {\n            this.store.dispatch(\n              new ENSBookmarkAddOne(\n                {\n                  id: bookmarks[b].labelName,\n                  ...bookmarks[b],\n                },\n                false\n              )\n            );\n          }\n          globalAny.canvasEffectsInitialised[InitEffectsENSBookmark] = true;\n        })\n      ),\n    {\n      dispatch: false,\n    }\n  );\n\n  addOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkAddOne>(AddOneENSBookmark),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeAllBookmarks$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkRemoveAll>(RemoveAllENSBookmark),\n        filter((action) => action.toSave === true),\n        withLatestFrom(this.store.pipe(select(getENSBookmarks))),\n        map((state) => {\n          const [action, bookmarks] = state;\n          this.bookMarkService.removeAllBookmarks();\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkRemoveOne>(RemoveOneENSBookmark),\n        filter((action) => action.toSave === true),\n        withLatestFrom(this.store.pipe(select(getENSBookmarks))),\n        map((state) => {\n          const [action, bookmarks] = state;\n          this.bookMarkService.removeBookmark(bookmarks, action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkUpsertOne>(UpsertOneENSBookmark),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertManyBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkUpsertMany>(UpsertManyENSBookmark),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveAllBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { filter, map, withLatestFrom } from 'rxjs/operators';\nimport { ENSRegistrationStateModel } from 'src/app/models/states/ens-registration-interfaces';\nimport {\n  RegistrationFacilityService,\n  RegistrationServiceService,\n} from 'src/app/services/registration';\nimport {\n  AddOneENSRegistration,\n  ENSRegistrationAddOne,\n  ENSRegistrationEffectsInit,\n  ENSRegistrationRemoveAll,\n  ENSRegistrationUpsertMany,\n  ENSRegistrationUpsertOne,\n  InitEffectsENSRegistration,\n  RemoveAllENSRegistration,\n  RemoveOneENSRegistration,\n  UpsertManyENSRegistration,\n  UpsertOneENSRegistration,\n} from '../actions';\nimport { getENSRegistrations } from '../selectors';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class ENSRegistrationEffects {\n  constructor(\n    private actions$: Actions,\n    protected registrationService: RegistrationServiceService,\n    protected registrationFacilityService: RegistrationFacilityService,\n    public store: Store<ENSRegistrationStateModel>\n  ) {}\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationEffectsInit>(InitEffectsENSRegistration),\n        filter((r) => {\n          if (\n            globalAny.canvasEffectsInitialised === undefined ||\n            globalAny.canvasEffectsInitialised[InitEffectsENSRegistration] ===\n              true\n          ) {\n            return false;\n          }\n          return true;\n        }),\n        map((p) => {\n          const registrations =\n            this.registrationService.loadRegistrationsAndFeed();\n          for (const b of Object.keys(registrations)) {\n            this.store.dispatch(\n              new ENSRegistrationAddOne(\n                {\n                  id: registrations[b].labelName,\n                  ...registrations[b],\n                },\n                false\n              )\n            );\n          }\n          globalAny.canvasEffectsInitialised[InitEffectsENSRegistration] = true;\n        })\n      ),\n    {\n      dispatch: false,\n    }\n  );\n\n  addOneRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationAddOne>(AddOneENSRegistration),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.registrationService.saveRegistrations(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeOneRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationAddOne>(RemoveOneENSRegistration),\n        filter((action) => action.toSave === true),\n        withLatestFrom(this.store.pipe(select(getENSRegistrations))),\n        map((state) => {\n          const [action, registrations] = state;\n          this.registrationService.removeRegistration(\n            registrations,\n            action.payload.labelName\n          );\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeAllRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationRemoveAll>(RemoveAllENSRegistration),\n        map(() => {\n          this.registrationService.removeAllRegistrations();\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertOneRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationUpsertOne>(UpsertOneENSRegistration),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.registrationService.saveRegistrations(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertManyRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationUpsertMany>(UpsertManyENSRegistration),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.registrationService.saveAllRegistrations(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { of, Subject, timer } from 'rxjs';\nimport {\n  delayWhen,\n  filter,\n  map,\n  retryWhen,\n  switchMap,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { generalConfigurations } from 'src/app/configurations';\nimport { CategoriesRootModel } from 'src/app/models/category';\nimport { ResponseModel } from 'src/app/models/http';\nimport { CategoriesStateModel } from 'src/app/models/states/categories-interfaces';\nimport { BookmarksServiceService } from 'src/app/services/bookmarks';\nimport { CategoriesDataService } from 'src/app/services/categories-data';\nimport { EnsService } from 'src/app/services/ens';\nimport {\n  AddOneCategory,\n  CategoryAddOne,\n  CategoryEffectsInit,\n  CategoryMetadataSet,\n  CategoryRemoveAll,\n  CategoryRemoveOne,\n  CategoryRootVolumeDataSet,\n  CategoryUpsertMany,\n  CategoryUpsertOne,\n  InitEffectsCategory,\n  RemoveAllCategory,\n  RemoveOneCategory,\n  UpsertManyCategory,\n  UpsertOneCategory,\n} from '../actions';\nimport { getCategorys } from '../selectors';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class CategoryEffects {\n  activeProviders;\n  categoryMetdata;\n\n  constructor(\n    private actions$: Actions,\n    protected bookMarkService: BookmarksServiceService,\n    protected ensService: EnsService,\n    protected httpClient: HttpClient,\n    protected categoriesDataService: CategoriesDataService,\n    public store: Store<CategoriesStateModel>\n  ) {}\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CategoryEffectsInit>(InitEffectsCategory),\n        filter((r) => {\n          if (\n            globalAny.canvasEffectsInitialised === undefined ||\n            globalAny.canvasEffectsInitialised[InitEffectsCategory] === true\n          ) {\n            return false;\n          }\n          return true;\n        }),\n        switchMap((p) => {\n          const provider = globalAny.canvasProvider;\n          const hasRootCategoryDataBeenResolved = new Subject<boolean>();\n          if (generalConfigurations.categoriesUseFallback === true) {\n            return this.categoriesDataService\n              .getCategoriesRootFallbackData()\n              .pipe(\n                switchMap((r) => {\n                  if (r === false || r === null) {\n                    throw false;\n                  }\n                  const categoryMetdata = r as CategoriesRootModel;\n                  hasRootCategoryDataBeenResolved.next(false);\n                  return of(categoryMetdata);\n                })\n              );\n          }\n          return this.ensService\n            .getDomainContentHash(\n              provider,\n              generalConfigurations.categoriesDomain\n            )\n            .pipe(\n              takeUntil(hasRootCategoryDataBeenResolved),\n              switchMap((c) => {\n                return this.httpClient.get(c as any);\n              }),\n              switchMap((r) => {\n                if (r === false || r === null) {\n                  throw false;\n                }\n                const categoryMetdata = r as CategoriesRootModel;\n                hasRootCategoryDataBeenResolved.next(false);\n                return of(categoryMetdata);\n              }),\n              retryWhen((error) =>\n                error.pipe(\n                  delayWhen((e) => {\n                    return timer(\n                      generalConfigurations.timeToUpdateCheckoutPipe\n                    );\n                  })\n                )\n              )\n            );\n        }),\n        switchMap((categoryMetdataRaw) => {\n          const categoriesRootProviders = categoryMetdataRaw.rootDataProviders;\n          this.categoryMetdata = categoryMetdataRaw;\n          this.store.dispatch(new CategoryMetadataSet(categoryMetdataRaw));\n          return this.categoriesDataService.pingCategoriesDataProviders(\n            categoriesRootProviders\n          );\n        }),\n        switchMap((r) => {\n          this.activeProviders = r.filter((p) => p !== false);\n          const providerChosen = this.activeProviders[0] as any;\n          globalAny.canvasEffectsInitialised[InitEffectsCategory] = true;\n\n          this.store.dispatch(\n            new CategoryMetadataSet({\n              ...this.categoryMetdata,\n              activeProviders: this.activeProviders.map((r) => r.provider),\n            })\n          );\n          if (this.activeProviders.length <= 0) {\n            return of(false);\n          }\n          return this.categoriesDataService.getCategoriesRootVolumeData(\n            providerChosen.provider\n          );\n        }),\n        map((r) => {\n          if (r === false) {\n            return;\n          }\n          const categoryRootVolumeData = (r as ResponseModel).result;\n          this.store.dispatch(\n            new CategoryRootVolumeDataSet(categoryRootVolumeData as any)\n          );\n        })\n      ),\n    {\n      dispatch: false,\n    }\n  );\n\n  addOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CategoryAddOne>(AddOneCategory),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeAllBookmarks$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CategoryRemoveAll>(RemoveAllCategory),\n        filter((action) => action.toSave === true),\n        withLatestFrom(this.store.pipe(select(getCategorys))),\n        map((state) => {\n          const [action, bookmarks] = state;\n          this.bookMarkService.removeAllBookmarks();\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CategoryRemoveOne>(RemoveOneCategory),\n        filter((action) => action.toSave === true),\n        withLatestFrom(this.store.pipe(select(getCategorys))),\n        map((state) => {\n          const [action, bookmarks] = state;\n          this.bookMarkService.removeBookmark(bookmarks, action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CategoryUpsertOne>(UpsertOneCategory),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertManyBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CategoryUpsertMany>(UpsertManyCategory),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveAllBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n}\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {\n  BrowserModule,\n  HAMMER_GESTURE_CONFIG,\n} from '@angular/platform-browser';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MatDialogModule,\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n} from '@angular/material/dialog';\nimport { RouterModule } from '@angular/router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { Intercept } from './services/intercept/intercept';\nimport { HammerJsConf } from './configurations';\nimport { serviceProviders } from './models';\nimport { NetworkStatusDialogComponent } from './widgets/network-status-dialog';\nimport { GenericDialogModule, TranslationModule } from './modules/miscs';\nimport {\n  CategoryReducers,\n  ENSBookmarkReducers,\n  ENSRegistrationReducers,\n  NavigatorButtonsReducers,\n  NavigatorReducers,\n  PagesReducers,\n  PaymentReducers,\n  UserReducers,\n} from './store/reducers';\nimport {\n  CategoryEffects,\n  ENSBookmarkEffects,\n  NavigatorEffects,\n  PagesEffects,\n  PaymentEffects,\n  UserEffects,\n} from './store/effects';\nimport { environment } from '../environments/environment';\nimport { ENSRegistrationEffects } from './store/effects';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [AppComponent, NetworkStatusDialogComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    MatProgressBarModule,\n    MatSnackBarModule,\n    TranslationModule,\n    StoreModule.forRoot(\n      {\n        UserState: UserReducers,\n        NavigatorState: NavigatorReducers,\n        PagesState: PagesReducers,\n        PaymentState: PaymentReducers,\n        NavigatorButtonsState: NavigatorButtonsReducers,\n        ENSRegistrationState: ENSRegistrationReducers,\n        ENSBookmarkState: ENSBookmarkReducers,\n        CategoriesState: CategoryReducers,\n      },\n      {\n        runtimeChecks: {\n          strictActionImmutability: false,\n        },\n      }\n    ),\n    EffectsModule.forRoot([\n      UserEffects,\n      NavigatorEffects,\n      PagesEffects,\n      PaymentEffects,\n      ENSRegistrationEffects,\n      ENSBookmarkEffects,\n      CategoryEffects,\n    ]),\n    environment.deployed === true\n      ? []\n      : StoreDevtoolsModule.instrument({\n          maxAge: 200,\n        }),\n    MatDialogModule,\n    MatButtonModule,\n    GenericDialogModule,\n  ],\n  exports: [\n    NetworkStatusDialogComponent,\n    BrowserModule,\n    HttpClientModule,\n    RouterModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    TranslationModule,\n    MatSnackBarModule,\n    GenericDialogModule,\n  ],\n  providers: [\n    ...serviceProviders,\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: HammerJsConf,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: Intercept,\n      multi: true,\n    },\n    { provide: MAT_DIALOG_DATA, useValue: {} },\n    { provide: MatDialogRef, useValue: {} },\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [NetworkStatusDialogComponent],\n  schemas: [NO_ERRORS_SCHEMA],\n})\nexport class AppModule {}\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\nimport { BehaviorSubject } from 'rxjs';\nimport { BootController } from './boot-control';\n\ndeclare global {\n  interface Window {\n    global: any;\n    process: any;\n    ethereumProvider: any;\n    etherscanProvider: any;\n  }\n}\n(window as any).global = window;\n(window as any).process = window;\n(window as any).process.browser = true;\n(window as any).process.version = '';\n(window as any).process.versions = { node: false };\n(window as any).global.appIsPaused = new BehaviorSubject(false);\n\nif (environment.production === true) {\n  enableProdMode();\n}\n\nexport function main(): any {\n  return platformBrowserDynamic().bootstrapModule(AppModule);\n}\n\nlet mainApp;\nif (module['hot']) {\n  module['hot'].accept();\n}\nconst boot = BootController.getbootControl()\n  .watchReboot()\n  .subscribe(() => {\n    if (mainApp) {\n      if ('ngRef' in window && 'destroy' in window['ngRef']) {\n        window['ngRef'].destroy();\n      }\n      window['ngRef'] = mainApp;\n    }\n    mainApp = main().catch((err) => console.error('Bootstrap error:', err));\n  });\nBootController.getbootControl().restart();\n"],"sourceRoot":"webpack:///","file":"main.9e8dc5d004753e45.js"}